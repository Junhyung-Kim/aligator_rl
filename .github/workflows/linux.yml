name: CI - Linux via CMake

on:
  push:
    branches:
      - main
      - devel
      - 'topic/**'
  pull_request:
env:
  CCACHE_DIR: ~/.ccache
  CTEST_OUTPUT_ON_FAILURE: 1
  CTEST_PARALLEL_LEVEL: 4

defaults:
  run:
    shell: bash -leo pipefail {0} {0}
jobs:
  build-proxnlp:
    name: Build proxnlp
    runs-on: self-hosted
    steps:
    - name: Config for main
      if: github.ref == 'refs/heads/main'
      run: |
        echo "PROXNLP_BRANCH=main" >> $GITHUB_ENV

    - name: Config for others
      if: github.ref != 'refs/heads/main'
      run: |
        echo "PROXNLP_BRANCH=devel" >> $GITHUB_ENV

    - uses: actions/cache@v3
      with:
        key: ${{ runner.os }}
        path: ${{ env.CCACHE_DIR }}

    - uses: actions/checkout@v4
      with:
        ref: ${{ env.PROXNLP_BRANCH }}
        fetch-depth: 0
        path: ./proxnlp
        submodules: recursive
        repository: Simple-Robotics/proxnlp
        token: ${{ secrets.PROXNLP_TOKEN }}

    - name: Install proxnlp
      run: |
        micromamba activate

        cd $GITHUB_WORKSPACE/proxnlp
        mkdir build && cd build

        cmake .. -DBUILD_DOCUMENTATION=OFF \
          -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
          -DCMAKE_BUILD_TYPE=Release
        make -j6 install
        python3 -c "import proxnlp"

  build:
    name: Build proxddp
    needs: build-proxnlp
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Build and install proxddp
      run: |
        micromamba activate

        cd $GITHUB_WORKSPACE
        mkdir build && cd build

        cmake .. -DBUILD_DOCUMENTATION=OFF \
          -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_CROCODDYL_COMPAT:BOOL=ON \
          -DBUILD_WITH_OPENMP_SUPPORT:BOOL=OFF
        make -j4 install
  test:
    needs: build
    runs-on: self-hosted
    name: Run tests
    steps:
      - run: |
          cd $GITHUB_WORKSPACE/build
          make test

    # - name: Uninstall project
    #   run: |
    #     cd build
    #     sudo make uninstall
