name: CI - Linux via CMake

on:
  push:
    branches:
      - main
      - devel
  pull_request:
env:
  CCACHE_DIR: /github/home/.ccache
  CMAKE_PREFIX_PATH: ~/custom_install

jobs:
  build-proxnlp:
    runs-on: self-hosted
    steps:
    - name: Config for main
      if: github.ref == 'refs/heads/main'
      run: |
        echo "PROXNLP_BRANCH=main" >> $GITHUB_ENV

    - name: Config for others
      if: github.ref != 'refs/heads/main'
      run: |
        echo "PROXNLP_BRANCH=devel" >> $GITHUB_ENV

    - name: Setup ccache
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}
        path: ${{ env.CCACHE_DIR }}

    - name: Checkout proxnlp
      uses: actions/checkout@v3
      with:
        ref: ${{ env.PROXNLP_BRANCH }}
        fetch-depth: 0
        path: ./proxnlp
        submodules: recursive
        repository: Simple-Robotics/proxnlp
        token: ${{ secrets.PROXNLP_TOKEN }}

    - name: Install proxnlp
      run: |
        cd $GITHUB_WORKSPACE/proxnlp
        mkdir build
        cd build
        cmake .. -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=~/custom_install -DCMAKE_BUILD_TYPE=Release -DPYTHON_EXECUTABLE=$(which python3) -DINSTALL_DOCUMENTATION:BOOL=OFF
        make -j3 install

  build:
    needs: build-proxnlp
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Build and install proxddp
      run: |
        cd $GITHUB_WORKSPACE
        mkdir build
        cd build
        echo "PYTHONPATH=/builds/custom_install/lib/python3/dist-packages/" >> $GITHUB_ENV
        echo "CTEST_OUTPUT_ON_FAILURE=1" >> $GITHUB_ENV
        echo "CTEST_PARALLEL_LEVEL=4" >> $GITHUB_ENV
        cmake .. -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_INSTALL_PREFIX=~/custom_install -DCMAKE_BUILD_TYPE=Release -DPYTHON_EXECUTABLE=$(which python3) -DINSTALL_DOCUMENTATION:BOOL=OFF -DGENERATE_PYTHON_STUBS:BOOL=OFF -DBUILD_CROCODDYL_COMPAT:BOOL=ON -DBUILD_WITH_OPENMP_SUPPORT:BOOL=OFF
        make install
  test:
    needs: build
    runs-on: self-hosted
    name: Run tests
    steps:
      - run: |
          cd $GITHUB_WORKSPACE/build
          make test

    # - name: Uninstall project
    #   run: |
    #     cd build
    #     sudo make uninstall
