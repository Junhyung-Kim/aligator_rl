set(INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include/proxddp/compat/crocoddyl)
set(CROC_INSTALL_INCLUDE_DIR ${CMAKE_INSTALL_FULL_INCLUDEDIR}/proxddp/compat/crocoddyl)

file(GLOB_RECURSE HEADERS ${INCLUDE_DIR}/*.hpp ${INCLUDE_DIR}/*.hxx)
add_library(${CROC_COMPAT_LIB_NAME} SHARED ${HEADERS})

if(ENABLE_TEMPLATE_INSTANTIATION)
  file(GLOB SOURCES_TEMPL ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
  list(APPEND HEADERS ${HEADERS_TEMPL})

  file(GLOB HEADERS_TEMPL ${INCLUDE_DIR}/*.txx)

  target_sources(${CROC_COMPAT_LIB_NAME} PRIVATE ${HEADERS_TEMPL} ${SOURCES_TEMPL})
endif()

add_project_dependency(crocoddyl REQUIRED)

set_target_properties(
  ${CROC_COMPAT_LIB_NAME}
  PROPERTIES LINKER_LANGUAGE CXX
             LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}
             PUBLIC_HEADER "${HEADERS}"
             VERSION ${PROJECT_VERSION})

target_link_libraries(${CROC_COMPAT_LIB_NAME} PUBLIC ${PROJECT_NAME} crocoddyl::crocoddyl)

install(
  TARGETS ${CROC_COMPAT_LIB_NAME}
  EXPORT ${TARGETS_EXPORT_NAME}
  PUBLIC_HEADER DESTINATION ${CROC_INSTALL_INCLUDE_DIR}
  LIBRARY DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR})
