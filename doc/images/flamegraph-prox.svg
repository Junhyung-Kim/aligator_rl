<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="661.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="5562"><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="0.0000%" y="581" width="0.0180%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>Eigen::LLT&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1&gt;::compute&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="0.0180%" y="581" width="0.0180%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2680%" y="591.50"></text></g><g><title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt;::resize (1 samples, 0.02%)</title><rect x="0.0360%" y="581" width="0.0180%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.2860%" y="591.50"></text></g><g><title>Eigen::internal::Assignment&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0&gt;, Eigen::internal::assign_op&lt;double, double&gt;, Eigen::internal::Dense2Dense, void&gt;::run (1 samples, 0.02%)</title><rect x="0.0539%" y="581" width="0.0180%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="1"/><text x="0.3039%" y="591.50"></text></g><g><title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (1 samples, 0.02%)</title><rect x="0.0719%" y="581" width="0.0180%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="0.3219%" y="591.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;double, double&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (2 samples, 0.04%)</title><rect x="0.0899%" y="581" width="0.0360%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="2"/><text x="0.3399%" y="591.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;double, double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (1 samples, 0.02%)</title><rect x="0.1259%" y="581" width="0.0180%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="1"/><text x="0.3759%" y="591.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (1 samples, 0.02%)</title><rect x="0.1438%" y="581" width="0.0180%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="1"/><text x="0.3938%" y="591.50"></text></g><g><title>Eigen::internal::evaluateProductBlockingSizesHeuristic&lt;double, double, 1, long&gt; (3 samples, 0.05%)</title><rect x="0.1618%" y="581" width="0.0539%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="3"/><text x="0.4118%" y="591.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (1 samples, 0.02%)</title><rect x="0.2157%" y="581" width="0.0180%" height="15" fill="rgb(220,122,19)" fg:x="12" fg:w="1"/><text x="0.4657%" y="591.50"></text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, -1, -1, true&gt; &gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="0.2337%" y="581" width="0.0180%" height="15" fill="rgb(250,228,42)" fg:x="13" fg:w="1"/><text x="0.4837%" y="591.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (1 samples, 0.02%)</title><rect x="0.2517%" y="581" width="0.0180%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="1"/><text x="0.5017%" y="591.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="0.2697%" y="581" width="0.0180%" height="15" fill="rgb(216,20,37)" fg:x="15" fg:w="1"/><text x="0.5197%" y="591.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, -1, -1, true&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="0.2877%" y="581" width="0.0180%" height="15" fill="rgb(206,188,39)" fg:x="16" fg:w="1"/><text x="0.5377%" y="591.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="0.3056%" y="581" width="0.0180%" height="15" fill="rgb(217,207,13)" fg:x="17" fg:w="1"/><text x="0.5556%" y="591.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_15dDifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_INS1I_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS1F_11OuterStrideILin1EEEEELin1ELin1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S21_RS1U_RKNS1_16ArgumentPositionEEEEvEEEENT_11result_typeERS28_ (1 samples, 0.02%)</title><rect x="0.3236%" y="581" width="0.0180%" height="15" fill="rgb(231,73,38)" fg:x="18" fg:w="1"/><text x="0.5736%" y="591.50"></text></g><g><title>__sin_fma (1 samples, 0.02%)</title><rect x="0.3416%" y="581" width="0.0180%" height="15" fill="rgb(225,20,46)" fg:x="19" fg:w="1"/><text x="0.5916%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="0.3596%" y="581" width="0.0360%" height="15" fill="rgb(210,31,41)" fg:x="20" fg:w="2"/><text x="0.6096%" y="591.50"></text></g><g><title>crocoddyl::ActivationModelQuadTpl&lt;double&gt;::calc (2 samples, 0.04%)</title><rect x="0.3955%" y="581" width="0.0360%" height="15" fill="rgb(221,200,47)" fg:x="22" fg:w="2"/><text x="0.6455%" y="591.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calc (2 samples, 0.04%)</title><rect x="0.4315%" y="581" width="0.0360%" height="15" fill="rgb(226,26,5)" fg:x="24" fg:w="2"/><text x="0.6815%" y="591.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calcDiff (3 samples, 0.05%)</title><rect x="0.4675%" y="581" width="0.0539%" height="15" fill="rgb(249,33,26)" fg:x="26" fg:w="3"/><text x="0.7175%" y="591.50"></text></g><g><title>crocoddyl::DifferentialActionDataAbstractTpl&lt;double&gt;::DifferentialActionDataAbstractTpl&lt;crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&gt; (1 samples, 0.02%)</title><rect x="0.5214%" y="581" width="0.0180%" height="15" fill="rgb(235,183,28)" fg:x="29" fg:w="1"/><text x="0.7714%" y="591.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="0.5394%" y="581" width="0.0180%" height="15" fill="rgb(221,5,38)" fg:x="30" fg:w="1"/><text x="0.7894%" y="591.50"></text></g><g><title>crocoddyl::ResidualModelStateTpl&lt;double&gt;::calcDiff (2 samples, 0.04%)</title><rect x="0.5574%" y="581" width="0.0360%" height="15" fill="rgb(247,18,42)" fg:x="31" fg:w="2"/><text x="0.8074%" y="591.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::JintegrateTransport (1 samples, 0.02%)</title><rect x="0.5933%" y="581" width="0.0180%" height="15" fill="rgb(241,131,45)" fg:x="33" fg:w="1"/><text x="0.8433%" y="591.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::diff (1 samples, 0.02%)</title><rect x="0.6113%" y="581" width="0.0180%" height="15" fill="rgb(249,31,29)" fg:x="34" fg:w="1"/><text x="0.8613%" y="591.50"></text></g><g><title>pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::DataTpl (2 samples, 0.04%)</title><rect x="0.6293%" y="581" width="0.0360%" height="15" fill="rgb(225,111,53)" fg:x="35" fg:w="2"/><text x="0.8793%" y="591.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="0.6652%" y="581" width="0.0180%" height="15" fill="rgb(238,160,17)" fg:x="37" fg:w="1"/><text x="0.9152%" y="591.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (4 samples, 0.07%)</title><rect x="0.6832%" y="581" width="0.0719%" height="15" fill="rgb(214,148,48)" fg:x="38" fg:w="4"/><text x="0.9332%" y="591.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (1 samples, 0.02%)</title><rect x="0.7551%" y="581" width="0.0180%" height="15" fill="rgb(232,36,49)" fg:x="42" fg:w="1"/><text x="1.0051%" y="591.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (3 samples, 0.05%)</title><rect x="0.7731%" y="581" width="0.0539%" height="15" fill="rgb(209,103,24)" fg:x="43" fg:w="3"/><text x="1.0231%" y="591.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="0.8270%" y="581" width="0.0180%" height="15" fill="rgb(229,88,8)" fg:x="46" fg:w="1"/><text x="1.0770%" y="591.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="0.8450%" y="581" width="0.0180%" height="15" fill="rgb(213,181,19)" fg:x="47" fg:w="1"/><text x="1.0950%" y="591.50"></text></g><g><title>pinocchio::cholesky::computeMinv&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="0.8630%" y="581" width="0.0180%" height="15" fill="rgb(254,191,54)" fg:x="48" fg:w="1"/><text x="1.1130%" y="591.50"></text></g><g><title>pinocchio::cholesky::internal::Miunit&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt; &gt; (7 samples, 0.13%)</title><rect x="0.8810%" y="581" width="0.1259%" height="15" fill="rgb(241,83,37)" fg:x="49" fg:w="7"/><text x="1.1310%" y="591.50"></text></g><g><title>pinocchio::dIntegrateTransport&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="1.0068%" y="581" width="0.0180%" height="15" fill="rgb(233,36,39)" fg:x="56" fg:w="1"/><text x="1.2568%" y="591.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::KineticEnergyAlgoForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1.0248%" y="581" width="0.0180%" height="15" fill="rgb(226,3,54)" fg:x="57" fg:w="1"/><text x="1.2748%" y="591.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (2 samples, 0.04%)</title><rect x="1.0428%" y="581" width="0.0360%" height="15" fill="rgb(245,192,40)" fg:x="58" fg:w="2"/><text x="1.2928%" y="591.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1.0787%" y="581" width="0.0180%" height="15" fill="rgb(238,167,29)" fg:x="60" fg:w="1"/><text x="1.3287%" y="591.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="1.0967%" y="581" width="0.0180%" height="15" fill="rgb(232,182,51)" fg:x="61" fg:w="1"/><text x="1.3467%" y="591.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="1.1147%" y="581" width="0.0180%" height="15" fill="rgb(231,60,39)" fg:x="62" fg:w="1"/><text x="1.3647%" y="591.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (1 samples, 0.02%)</title><rect x="1.1327%" y="581" width="0.0180%" height="15" fill="rgb(208,69,12)" fg:x="63" fg:w="1"/><text x="1.3827%" y="591.50"></text></g><g><title>pinocchio::integrate&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (3 samples, 0.05%)</title><rect x="1.1507%" y="581" width="0.0539%" height="15" fill="rgb(235,93,37)" fg:x="64" fg:w="3"/><text x="1.4007%" y="591.50"></text></g><g><title>proxddp::BaseLogger::log&lt;double&gt; (1 samples, 0.02%)</title><rect x="1.2046%" y="581" width="0.0180%" height="15" fill="rgb(213,116,39)" fg:x="67" fg:w="1"/><text x="1.4546%" y="591.50"></text></g><g><title>[[heap]] (69 samples, 1.24%)</title><rect x="0.0000%" y="597" width="1.2406%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="69"/><text x="0.2500%" y="607.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.02%)</title><rect x="1.2226%" y="581" width="0.0180%" height="15" fill="rgb(206,96,30)" fg:x="68" fg:w="1"/><text x="1.4726%" y="591.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (5 samples, 0.09%)</title><rect x="1.2406%" y="581" width="0.0899%" height="15" fill="rgb(218,138,4)" fg:x="69" fg:w="5"/><text x="1.4906%" y="591.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (3 samples, 0.05%)</title><rect x="1.3305%" y="581" width="0.0539%" height="15" fill="rgb(250,191,14)" fg:x="74" fg:w="3"/><text x="1.5805%" y="591.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 1, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, false, 0&gt;::run (1 samples, 0.02%)</title><rect x="1.3844%" y="581" width="0.0180%" height="15" fill="rgb(239,60,40)" fg:x="77" fg:w="1"/><text x="1.6344%" y="591.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_13IntegrateStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (2 samples, 0.04%)</title><rect x="1.4024%" y="581" width="0.0360%" height="15" fill="rgb(206,27,48)" fg:x="78" fg:w="2"/><text x="1.6524%" y="591.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calcDiff (1 samples, 0.02%)</title><rect x="1.4383%" y="581" width="0.0180%" height="15" fill="rgb(225,35,8)" fg:x="80" fg:w="1"/><text x="1.6883%" y="591.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (3 samples, 0.05%)</title><rect x="1.4563%" y="581" width="0.0539%" height="15" fill="rgb(250,213,24)" fg:x="81" fg:w="3"/><text x="1.7063%" y="591.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="1.5102%" y="581" width="0.0180%" height="15" fill="rgb(247,123,22)" fg:x="84" fg:w="1"/><text x="1.7602%" y="591.50"></text></g><g><title>proxddp::compat::croc::CrocActionModelWrapperTpl&lt;double&gt;::computeDerivatives (5 samples, 0.09%)</title><rect x="1.5282%" y="581" width="0.0899%" height="15" fill="rgb(231,138,38)" fg:x="85" fg:w="5"/><text x="1.7782%" y="591.50"></text></g><g><title>proxddp::compat::croc::CrocActionModelWrapperTpl&lt;double&gt;::evaluate (2 samples, 0.04%)</title><rect x="1.6181%" y="581" width="0.0360%" height="15" fill="rgb(231,145,46)" fg:x="90" fg:w="2"/><text x="1.8681%" y="591.50"></text></g><g><title>[[stack]] (24 samples, 0.43%)</title><rect x="1.2406%" y="597" width="0.4315%" height="15" fill="rgb(251,118,11)" fg:x="69" fg:w="24"/><text x="1.4906%" y="607.50"></text></g><g><title>proxddp::compat::croc::StateWrapperTpl&lt;double&gt;::difference_impl (1 samples, 0.02%)</title><rect x="1.6541%" y="581" width="0.0180%" height="15" fill="rgb(217,147,25)" fg:x="92" fg:w="1"/><text x="1.9041%" y="591.50"></text></g><g><title>[anon] (1 samples, 0.02%)</title><rect x="1.6721%" y="597" width="0.0180%" height="15" fill="rgb(247,81,37)" fg:x="93" fg:w="1"/><text x="1.9221%" y="607.50"></text></g><g><title>__cxxabiv1::__si_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="1.6721%" y="581" width="0.0180%" height="15" fill="rgb(209,12,38)" fg:x="93" fg:w="1"/><text x="1.9221%" y="591.50"></text></g><g><title>Eigen::LLT&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1&gt;::compute&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1.6900%" y="581" width="0.0180%" height="15" fill="rgb(227,1,9)" fg:x="94" fg:w="1"/><text x="1.9400%" y="591.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;double, double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (1 samples, 0.02%)</title><rect x="1.7080%" y="581" width="0.0180%" height="15" fill="rgb(248,47,43)" fg:x="95" fg:w="1"/><text x="1.9580%" y="591.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Product&lt;Eigen::DiagonalWrapper&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, 1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (1 samples, 0.02%)</title><rect x="1.7260%" y="581" width="0.0180%" height="15" fill="rgb(221,10,30)" fg:x="96" fg:w="1"/><text x="1.9760%" y="591.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (1 samples, 0.02%)</title><rect x="1.7440%" y="581" width="0.0180%" height="15" fill="rgb(210,229,1)" fg:x="97" fg:w="1"/><text x="1.9940%" y="591.50"></text></g><g><title>Eigen::internal::evaluateProductBlockingSizesHeuristic&lt;double, double, 4, long&gt; (1 samples, 0.02%)</title><rect x="1.7620%" y="581" width="0.0180%" height="15" fill="rgb(222,148,37)" fg:x="98" fg:w="1"/><text x="2.0120%" y="591.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (2 samples, 0.04%)</title><rect x="1.7799%" y="581" width="0.0360%" height="15" fill="rgb(234,67,33)" fg:x="99" fg:w="2"/><text x="2.0299%" y="591.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 2, 0, false, false&gt;::operator (1 samples, 0.02%)</title><rect x="1.8159%" y="581" width="0.0180%" height="15" fill="rgb(247,98,35)" fg:x="101" fg:w="1"/><text x="2.0659%" y="591.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (2 samples, 0.04%)</title><rect x="1.8339%" y="581" width="0.0360%" height="15" fill="rgb(247,138,52)" fg:x="102" fg:w="2"/><text x="2.0839%" y="591.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 0, false, true&gt;::operator (1 samples, 0.02%)</title><rect x="1.8698%" y="581" width="0.0180%" height="15" fill="rgb(213,79,30)" fg:x="104" fg:w="1"/><text x="2.1198%" y="591.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (1 samples, 0.02%)</title><rect x="1.8878%" y="581" width="0.0180%" height="15" fill="rgb(246,177,23)" fg:x="105" fg:w="1"/><text x="2.1378%" y="591.50"></text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 1, false, double, 0, false, 0&gt;::run (1 samples, 0.02%)</title><rect x="1.9058%" y="581" width="0.0180%" height="15" fill="rgb(230,62,27)" fg:x="106" fg:w="1"/><text x="2.1558%" y="591.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (2 samples, 0.04%)</title><rect x="1.9238%" y="581" width="0.0360%" height="15" fill="rgb(216,154,8)" fg:x="107" fg:w="2"/><text x="2.1738%" y="591.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (2 samples, 0.04%)</title><rect x="1.9597%" y="581" width="0.0360%" height="15" fill="rgb(244,35,45)" fg:x="109" fg:w="2"/><text x="2.2097%" y="591.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, -1, -1, true&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt; &gt; (3 samples, 0.05%)</title><rect x="1.9957%" y="581" width="0.0539%" height="15" fill="rgb(251,115,12)" fg:x="111" fg:w="3"/><text x="2.2457%" y="591.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt; (6 samples, 0.11%)</title><rect x="2.0496%" y="581" width="0.1079%" height="15" fill="rgb(240,54,50)" fg:x="114" fg:w="6"/><text x="2.2996%" y="591.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt; (3 samples, 0.05%)</title><rect x="2.1575%" y="581" width="0.0539%" height="15" fill="rgb(233,84,52)" fg:x="120" fg:w="3"/><text x="2.4075%" y="591.50"></text></g><g><title>Eigen::internal::llt_inplace&lt;double, 1&gt;::unblocked&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (3 samples, 0.05%)</title><rect x="2.2114%" y="581" width="0.0539%" height="15" fill="rgb(207,117,47)" fg:x="123" fg:w="3"/><text x="2.4614%" y="591.50"></text></g><g><title>Eigen::internal::triangular_solver_selector&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1, 2, 0, -1&gt;::run (2 samples, 0.04%)</title><rect x="2.2654%" y="581" width="0.0360%" height="15" fill="rgb(249,43,39)" fg:x="126" fg:w="2"/><text x="2.5154%" y="591.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14DifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (3 samples, 0.05%)</title><rect x="2.3013%" y="581" width="0.0539%" height="15" fill="rgb(209,38,44)" fg:x="128" fg:w="3"/><text x="2.5513%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="2.3553%" y="581" width="0.0180%" height="15" fill="rgb(236,212,23)" fg:x="131" fg:w="1"/><text x="2.6053%" y="591.50"></text></g><g><title>__ieee754_atan2_fma (1 samples, 0.02%)</title><rect x="2.3732%" y="581" width="0.0180%" height="15" fill="rgb(242,79,21)" fg:x="132" fg:w="1"/><text x="2.6232%" y="591.50"></text></g><g><title>__sin_fma (1 samples, 0.02%)</title><rect x="2.3912%" y="581" width="0.0180%" height="15" fill="rgb(211,96,35)" fg:x="133" fg:w="1"/><text x="2.6412%" y="591.50"></text></g><g><title>__sincos_fma (1 samples, 0.02%)</title><rect x="2.4092%" y="581" width="0.0180%" height="15" fill="rgb(253,215,40)" fg:x="134" fg:w="1"/><text x="2.6592%" y="591.50"></text></g><g><title>_int_malloc (3 samples, 0.05%)</title><rect x="2.4272%" y="581" width="0.0539%" height="15" fill="rgb(211,81,21)" fg:x="135" fg:w="3"/><text x="2.6772%" y="591.50"></text></g><g><title>crocoddyl::ActuationModelFullTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="2.4811%" y="581" width="0.0180%" height="15" fill="rgb(208,190,38)" fg:x="138" fg:w="1"/><text x="2.7311%" y="591.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::multiplyByJacobian (2 samples, 0.04%)</title><rect x="2.4991%" y="581" width="0.0360%" height="15" fill="rgb(235,213,38)" fg:x="139" fg:w="2"/><text x="2.7491%" y="591.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::multiplyJacobianTransposeBy (2 samples, 0.04%)</title><rect x="2.5351%" y="581" width="0.0360%" height="15" fill="rgb(237,122,38)" fg:x="141" fg:w="2"/><text x="2.7851%" y="591.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calcDiff (3 samples, 0.05%)</title><rect x="2.5710%" y="581" width="0.0539%" height="15" fill="rgb(244,218,35)" fg:x="143" fg:w="3"/><text x="2.8210%" y="591.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calc (3 samples, 0.05%)</title><rect x="2.6250%" y="581" width="0.0539%" height="15" fill="rgb(240,68,47)" fg:x="146" fg:w="3"/><text x="2.8750%" y="591.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calcDiff (2 samples, 0.04%)</title><rect x="2.6789%" y="581" width="0.0360%" height="15" fill="rgb(210,16,53)" fg:x="149" fg:w="2"/><text x="2.9289%" y="591.50"></text></g><g><title>crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;::IntegratedActionDataEulerTpl&lt;crocoddyl::IntegratedActionModelEulerTpl&gt; (1 samples, 0.02%)</title><rect x="2.7149%" y="581" width="0.0180%" height="15" fill="rgb(235,124,12)" fg:x="151" fg:w="1"/><text x="2.9649%" y="591.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::integrate (1 samples, 0.02%)</title><rect x="2.7328%" y="581" width="0.0180%" height="15" fill="rgb(224,169,11)" fg:x="152" fg:w="1"/><text x="2.9828%" y="591.50"></text></g><g><title>pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::DataTpl (1 samples, 0.02%)</title><rect x="2.7508%" y="581" width="0.0180%" height="15" fill="rgb(250,166,2)" fg:x="153" fg:w="1"/><text x="3.0008%" y="591.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (4 samples, 0.07%)</title><rect x="2.7688%" y="581" width="0.0719%" height="15" fill="rgb(242,216,29)" fg:x="154" fg:w="4"/><text x="3.0188%" y="591.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (1 samples, 0.02%)</title><rect x="2.8407%" y="581" width="0.0180%" height="15" fill="rgb(230,116,27)" fg:x="158" fg:w="1"/><text x="3.0907%" y="591.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="2.8587%" y="581" width="0.0180%" height="15" fill="rgb(228,99,48)" fg:x="159" fg:w="1"/><text x="3.1087%" y="591.50"></text></g><g><title>pinocchio::cholesky::computeMinv&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (2 samples, 0.04%)</title><rect x="2.8767%" y="581" width="0.0360%" height="15" fill="rgb(253,11,6)" fg:x="160" fg:w="2"/><text x="3.1267%" y="591.50"></text></g><g><title>pinocchio::computeRNEADerivatives&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="2.9126%" y="581" width="0.0180%" height="15" fill="rgb(247,143,39)" fg:x="162" fg:w="1"/><text x="3.1626%" y="591.50"></text></g><g><title>pinocchio::dIntegrateTransport&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="2.9306%" y="581" width="0.0180%" height="15" fill="rgb(236,97,10)" fg:x="163" fg:w="1"/><text x="3.1806%" y="591.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="2.9486%" y="581" width="0.0180%" height="15" fill="rgb(233,208,19)" fg:x="164" fg:w="1"/><text x="3.1986%" y="591.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::KineticEnergyAlgoForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (4 samples, 0.07%)</title><rect x="2.9666%" y="581" width="0.0719%" height="15" fill="rgb(216,164,2)" fg:x="165" fg:w="4"/><text x="3.2166%" y="591.50"></text></g><g><title>pinocchio::getFrameJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="3.0385%" y="581" width="0.0180%" height="15" fill="rgb(220,129,5)" fg:x="169" fg:w="1"/><text x="3.2885%" y="591.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="3.0565%" y="581" width="0.0180%" height="15" fill="rgb(242,17,10)" fg:x="170" fg:w="1"/><text x="3.3065%" y="591.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (2 samples, 0.04%)</title><rect x="3.0744%" y="581" width="0.0360%" height="15" fill="rgb(242,107,0)" fg:x="171" fg:w="2"/><text x="3.3244%" y="591.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (2 samples, 0.04%)</title><rect x="3.1104%" y="581" width="0.0360%" height="15" fill="rgb(251,28,31)" fg:x="173" fg:w="2"/><text x="3.3604%" y="591.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (2 samples, 0.04%)</title><rect x="3.1464%" y="581" width="0.0360%" height="15" fill="rgb(233,223,10)" fg:x="175" fg:w="2"/><text x="3.3964%" y="591.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="3.1823%" y="581" width="0.0180%" height="15" fill="rgb(215,21,27)" fg:x="177" fg:w="1"/><text x="3.4323%" y="591.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (5 samples, 0.09%)</title><rect x="3.2003%" y="581" width="0.0899%" height="15" fill="rgb(232,23,21)" fg:x="178" fg:w="5"/><text x="3.4503%" y="591.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="3.2902%" y="581" width="0.0180%" height="15" fill="rgb(244,5,23)" fg:x="183" fg:w="1"/><text x="3.5402%" y="591.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (3 samples, 0.05%)</title><rect x="3.3082%" y="581" width="0.0539%" height="15" fill="rgb(226,81,46)" fg:x="184" fg:w="3"/><text x="3.5582%" y="591.50"></text></g><g><title>proxddp::SolverFDDP&lt;double&gt;::backwardPass (1 samples, 0.02%)</title><rect x="3.3621%" y="581" width="0.0180%" height="15" fill="rgb(247,70,30)" fg:x="187" fg:w="1"/><text x="3.6121%" y="591.50"></text></g><g><title>proxddp::SolverFDDP&lt;double&gt;::forwardPass (1 samples, 0.02%)</title><rect x="3.3801%" y="581" width="0.0180%" height="15" fill="rgb(212,68,19)" fg:x="188" fg:w="1"/><text x="3.6301%" y="591.50"></text></g><g><title>std::__new_allocator&lt;int&gt;::allocate (1 samples, 0.02%)</title><rect x="3.3981%" y="581" width="0.0180%" height="15" fill="rgb(240,187,13)" fg:x="189" fg:w="1"/><text x="3.6481%" y="591.50"></text></g><g><title>[unknown] (97 samples, 1.74%)</title><rect x="1.6900%" y="597" width="1.7440%" height="15" fill="rgb(223,113,26)" fg:x="94" fg:w="97"/><text x="1.9400%" y="607.50"></text></g><g><title>std::vector&lt;std::shared_ptr&lt;proxddp::FunctionDataTpl&lt;double&gt; &gt;, std::allocator&lt;std::shared_ptr&lt;proxddp::FunctionDataTpl&lt;double&gt; &gt; &gt; &gt;::_M_assign_aux&lt;std::shared_ptr&lt;proxddp::FunctionDataTpl&lt;double&gt; &gt; const*&gt; (1 samples, 0.02%)</title><rect x="3.4160%" y="581" width="0.0180%" height="15" fill="rgb(206,192,2)" fg:x="190" fg:w="1"/><text x="3.6660%" y="591.50"></text></g><g><title>__GI_exit (1 samples, 0.02%)</title><rect x="3.4340%" y="549" width="0.0180%" height="15" fill="rgb(241,108,4)" fg:x="191" fg:w="1"/><text x="3.6840%" y="559.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.02%)</title><rect x="3.4340%" y="533" width="0.0180%" height="15" fill="rgb(247,173,49)" fg:x="191" fg:w="1"/><text x="3.6840%" y="543.50"></text></g><g><title>_dl_fini (1 samples, 0.02%)</title><rect x="3.4340%" y="517" width="0.0180%" height="15" fill="rgb(224,114,35)" fg:x="191" fg:w="1"/><text x="3.6840%" y="527.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="3.4520%" y="501" width="0.0180%" height="15" fill="rgb(245,159,27)" fg:x="192" fg:w="1"/><text x="3.7020%" y="511.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="3.4520%" y="485" width="0.0180%" height="15" fill="rgb(245,172,44)" fg:x="192" fg:w="1"/><text x="3.7020%" y="495.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="3.4520%" y="469" width="0.0180%" height="15" fill="rgb(236,23,11)" fg:x="192" fg:w="1"/><text x="3.7020%" y="479.50"></text></g><g><title>__GI___libc_free (6 samples, 0.11%)</title><rect x="3.4700%" y="453" width="0.1079%" height="15" fill="rgb(205,117,38)" fg:x="193" fg:w="6"/><text x="3.7200%" y="463.50"></text></g><g><title>_int_free (6 samples, 0.11%)</title><rect x="3.4700%" y="437" width="0.1079%" height="15" fill="rgb(237,72,25)" fg:x="193" fg:w="6"/><text x="3.7200%" y="447.50"></text></g><g><title>malloc_consolidate (6 samples, 0.11%)</title><rect x="3.4700%" y="421" width="0.1079%" height="15" fill="rgb(244,70,9)" fg:x="193" fg:w="6"/><text x="3.7200%" y="431.50"></text></g><g><title>unlink_chunk (2 samples, 0.04%)</title><rect x="3.5419%" y="405" width="0.0360%" height="15" fill="rgb(217,125,39)" fg:x="197" fg:w="2"/><text x="3.7919%" y="415.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="3.5958%" y="389" width="0.0360%" height="15" fill="rgb(235,36,10)" fg:x="200" fg:w="2"/><text x="3.8458%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="3.6138%" y="373" width="0.0180%" height="15" fill="rgb(251,123,47)" fg:x="201" fg:w="1"/><text x="3.8638%" y="383.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="3.6498%" y="357" width="0.0180%" height="15" fill="rgb(221,13,13)" fg:x="203" fg:w="1"/><text x="3.8998%" y="367.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="3.6857%" y="341" width="0.0180%" height="15" fill="rgb(238,131,9)" fg:x="205" fg:w="1"/><text x="3.9357%" y="351.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="3.7576%" y="325" width="0.0180%" height="15" fill="rgb(211,50,8)" fg:x="209" fg:w="1"/><text x="4.0076%" y="335.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::CostDataResidualTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::CostDataResidualTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataResidualTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataResidualTpl&lt;double&gt; &gt; &gt;::dispose (2 samples, 0.04%)</title><rect x="3.7756%" y="325" width="0.0360%" height="15" fill="rgb(245,182,24)" fg:x="210" fg:w="2"/><text x="4.0256%" y="335.50"></text></g><g><title>crocoddyl::CostDataAbstractTpl&lt;double&gt;::~CostDataAbstractTpl (2 samples, 0.04%)</title><rect x="3.7756%" y="309" width="0.0360%" height="15" fill="rgb(242,14,37)" fg:x="210" fg:w="2"/><text x="4.0256%" y="319.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="3.7756%" y="293" width="0.0360%" height="15" fill="rgb(246,228,12)" fg:x="210" fg:w="2"/><text x="4.0256%" y="303.50"></text></g><g><title>boost::detail::sp_as_deleter&lt;crocoddyl::CostDataSumTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataSumTpl&lt;double&gt; &gt; &gt;::destroy (10 samples, 0.18%)</title><rect x="3.6677%" y="357" width="0.1798%" height="15" fill="rgb(213,55,15)" fg:x="204" fg:w="10"/><text x="3.9177%" y="367.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (8 samples, 0.14%)</title><rect x="3.7037%" y="341" width="0.1438%" height="15" fill="rgb(209,9,3)" fg:x="206" fg:w="8"/><text x="3.9537%" y="351.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.04%)</title><rect x="3.8116%" y="325" width="0.0360%" height="15" fill="rgb(230,59,30)" fg:x="212" fg:w="2"/><text x="4.0616%" y="335.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::CostDataResidualTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::CostDataResidualTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataResidualTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataResidualTpl&lt;double&gt; &gt; &gt;::dispose (2 samples, 0.04%)</title><rect x="3.8116%" y="309" width="0.0360%" height="15" fill="rgb(209,121,21)" fg:x="212" fg:w="2"/><text x="4.0616%" y="319.50"></text></g><g><title>crocoddyl::CostDataAbstractTpl&lt;double&gt;::~CostDataAbstractTpl (1 samples, 0.02%)</title><rect x="3.8296%" y="293" width="0.0180%" height="15" fill="rgb(220,109,13)" fg:x="213" fg:w="1"/><text x="4.0796%" y="303.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="3.8296%" y="277" width="0.0180%" height="15" fill="rgb(232,18,1)" fg:x="213" fg:w="1"/><text x="4.0796%" y="287.50"></text></g><g><title>boost::detail::sp_counted_impl_pd&lt;crocoddyl::ShootingProblemTpl&lt;double&gt;*, boost::detail::sp_ms_deleter&lt;crocoddyl::ShootingProblemTpl&lt;double&gt; &gt; &gt;::dispose (31 samples, 0.56%)</title><rect x="3.5778%" y="453" width="0.5574%" height="15" fill="rgb(215,41,42)" fg:x="199" fg:w="31"/><text x="3.8278%" y="463.50"></text></g><g><title>crocoddyl::ShootingProblemTpl&lt;double&gt;::~ShootingProblemTpl (31 samples, 0.56%)</title><rect x="3.5778%" y="437" width="0.5574%" height="15" fill="rgb(224,123,36)" fg:x="199" fg:w="31"/><text x="3.8278%" y="447.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt; &gt; &gt;::dispose (31 samples, 0.56%)</title><rect x="3.5778%" y="421" width="0.5574%" height="15" fill="rgb(240,125,3)" fg:x="199" fg:w="31"/><text x="3.8278%" y="431.50"></text></g><g><title>crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;::~IntegratedActionDataEulerTpl (31 samples, 0.56%)</title><rect x="3.5778%" y="405" width="0.5574%" height="15" fill="rgb(205,98,50)" fg:x="199" fg:w="31"/><text x="3.8278%" y="415.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt; &gt; &gt;::dispose (28 samples, 0.50%)</title><rect x="3.6318%" y="389" width="0.5034%" height="15" fill="rgb(205,185,37)" fg:x="202" fg:w="28"/><text x="3.8818%" y="399.50"></text></g><g><title>crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;::~DifferentialActionDataFreeFwdDynamicsTpl (28 samples, 0.50%)</title><rect x="3.6318%" y="373" width="0.5034%" height="15" fill="rgb(238,207,15)" fg:x="202" fg:w="28"/><text x="3.8818%" y="383.50"></text></g><g><title>pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::~DataTpl (16 samples, 0.29%)</title><rect x="3.8475%" y="357" width="0.2877%" height="15" fill="rgb(213,199,42)" fg:x="214" fg:w="16"/><text x="4.0975%" y="367.50"></text></g><g><title>__GI___libc_free (13 samples, 0.23%)</title><rect x="3.9015%" y="341" width="0.2337%" height="15" fill="rgb(235,201,11)" fg:x="217" fg:w="13"/><text x="4.1515%" y="351.50"></text></g><g><title>_int_free (3 samples, 0.05%)</title><rect x="4.0813%" y="325" width="0.0539%" height="15" fill="rgb(207,46,11)" fg:x="227" fg:w="3"/><text x="4.3313%" y="335.50"></text></g><g><title>crocoddyl::ActionDataAbstractTpl&lt;double&gt;::ActionDataAbstractTpl&lt;crocoddyl::IntegratedActionModelEulerTpl&gt; (2 samples, 0.04%)</title><rect x="4.1352%" y="341" width="0.0360%" height="15" fill="rgb(241,35,35)" fg:x="230" fg:w="2"/><text x="4.3852%" y="351.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="4.1532%" y="325" width="0.0180%" height="15" fill="rgb(243,32,47)" fg:x="231" fg:w="1"/><text x="4.4032%" y="335.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="4.1712%" y="293" width="0.0180%" height="15" fill="rgb(247,202,23)" fg:x="232" fg:w="1"/><text x="4.4212%" y="303.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="4.1712%" y="277" width="0.0180%" height="15" fill="rgb(219,102,11)" fg:x="232" fg:w="1"/><text x="4.4212%" y="287.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="4.1891%" y="213" width="0.0180%" height="15" fill="rgb(243,110,44)" fg:x="233" fg:w="1"/><text x="4.4391%" y="223.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="4.1891%" y="197" width="0.0180%" height="15" fill="rgb(222,74,54)" fg:x="233" fg:w="1"/><text x="4.4391%" y="207.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="4.1891%" y="181" width="0.0180%" height="15" fill="rgb(216,99,12)" fg:x="233" fg:w="1"/><text x="4.4391%" y="191.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="4.1891%" y="165" width="0.0180%" height="15" fill="rgb(226,22,26)" fg:x="233" fg:w="1"/><text x="4.4391%" y="175.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="4.2251%" y="197" width="0.0180%" height="15" fill="rgb(217,163,10)" fg:x="235" fg:w="1"/><text x="4.4751%" y="207.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="4.2251%" y="181" width="0.0180%" height="15" fill="rgb(213,25,53)" fg:x="235" fg:w="1"/><text x="4.4751%" y="191.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::CostDataSumTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataSumTpl&lt;double&gt; &gt;, crocoddyl::CostModelSumTpl&lt;double&gt;*, crocoddyl::DataCollectorAbstractTpl&lt;double&gt;* const&amp;&gt; (4 samples, 0.07%)</title><rect x="4.1891%" y="293" width="0.0719%" height="15" fill="rgb(252,105,26)" fg:x="233" fg:w="4"/><text x="4.4391%" y="303.50"></text></g><g><title>crocoddyl::CostDataSumTpl&lt;double&gt;::CostDataSumTpl&lt;crocoddyl::CostModelSumTpl&gt; (4 samples, 0.07%)</title><rect x="4.1891%" y="277" width="0.0719%" height="15" fill="rgb(220,39,43)" fg:x="233" fg:w="4"/><text x="4.4391%" y="287.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::createData (4 samples, 0.07%)</title><rect x="4.1891%" y="261" width="0.0719%" height="15" fill="rgb(229,68,48)" fg:x="233" fg:w="4"/><text x="4.4391%" y="271.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::CostDataResidualTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataResidualTpl&lt;double&gt; &gt;, crocoddyl::CostModelResidualTpl&lt;double&gt;*, crocoddyl::DataCollectorAbstractTpl&lt;double&gt;* const&amp;&gt; (4 samples, 0.07%)</title><rect x="4.1891%" y="245" width="0.0719%" height="15" fill="rgb(252,8,32)" fg:x="233" fg:w="4"/><text x="4.4391%" y="255.50"></text></g><g><title>crocoddyl::CostDataResidualTpl&lt;double&gt;::CostDataResidualTpl&lt;crocoddyl::CostModelResidualTpl&gt; (4 samples, 0.07%)</title><rect x="4.1891%" y="229" width="0.0719%" height="15" fill="rgb(223,20,43)" fg:x="233" fg:w="4"/><text x="4.4391%" y="239.50"></text></g><g><title>crocoddyl::CostDataAbstractTpl&lt;double&gt;::CostDataAbstractTpl&lt;crocoddyl::CostModelResidualTpl&gt; (3 samples, 0.05%)</title><rect x="4.2071%" y="213" width="0.0539%" height="15" fill="rgb(229,81,49)" fg:x="234" fg:w="3"/><text x="4.4571%" y="223.50"></text></g><g><title>crocoddyl::ResidualModelAbstractTpl&lt;double&gt;::createData (1 samples, 0.02%)</title><rect x="4.2431%" y="197" width="0.0180%" height="15" fill="rgb(236,28,36)" fg:x="236" fg:w="1"/><text x="4.4931%" y="207.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::ResidualDataAbstractTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::ResidualDataAbstractTpl&lt;double&gt; &gt;, crocoddyl::ResidualModelAbstractTpl&lt;double&gt;*, crocoddyl::DataCollectorAbstractTpl&lt;double&gt;* const&amp;&gt; (1 samples, 0.02%)</title><rect x="4.2431%" y="181" width="0.0180%" height="15" fill="rgb(249,185,26)" fg:x="236" fg:w="1"/><text x="4.4931%" y="191.50"></text></g><g><title>crocoddyl::ResidualDataAbstractTpl&lt;double&gt;::ResidualDataAbstractTpl&lt;crocoddyl::ResidualModelAbstractTpl&gt; (1 samples, 0.02%)</title><rect x="4.2431%" y="165" width="0.0180%" height="15" fill="rgb(249,174,33)" fg:x="236" fg:w="1"/><text x="4.4931%" y="175.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="4.2431%" y="149" width="0.0180%" height="15" fill="rgb(233,201,37)" fg:x="236" fg:w="1"/><text x="4.4931%" y="159.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="4.2431%" y="133" width="0.0180%" height="15" fill="rgb(221,78,26)" fg:x="236" fg:w="1"/><text x="4.4931%" y="143.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="4.2431%" y="117" width="0.0180%" height="15" fill="rgb(250,127,30)" fg:x="236" fg:w="1"/><text x="4.4931%" y="127.50"></text></g><g><title>crocoddyl::ActuationModelFullTpl&lt;double&gt;::createData (1 samples, 0.02%)</title><rect x="4.2611%" y="293" width="0.0180%" height="15" fill="rgb(230,49,44)" fg:x="237" fg:w="1"/><text x="4.5111%" y="303.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::ActuationDataAbstractTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::ActuationDataAbstractTpl&lt;double&gt; &gt;, crocoddyl::ActuationModelFullTpl&lt;double&gt;*&gt; (1 samples, 0.02%)</title><rect x="4.2611%" y="277" width="0.0180%" height="15" fill="rgb(229,67,23)" fg:x="237" fg:w="1"/><text x="4.5111%" y="287.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="4.2790%" y="277" width="0.0180%" height="15" fill="rgb(249,83,47)" fg:x="238" fg:w="1"/><text x="4.5290%" y="287.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="4.2790%" y="261" width="0.0180%" height="15" fill="rgb(215,43,3)" fg:x="238" fg:w="1"/><text x="4.5290%" y="271.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="4.2790%" y="245" width="0.0180%" height="15" fill="rgb(238,154,13)" fg:x="238" fg:w="1"/><text x="4.5290%" y="255.50"></text></g><g><title>crocoddyl::DifferentialActionDataAbstractTpl&lt;double&gt;::DifferentialActionDataAbstractTpl&lt;crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&gt; (2 samples, 0.04%)</title><rect x="4.2790%" y="293" width="0.0360%" height="15" fill="rgb(219,56,2)" fg:x="238" fg:w="2"/><text x="4.5290%" y="303.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="4.2970%" y="277" width="0.0180%" height="15" fill="rgb(233,0,4)" fg:x="239" fg:w="1"/><text x="4.5470%" y="287.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="4.3689%" y="277" width="0.0180%" height="15" fill="rgb(235,30,7)" fg:x="243" fg:w="1"/><text x="4.6189%" y="287.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="4.3689%" y="261" width="0.0180%" height="15" fill="rgb(250,79,13)" fg:x="243" fg:w="1"/><text x="4.6189%" y="271.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="4.3689%" y="245" width="0.0180%" height="15" fill="rgb(211,146,34)" fg:x="243" fg:w="1"/><text x="4.6189%" y="255.50"></text></g><g><title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt;::resize (1 samples, 0.02%)</title><rect x="4.3869%" y="277" width="0.0180%" height="15" fill="rgb(228,22,38)" fg:x="244" fg:w="1"/><text x="4.6369%" y="287.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="4.3869%" y="261" width="0.0180%" height="15" fill="rgb(235,168,5)" fg:x="244" fg:w="1"/><text x="4.6369%" y="271.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="4.3869%" y="245" width="0.0180%" height="15" fill="rgb(221,155,16)" fg:x="244" fg:w="1"/><text x="4.6369%" y="255.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="4.3869%" y="229" width="0.0180%" height="15" fill="rgb(215,215,53)" fg:x="244" fg:w="1"/><text x="4.6369%" y="239.50"></text></g><g><title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt;::resize (1 samples, 0.02%)</title><rect x="4.4049%" y="277" width="0.0180%" height="15" fill="rgb(223,4,10)" fg:x="245" fg:w="1"/><text x="4.6549%" y="287.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="4.4049%" y="261" width="0.0180%" height="15" fill="rgb(234,103,6)" fg:x="245" fg:w="1"/><text x="4.6549%" y="271.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="4.4049%" y="245" width="0.0180%" height="15" fill="rgb(227,97,0)" fg:x="245" fg:w="1"/><text x="4.6549%" y="255.50"></text></g><g><title>Eigen::TensorStorage&lt;double, Eigen::DSizes&lt;long, 3&gt;, 0&gt;::TensorStorage&lt;long, int, int&gt; (1 samples, 0.02%)</title><rect x="4.4229%" y="277" width="0.0180%" height="15" fill="rgb(234,150,53)" fg:x="246" fg:w="1"/><text x="4.6729%" y="287.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="4.4229%" y="261" width="0.0180%" height="15" fill="rgb(228,201,54)" fg:x="246" fg:w="1"/><text x="4.6729%" y="271.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="4.4229%" y="245" width="0.0180%" height="15" fill="rgb(222,22,37)" fg:x="246" fg:w="1"/><text x="4.6729%" y="255.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="4.4229%" y="229" width="0.0180%" height="15" fill="rgb(237,53,32)" fg:x="246" fg:w="1"/><text x="4.6729%" y="239.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="4.4408%" y="277" width="0.0360%" height="15" fill="rgb(233,25,53)" fg:x="247" fg:w="2"/><text x="4.6908%" y="287.50"></text></g><g><title>std::vector&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, Eigen::aligned_allocator&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="4.4768%" y="277" width="0.0180%" height="15" fill="rgb(210,40,34)" fg:x="249" fg:w="1"/><text x="4.7268%" y="287.50"></text></g><g><title>std::__uninitialized_fill_n_a&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;*, unsigned long, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, Eigen::aligned_allocator&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="4.4768%" y="261" width="0.0180%" height="15" fill="rgb(241,220,44)" fg:x="249" fg:w="1"/><text x="4.7268%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="4.4768%" y="245" width="0.0180%" height="15" fill="rgb(235,28,35)" fg:x="249" fg:w="1"/><text x="4.7268%" y="255.50"></text></g><g><title>Eigen::aligned_allocator&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::allocate (2 samples, 0.04%)</title><rect x="4.4948%" y="261" width="0.0360%" height="15" fill="rgb(210,56,17)" fg:x="250" fg:w="2"/><text x="4.7448%" y="271.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="4.4948%" y="245" width="0.0360%" height="15" fill="rgb(224,130,29)" fg:x="250" fg:w="2"/><text x="4.7448%" y="255.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="4.4948%" y="229" width="0.0360%" height="15" fill="rgb(235,212,8)" fg:x="250" fg:w="2"/><text x="4.7448%" y="239.50"></text></g><g><title>std::vector&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt;, Eigen::aligned_allocator&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; &gt;::vector (4 samples, 0.07%)</title><rect x="4.4948%" y="277" width="0.0719%" height="15" fill="rgb(223,33,50)" fg:x="250" fg:w="4"/><text x="4.7448%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="4.5307%" y="261" width="0.0360%" height="15" fill="rgb(219,149,13)" fg:x="252" fg:w="2"/><text x="4.7807%" y="271.50"></text></g><g><title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="4.5667%" y="277" width="0.0180%" height="15" fill="rgb(250,156,29)" fg:x="254" fg:w="1"/><text x="4.8167%" y="287.50"></text></g><g><title>std::vector&lt;pinocchio::InertiaTpl&lt;double, 0&gt;, Eigen::aligned_allocator&lt;pinocchio::InertiaTpl&lt;double, 0&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="4.5847%" y="277" width="0.0180%" height="15" fill="rgb(216,193,19)" fg:x="255" fg:w="1"/><text x="4.8347%" y="287.50"></text></g><g><title>Eigen::aligned_allocator&lt;pinocchio::InertiaTpl&lt;double, 0&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="4.5847%" y="261" width="0.0180%" height="15" fill="rgb(216,135,14)" fg:x="255" fg:w="1"/><text x="4.8347%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="4.5847%" y="245" width="0.0180%" height="15" fill="rgb(241,47,5)" fg:x="255" fg:w="1"/><text x="4.8347%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="4.5847%" y="229" width="0.0180%" height="15" fill="rgb(233,42,35)" fg:x="255" fg:w="1"/><text x="4.8347%" y="239.50"></text></g><g><title>std::vector&lt;pinocchio::MotionTpl&lt;double, 0&gt;, Eigen::aligned_allocator&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; &gt;::vector (3 samples, 0.05%)</title><rect x="4.6027%" y="277" width="0.0539%" height="15" fill="rgb(231,13,6)" fg:x="256" fg:w="3"/><text x="4.8527%" y="287.50"></text></g><g><title>Eigen::aligned_allocator&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::allocate (2 samples, 0.04%)</title><rect x="4.6206%" y="261" width="0.0360%" height="15" fill="rgb(207,181,40)" fg:x="257" fg:w="2"/><text x="4.8706%" y="271.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="4.6206%" y="245" width="0.0360%" height="15" fill="rgb(254,173,49)" fg:x="257" fg:w="2"/><text x="4.8706%" y="255.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="4.6206%" y="229" width="0.0360%" height="15" fill="rgb(221,1,38)" fg:x="257" fg:w="2"/><text x="4.8706%" y="239.50"></text></g><g><title>std::vector&lt;pinocchio::SE3Tpl&lt;double, 0&gt;, Eigen::aligned_allocator&lt;pinocchio::SE3Tpl&lt;double, 0&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="4.6566%" y="277" width="0.0180%" height="15" fill="rgb(206,124,46)" fg:x="259" fg:w="1"/><text x="4.9066%" y="287.50"></text></g><g><title>boost::make_shared&lt;crocoddyl::ShootingProblemTpl&lt;double&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;&amp;, std::vector&lt;boost::shared_ptr&lt;crocoddyl::ActionModelAbstractTpl&lt;double&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;crocoddyl::ActionModelAbstractTpl&lt;double&gt; &gt; &gt; &gt;&amp;, boost::shared_ptr&lt;crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt; &gt;&amp;&gt; (31 samples, 0.56%)</title><rect x="4.1352%" y="437" width="0.5574%" height="15" fill="rgb(249,21,11)" fg:x="230" fg:w="31"/><text x="4.3852%" y="447.50"></text></g><g><title>crocoddyl::ShootingProblemTpl&lt;double&gt;::ShootingProblemTpl (31 samples, 0.56%)</title><rect x="4.1352%" y="421" width="0.5574%" height="15" fill="rgb(222,201,40)" fg:x="230" fg:w="31"/><text x="4.3852%" y="431.50"></text></g><g><title>crocoddyl::ShootingProblemTpl&lt;double&gt;::allocateData (31 samples, 0.56%)</title><rect x="4.1352%" y="405" width="0.5574%" height="15" fill="rgb(235,61,29)" fg:x="230" fg:w="31"/><text x="4.3852%" y="415.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::createData (31 samples, 0.56%)</title><rect x="4.1352%" y="389" width="0.5574%" height="15" fill="rgb(219,207,3)" fg:x="230" fg:w="31"/><text x="4.3852%" y="399.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt; &gt;, crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;*&gt; (31 samples, 0.56%)</title><rect x="4.1352%" y="373" width="0.5574%" height="15" fill="rgb(222,56,46)" fg:x="230" fg:w="31"/><text x="4.3852%" y="383.50"></text></g><g><title>crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;::IntegratedActionDataEulerTpl&lt;crocoddyl::IntegratedActionModelEulerTpl&gt; (31 samples, 0.56%)</title><rect x="4.1352%" y="357" width="0.5574%" height="15" fill="rgb(239,76,54)" fg:x="230" fg:w="31"/><text x="4.3852%" y="367.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::createData (29 samples, 0.52%)</title><rect x="4.1712%" y="341" width="0.5214%" height="15" fill="rgb(231,124,27)" fg:x="232" fg:w="29"/><text x="4.4212%" y="351.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt; &gt;, crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;*&gt; (29 samples, 0.52%)</title><rect x="4.1712%" y="325" width="0.5214%" height="15" fill="rgb(249,195,6)" fg:x="232" fg:w="29"/><text x="4.4212%" y="335.50"></text></g><g><title>crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;::DifferentialActionDataFreeFwdDynamicsTpl&lt;crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&gt; (29 samples, 0.52%)</title><rect x="4.1712%" y="309" width="0.5214%" height="15" fill="rgb(237,174,47)" fg:x="232" fg:w="29"/><text x="4.4212%" y="319.50"></text></g><g><title>pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::DataTpl (21 samples, 0.38%)</title><rect x="4.3150%" y="293" width="0.3776%" height="15" fill="rgb(206,201,31)" fg:x="240" fg:w="21"/><text x="4.5650%" y="303.50"></text></g><g><title>std::vector&lt;pinocchio::SE3Tpl&lt;double, 0&gt;, Eigen::aligned_allocator&lt;pinocchio::SE3Tpl&lt;double, 0&gt; &gt; &gt;::vector@plt (1 samples, 0.02%)</title><rect x="4.6746%" y="277" width="0.0180%" height="15" fill="rgb(231,57,52)" fg:x="260" fg:w="1"/><text x="4.9246%" y="287.50"></text></g><g><title>pinocchio::urdf::details::parseRootTree (1 samples, 0.02%)</title><rect x="4.6926%" y="421" width="0.0180%" height="15" fill="rgb(248,177,22)" fg:x="261" fg:w="1"/><text x="4.9426%" y="431.50"></text></g><g><title>pinocchio::urdf::details::parseTree (1 samples, 0.02%)</title><rect x="4.6926%" y="405" width="0.0180%" height="15" fill="rgb(215,211,37)" fg:x="261" fg:w="1"/><text x="4.9426%" y="415.50"></text></g><g><title>std::__cxx11::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_ostringstream (1 samples, 0.02%)</title><rect x="4.6926%" y="389" width="0.0180%" height="15" fill="rgb(241,128,51)" fg:x="261" fg:w="1"/><text x="4.9426%" y="399.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (9 samples, 0.16%)</title><rect x="4.7465%" y="405" width="0.1618%" height="15" fill="rgb(227,165,31)" fg:x="264" fg:w="9"/><text x="4.9965%" y="415.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (9 samples, 0.16%)</title><rect x="4.7465%" y="389" width="0.1618%" height="15" fill="rgb(228,167,24)" fg:x="264" fg:w="9"/><text x="4.9965%" y="399.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (9 samples, 0.16%)</title><rect x="4.7465%" y="373" width="0.1618%" height="15" fill="rgb(228,143,12)" fg:x="264" fg:w="9"/><text x="4.9965%" y="383.50"></text></g><g><title>operator new (9 samples, 0.16%)</title><rect x="4.7465%" y="357" width="0.1618%" height="15" fill="rgb(249,149,8)" fg:x="264" fg:w="9"/><text x="4.9965%" y="367.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.16%)</title><rect x="4.7465%" y="341" width="0.1618%" height="15" fill="rgb(243,35,44)" fg:x="264" fg:w="9"/><text x="4.9965%" y="351.50"></text></g><g><title>_int_malloc (9 samples, 0.16%)</title><rect x="4.7465%" y="325" width="0.1618%" height="15" fill="rgb(246,89,9)" fg:x="264" fg:w="9"/><text x="4.9965%" y="335.50"></text></g><g><title>malloc_consolidate (9 samples, 0.16%)</title><rect x="4.7465%" y="309" width="0.1618%" height="15" fill="rgb(233,213,13)" fg:x="264" fg:w="9"/><text x="4.9965%" y="319.50"></text></g><g><title>unlink_chunk (5 samples, 0.09%)</title><rect x="4.8184%" y="293" width="0.0899%" height="15" fill="rgb(233,141,41)" fg:x="268" fg:w="5"/><text x="5.0684%" y="303.50"></text></g><g><title>TiXmlBase::ReadText (1 samples, 0.02%)</title><rect x="4.9083%" y="325" width="0.0180%" height="15" fill="rgb(239,167,4)" fg:x="273" fg:w="1"/><text x="5.1583%" y="335.50"></text></g><g><title>TiXmlBase::StringEqual (1 samples, 0.02%)</title><rect x="4.9083%" y="309" width="0.0180%" height="15" fill="rgb(209,217,16)" fg:x="273" fg:w="1"/><text x="5.1583%" y="319.50"></text></g><g><title>TiXmlAttribute::Parse (1 samples, 0.02%)</title><rect x="4.9263%" y="293" width="0.0180%" height="15" fill="rgb(219,88,35)" fg:x="274" fg:w="1"/><text x="5.1763%" y="303.50"></text></g><g><title>TiXmlParsingData::Stamp (1 samples, 0.02%)</title><rect x="4.9263%" y="277" width="0.0180%" height="15" fill="rgb(220,193,23)" fg:x="274" fg:w="1"/><text x="5.1763%" y="287.50"></text></g><g><title>TiXmlAttribute::Parse (1 samples, 0.02%)</title><rect x="4.9443%" y="261" width="0.0180%" height="15" fill="rgb(230,90,52)" fg:x="275" fg:w="1"/><text x="5.1943%" y="271.50"></text></g><g><title>TiXmlBase::ReadName (1 samples, 0.02%)</title><rect x="4.9443%" y="245" width="0.0180%" height="15" fill="rgb(252,106,19)" fg:x="275" fg:w="1"/><text x="5.1943%" y="255.50"></text></g><g><title>isalpha (1 samples, 0.02%)</title><rect x="4.9443%" y="229" width="0.0180%" height="15" fill="rgb(206,74,20)" fg:x="275" fg:w="1"/><text x="5.1943%" y="239.50"></text></g><g><title>TiXmlElement::Parse (2 samples, 0.04%)</title><rect x="4.9443%" y="277" width="0.0360%" height="15" fill="rgb(230,138,44)" fg:x="275" fg:w="2"/><text x="5.1943%" y="287.50"></text></g><g><title>TiXmlElement::ReadValue (1 samples, 0.02%)</title><rect x="4.9622%" y="261" width="0.0180%" height="15" fill="rgb(235,182,43)" fg:x="276" fg:w="1"/><text x="5.2122%" y="271.50"></text></g><g><title>TiXmlElement::Parse (1 samples, 0.02%)</title><rect x="4.9622%" y="245" width="0.0180%" height="15" fill="rgb(242,16,51)" fg:x="276" fg:w="1"/><text x="5.2122%" y="255.50"></text></g><g><title>TiXmlBase::ReadText (1 samples, 0.02%)</title><rect x="4.9622%" y="229" width="0.0180%" height="15" fill="rgb(248,9,4)" fg:x="276" fg:w="1"/><text x="5.2122%" y="239.50"></text></g><g><title>TiXmlElement::ReadValue (3 samples, 0.05%)</title><rect x="4.9443%" y="293" width="0.0539%" height="15" fill="rgb(210,31,22)" fg:x="275" fg:w="3"/><text x="5.1943%" y="303.50"></text></g><g><title>TiXmlNode::Identify (1 samples, 0.02%)</title><rect x="4.9802%" y="277" width="0.0180%" height="15" fill="rgb(239,54,39)" fg:x="277" fg:w="1"/><text x="5.2302%" y="287.50"></text></g><g><title>TiXmlElement::TiXmlElement (1 samples, 0.02%)</title><rect x="4.9802%" y="261" width="0.0180%" height="15" fill="rgb(230,99,41)" fg:x="277" fg:w="1"/><text x="5.2302%" y="271.50"></text></g><g><title>TiXmlDocument::Parse (6 samples, 0.11%)</title><rect x="4.9083%" y="389" width="0.1079%" height="15" fill="rgb(253,106,12)" fg:x="273" fg:w="6"/><text x="5.1583%" y="399.50"></text></g><g><title>TiXmlElement::Parse (6 samples, 0.11%)</title><rect x="4.9083%" y="373" width="0.1079%" height="15" fill="rgb(213,46,41)" fg:x="273" fg:w="6"/><text x="5.1583%" y="383.50"></text></g><g><title>TiXmlElement::ReadValue (6 samples, 0.11%)</title><rect x="4.9083%" y="357" width="0.1079%" height="15" fill="rgb(215,133,35)" fg:x="273" fg:w="6"/><text x="5.1583%" y="367.50"></text></g><g><title>TiXmlElement::Parse (6 samples, 0.11%)</title><rect x="4.9083%" y="341" width="0.1079%" height="15" fill="rgb(213,28,5)" fg:x="273" fg:w="6"/><text x="5.1583%" y="351.50"></text></g><g><title>TiXmlElement::ReadValue (5 samples, 0.09%)</title><rect x="4.9263%" y="325" width="0.0899%" height="15" fill="rgb(215,77,49)" fg:x="274" fg:w="5"/><text x="5.1763%" y="335.50"></text></g><g><title>TiXmlElement::Parse (5 samples, 0.09%)</title><rect x="4.9263%" y="309" width="0.0899%" height="15" fill="rgb(248,100,22)" fg:x="274" fg:w="5"/><text x="5.1763%" y="319.50"></text></g><g><title>TiXmlParsingData::Stamp (1 samples, 0.02%)</title><rect x="4.9982%" y="293" width="0.0180%" height="15" fill="rgb(208,67,9)" fg:x="278" fg:w="1"/><text x="5.2482%" y="303.50"></text></g><g><title>TiXmlElement::~TiXmlElement (1 samples, 0.02%)</title><rect x="5.0162%" y="245" width="0.0180%" height="15" fill="rgb(219,133,21)" fg:x="279" fg:w="1"/><text x="5.2662%" y="255.50"></text></g><g><title>TiXmlElement::~TiXmlElement (1 samples, 0.02%)</title><rect x="5.0162%" y="229" width="0.0180%" height="15" fill="rgb(246,46,29)" fg:x="279" fg:w="1"/><text x="5.2662%" y="239.50"></text></g><g><title>TiXmlElement::ClearThis (1 samples, 0.02%)</title><rect x="5.0162%" y="213" width="0.0180%" height="15" fill="rgb(246,185,52)" fg:x="279" fg:w="1"/><text x="5.2662%" y="223.50"></text></g><g><title>TiXmlNode::Clear (1 samples, 0.02%)</title><rect x="5.0162%" y="197" width="0.0180%" height="15" fill="rgb(252,136,11)" fg:x="279" fg:w="1"/><text x="5.2662%" y="207.50"></text></g><g><title>TiXmlElement::~TiXmlElement (1 samples, 0.02%)</title><rect x="5.0162%" y="181" width="0.0180%" height="15" fill="rgb(219,138,53)" fg:x="279" fg:w="1"/><text x="5.2662%" y="191.50"></text></g><g><title>TiXmlElement::~TiXmlElement (1 samples, 0.02%)</title><rect x="5.0162%" y="165" width="0.0180%" height="15" fill="rgb(211,51,23)" fg:x="279" fg:w="1"/><text x="5.2662%" y="175.50"></text></g><g><title>TiXmlElement::ClearThis (1 samples, 0.02%)</title><rect x="5.0162%" y="149" width="0.0180%" height="15" fill="rgb(247,221,28)" fg:x="279" fg:w="1"/><text x="5.2662%" y="159.50"></text></g><g><title>TiXmlNode::Clear (1 samples, 0.02%)</title><rect x="5.0162%" y="133" width="0.0180%" height="15" fill="rgb(251,222,45)" fg:x="279" fg:w="1"/><text x="5.2662%" y="143.50"></text></g><g><title>TiXmlText::~TiXmlText (1 samples, 0.02%)</title><rect x="5.0162%" y="117" width="0.0180%" height="15" fill="rgb(217,162,53)" fg:x="279" fg:w="1"/><text x="5.2662%" y="127.50"></text></g><g><title>TiXmlNode::~TiXmlNode (1 samples, 0.02%)</title><rect x="5.0162%" y="101" width="0.0180%" height="15" fill="rgb(229,93,14)" fg:x="279" fg:w="1"/><text x="5.2662%" y="111.50"></text></g><g><title>TiXmlNode::~TiXmlNode (2 samples, 0.04%)</title><rect x="5.0162%" y="389" width="0.0360%" height="15" fill="rgb(209,67,49)" fg:x="279" fg:w="2"/><text x="5.2662%" y="399.50"></text></g><g><title>TiXmlElement::~TiXmlElement (2 samples, 0.04%)</title><rect x="5.0162%" y="373" width="0.0360%" height="15" fill="rgb(213,87,29)" fg:x="279" fg:w="2"/><text x="5.2662%" y="383.50"></text></g><g><title>TiXmlElement::~TiXmlElement (2 samples, 0.04%)</title><rect x="5.0162%" y="357" width="0.0360%" height="15" fill="rgb(205,151,52)" fg:x="279" fg:w="2"/><text x="5.2662%" y="367.50"></text></g><g><title>TiXmlElement::ClearThis (2 samples, 0.04%)</title><rect x="5.0162%" y="341" width="0.0360%" height="15" fill="rgb(253,215,39)" fg:x="279" fg:w="2"/><text x="5.2662%" y="351.50"></text></g><g><title>TiXmlNode::Clear (2 samples, 0.04%)</title><rect x="5.0162%" y="325" width="0.0360%" height="15" fill="rgb(221,220,41)" fg:x="279" fg:w="2"/><text x="5.2662%" y="335.50"></text></g><g><title>TiXmlElement::~TiXmlElement (2 samples, 0.04%)</title><rect x="5.0162%" y="309" width="0.0360%" height="15" fill="rgb(218,133,21)" fg:x="279" fg:w="2"/><text x="5.2662%" y="319.50"></text></g><g><title>TiXmlElement::~TiXmlElement (2 samples, 0.04%)</title><rect x="5.0162%" y="293" width="0.0360%" height="15" fill="rgb(221,193,43)" fg:x="279" fg:w="2"/><text x="5.2662%" y="303.50"></text></g><g><title>TiXmlElement::ClearThis (2 samples, 0.04%)</title><rect x="5.0162%" y="277" width="0.0360%" height="15" fill="rgb(240,128,52)" fg:x="279" fg:w="2"/><text x="5.2662%" y="287.50"></text></g><g><title>TiXmlNode::Clear (2 samples, 0.04%)</title><rect x="5.0162%" y="261" width="0.0360%" height="15" fill="rgb(253,114,12)" fg:x="279" fg:w="2"/><text x="5.2662%" y="271.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="5.0342%" y="245" width="0.0180%" height="15" fill="rgb(215,223,47)" fg:x="280" fg:w="1"/><text x="5.2842%" y="255.50"></text></g><g><title>urdf::parseCollision (1 samples, 0.02%)</title><rect x="5.0521%" y="373" width="0.0180%" height="15" fill="rgb(248,225,23)" fg:x="281" fg:w="1"/><text x="5.3021%" y="383.50"></text></g><g><title>urdf::parseGeometry (1 samples, 0.02%)</title><rect x="5.0521%" y="357" width="0.0180%" height="15" fill="rgb(250,108,0)" fg:x="281" fg:w="1"/><text x="5.3021%" y="367.50"></text></g><g><title>urdf::parseCylinder (1 samples, 0.02%)</title><rect x="5.0521%" y="341" width="0.0180%" height="15" fill="rgb(228,208,7)" fg:x="281" fg:w="1"/><text x="5.3021%" y="351.50"></text></g><g><title>std::istream::_M_extract&lt;double&gt; (1 samples, 0.02%)</title><rect x="5.0521%" y="325" width="0.0180%" height="15" fill="rgb(244,45,10)" fg:x="281" fg:w="1"/><text x="5.3021%" y="335.50"></text></g><g><title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_get (1 samples, 0.02%)</title><rect x="5.0521%" y="309" width="0.0180%" height="15" fill="rgb(207,125,25)" fg:x="281" fg:w="1"/><text x="5.3021%" y="319.50"></text></g><g><title>std::__convert_to_v&lt;double&gt; (1 samples, 0.02%)</title><rect x="5.0521%" y="293" width="0.0180%" height="15" fill="rgb(210,195,18)" fg:x="281" fg:w="1"/><text x="5.3021%" y="303.50"></text></g><g><title>__GI_____strtod_l_internal (1 samples, 0.02%)</title><rect x="5.0521%" y="277" width="0.0180%" height="15" fill="rgb(249,80,12)" fg:x="281" fg:w="1"/><text x="5.3021%" y="287.50"></text></g><g><title>TiXmlElement::Attribute (1 samples, 0.02%)</title><rect x="5.0701%" y="357" width="0.0180%" height="15" fill="rgb(221,65,9)" fg:x="282" fg:w="1"/><text x="5.3201%" y="367.50"></text></g><g><title>TiXmlAttributeSet::Find (1 samples, 0.02%)</title><rect x="5.0701%" y="341" width="0.0180%" height="15" fill="rgb(235,49,36)" fg:x="282" fg:w="1"/><text x="5.3201%" y="351.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.02%)</title><rect x="5.0701%" y="325" width="0.0180%" height="15" fill="rgb(225,32,20)" fg:x="282" fg:w="1"/><text x="5.3201%" y="335.50"></text></g><g><title>urdf::parseInertial (2 samples, 0.04%)</title><rect x="5.0701%" y="373" width="0.0360%" height="15" fill="rgb(215,141,46)" fg:x="282" fg:w="2"/><text x="5.3201%" y="383.50"></text></g><g><title>urdf::parsePose (1 samples, 0.02%)</title><rect x="5.0881%" y="357" width="0.0180%" height="15" fill="rgb(250,160,47)" fg:x="283" fg:w="1"/><text x="5.3381%" y="367.50"></text></g><g><title>urdf::Vector3::init (1 samples, 0.02%)</title><rect x="5.0881%" y="341" width="0.0180%" height="15" fill="rgb(216,222,40)" fg:x="283" fg:w="1"/><text x="5.3381%" y="351.50"></text></g><g><title>std::vector&lt;double, std::allocator&lt;double&gt; &gt;::_M_realloc_insert&lt;double&gt; (1 samples, 0.02%)</title><rect x="5.0881%" y="325" width="0.0180%" height="15" fill="rgb(234,217,39)" fg:x="283" fg:w="1"/><text x="5.3381%" y="335.50"></text></g><g><title>operator new (1 samples, 0.02%)</title><rect x="5.0881%" y="309" width="0.0180%" height="15" fill="rgb(207,178,40)" fg:x="283" fg:w="1"/><text x="5.3381%" y="319.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="5.0881%" y="293" width="0.0180%" height="15" fill="rgb(221,136,13)" fg:x="283" fg:w="1"/><text x="5.3381%" y="303.50"></text></g><g><title>urdf::parseGeometry (1 samples, 0.02%)</title><rect x="5.1061%" y="357" width="0.0180%" height="15" fill="rgb(249,199,10)" fg:x="284" fg:w="1"/><text x="5.3561%" y="367.50"></text></g><g><title>urdf::parseCylinder (1 samples, 0.02%)</title><rect x="5.1061%" y="341" width="0.0180%" height="15" fill="rgb(249,222,13)" fg:x="284" fg:w="1"/><text x="5.3561%" y="351.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::imbue (1 samples, 0.02%)</title><rect x="5.1061%" y="325" width="0.0180%" height="15" fill="rgb(244,185,38)" fg:x="284" fg:w="1"/><text x="5.3561%" y="335.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="5.1061%" y="309" width="0.0180%" height="15" fill="rgb(236,202,9)" fg:x="284" fg:w="1"/><text x="5.3561%" y="319.50"></text></g><g><title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="5.1061%" y="293" width="0.0180%" height="15" fill="rgb(250,229,37)" fg:x="284" fg:w="1"/><text x="5.3561%" y="303.50"></text></g><g><title>__dynamic_cast (1 samples, 0.02%)</title><rect x="5.1061%" y="277" width="0.0180%" height="15" fill="rgb(206,174,23)" fg:x="284" fg:w="1"/><text x="5.3561%" y="287.50"></text></g><g><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.02%)</title><rect x="5.1061%" y="261" width="0.0180%" height="15" fill="rgb(211,33,43)" fg:x="284" fg:w="1"/><text x="5.3561%" y="271.50"></text></g><g><title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="5.1061%" y="245" width="0.0180%" height="15" fill="rgb(245,58,50)" fg:x="284" fg:w="1"/><text x="5.3561%" y="255.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::imbue (1 samples, 0.02%)</title><rect x="5.1241%" y="325" width="0.0180%" height="15" fill="rgb(244,68,36)" fg:x="285" fg:w="1"/><text x="5.3741%" y="335.50"></text></g><g><title>std::locale::~locale@plt (1 samples, 0.02%)</title><rect x="5.1241%" y="309" width="0.0180%" height="15" fill="rgb(232,229,15)" fg:x="285" fg:w="1"/><text x="5.3741%" y="319.50"></text></g><g><title>std::istream::_M_extract&lt;double&gt; (1 samples, 0.02%)</title><rect x="5.1420%" y="325" width="0.0180%" height="15" fill="rgb(254,30,23)" fg:x="286" fg:w="1"/><text x="5.3920%" y="335.50"></text></g><g><title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_get (1 samples, 0.02%)</title><rect x="5.1420%" y="309" width="0.0180%" height="15" fill="rgb(235,160,14)" fg:x="286" fg:w="1"/><text x="5.3920%" y="319.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.02%)</title><rect x="5.1420%" y="293" width="0.0180%" height="15" fill="rgb(212,155,44)" fg:x="286" fg:w="1"/><text x="5.3920%" y="303.50"></text></g><g><title>std::string::_Rep::_M_dispose (1 samples, 0.02%)</title><rect x="5.1420%" y="277" width="0.0180%" height="15" fill="rgb(226,2,50)" fg:x="286" fg:w="1"/><text x="5.3920%" y="287.50"></text></g><g><title>std::string::_Rep::_M_dispose (1 samples, 0.02%)</title><rect x="5.1420%" y="261" width="0.0180%" height="15" fill="rgb(234,177,6)" fg:x="286" fg:w="1"/><text x="5.3920%" y="271.50"></text></g><g><title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.02%)</title><rect x="5.1420%" y="245" width="0.0180%" height="15" fill="rgb(217,24,9)" fg:x="286" fg:w="1"/><text x="5.3920%" y="255.50"></text></g><g><title>__gnu_cxx::__exchange_and_add (1 samples, 0.02%)</title><rect x="5.1420%" y="229" width="0.0180%" height="15" fill="rgb(220,13,46)" fg:x="286" fg:w="1"/><text x="5.3920%" y="239.50"></text></g><g><title>defineCrocoddylProblem (58 samples, 1.04%)</title><rect x="4.1352%" y="453" width="1.0428%" height="15" fill="rgb(239,221,27)" fg:x="230" fg:w="58"/><text x="4.3852%" y="463.50"></text></g><g><title>pinocchio::urdf::details::parseRootTree (27 samples, 0.49%)</title><rect x="4.6926%" y="437" width="0.4854%" height="15" fill="rgb(222,198,25)" fg:x="261" fg:w="27"/><text x="4.9426%" y="447.50"></text></g><g><title>urdf::parseURDFFile (26 samples, 0.47%)</title><rect x="4.7105%" y="421" width="0.4675%" height="15" fill="rgb(211,99,13)" fg:x="262" fg:w="26"/><text x="4.9605%" y="431.50"></text></g><g><title>urdf::parseURDF (15 samples, 0.27%)</title><rect x="4.9083%" y="405" width="0.2697%" height="15" fill="rgb(232,111,31)" fg:x="273" fg:w="15"/><text x="5.1583%" y="415.50"></text></g><g><title>urdf::parseLink (7 samples, 0.13%)</title><rect x="5.0521%" y="389" width="0.1259%" height="15" fill="rgb(245,82,37)" fg:x="281" fg:w="7"/><text x="5.3021%" y="399.50"></text></g><g><title>urdf::parseVisual (4 samples, 0.07%)</title><rect x="5.1061%" y="373" width="0.0719%" height="15" fill="rgb(227,149,46)" fg:x="284" fg:w="4"/><text x="5.3561%" y="383.50"></text></g><g><title>urdf::parsePose (3 samples, 0.05%)</title><rect x="5.1241%" y="357" width="0.0539%" height="15" fill="rgb(218,36,50)" fg:x="285" fg:w="3"/><text x="5.3741%" y="367.50"></text></g><g><title>urdf::Vector3::init (3 samples, 0.05%)</title><rect x="5.1241%" y="341" width="0.0539%" height="15" fill="rgb(226,80,48)" fg:x="285" fg:w="3"/><text x="5.3741%" y="351.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="5.1600%" y="325" width="0.0180%" height="15" fill="rgb(238,224,15)" fg:x="287" fg:w="1"/><text x="5.4100%" y="335.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="5.1600%" y="309" width="0.0180%" height="15" fill="rgb(241,136,10)" fg:x="287" fg:w="1"/><text x="5.4100%" y="319.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (38 samples, 0.68%)</title><rect x="5.8972%" y="405" width="0.6832%" height="15" fill="rgb(208,32,45)" fg:x="328" fg:w="38"/><text x="6.1472%" y="415.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::calc (21 samples, 0.38%)</title><rect x="7.5333%" y="373" width="0.3776%" height="15" fill="rgb(207,135,9)" fg:x="419" fg:w="21"/><text x="7.7833%" y="383.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (16 samples, 0.29%)</title><rect x="8.1985%" y="357" width="0.2877%" height="15" fill="rgb(206,86,44)" fg:x="456" fg:w="16"/><text x="8.4485%" y="367.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="8.4862%" y="357" width="0.0180%" height="15" fill="rgb(245,177,15)" fg:x="472" fg:w="1"/><text x="8.7362%" y="367.50"></text></g><g><title>__memset_avx2_unaligned_erms (14 samples, 0.25%)</title><rect x="8.5041%" y="357" width="0.2517%" height="15" fill="rgb(206,64,50)" fg:x="473" fg:w="14"/><text x="8.7541%" y="367.50"></text></g><g><title>crocoddyl::ActuationModelFullTpl&lt;double&gt;::calc (36 samples, 0.65%)</title><rect x="8.7558%" y="357" width="0.6472%" height="15" fill="rgb(234,36,40)" fg:x="487" fg:w="36"/><text x="9.0058%" y="367.50"></text></g><g><title>crocoddyl::ActivationModelQuadTpl&lt;double&gt;::calc (8 samples, 0.14%)</title><rect x="9.8526%" y="325" width="0.1438%" height="15" fill="rgb(213,64,8)" fg:x="548" fg:w="8"/><text x="10.1026%" y="335.50"></text></g><g><title>crocoddyl::ResidualModelControlTpl&lt;double&gt;::calc (18 samples, 0.32%)</title><rect x="9.9964%" y="325" width="0.3236%" height="15" fill="rgb(210,75,36)" fg:x="556" fg:w="18"/><text x="10.2464%" y="335.50"></text></g><g><title>__sincos_fma (2 samples, 0.04%)</title><rect x="11.2370%" y="293" width="0.0360%" height="15" fill="rgb(229,88,21)" fg:x="625" fg:w="2"/><text x="11.4870%" y="303.50"></text></g><g><title>libc_feholdsetround_sse_ctx (1 samples, 0.02%)</title><rect x="11.2549%" y="277" width="0.0180%" height="15" fill="rgb(252,204,47)" fg:x="626" fg:w="1"/><text x="11.5049%" y="287.50"></text></g><g><title>__atan2 (24 samples, 0.43%)</title><rect x="11.4527%" y="277" width="0.4315%" height="15" fill="rgb(208,77,27)" fg:x="637" fg:w="24"/><text x="11.7027%" y="287.50"></text></g><g><title>__ieee754_atan2_fma (23 samples, 0.41%)</title><rect x="11.4707%" y="261" width="0.4135%" height="15" fill="rgb(221,76,26)" fg:x="638" fg:w="23"/><text x="11.7207%" y="271.50"></text></g><g><title>libc_feholdsetround_sse_ctx (1 samples, 0.02%)</title><rect x="11.8662%" y="245" width="0.0180%" height="15" fill="rgb(225,139,18)" fg:x="660" fg:w="1"/><text x="12.1162%" y="255.50"></text></g><g><title>__ieee754_acos_fma (8 samples, 0.14%)</title><rect x="11.8842%" y="277" width="0.1438%" height="15" fill="rgb(230,137,11)" fg:x="661" fg:w="8"/><text x="12.1342%" y="287.50"></text></g><g><title>do_cos (2 samples, 0.04%)</title><rect x="12.0280%" y="261" width="0.0360%" height="15" fill="rgb(212,28,1)" fg:x="669" fg:w="2"/><text x="12.2780%" y="271.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::calc (98 samples, 1.76%)</title><rect x="10.3200%" y="325" width="1.7620%" height="15" fill="rgb(248,164,17)" fg:x="574" fg:w="98"/><text x="10.5700%" y="335.50"></text></g><g><title>pinocchio::log6_impl&lt;double&gt;::run&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (54 samples, 0.97%)</title><rect x="11.1111%" y="309" width="0.9709%" height="15" fill="rgb(222,171,42)" fg:x="618" fg:w="54"/><text x="11.3611%" y="319.50"></text></g><g><title>pinocchio::log3_impl&lt;double&gt;::run&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; &gt; (45 samples, 0.81%)</title><rect x="11.2729%" y="293" width="0.8091%" height="15" fill="rgb(243,84,45)" fg:x="627" fg:w="45"/><text x="11.5229%" y="303.50"></text></g><g><title>__sin_fma (3 samples, 0.05%)</title><rect x="12.0280%" y="277" width="0.0539%" height="15" fill="rgb(252,49,23)" fg:x="669" fg:w="3"/><text x="12.2780%" y="287.50"></text></g><g><title>libc_feholdsetround_sse_ctx (1 samples, 0.02%)</title><rect x="12.0640%" y="261" width="0.0180%" height="15" fill="rgb(215,19,7)" fg:x="671" fg:w="1"/><text x="12.3140%" y="271.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calc (157 samples, 2.82%)</title><rect x="9.6009%" y="341" width="2.8227%" height="15" fill="rgb(238,81,41)" fg:x="534" fg:w="157"/><text x="9.8509%" y="351.50">cr..</text></g><g><title>crocoddyl::ResidualModelStateTpl&lt;double&gt;::calc (19 samples, 0.34%)</title><rect x="12.0820%" y="325" width="0.3416%" height="15" fill="rgb(210,199,37)" fg:x="672" fg:w="19"/><text x="12.3320%" y="335.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::diff (8 samples, 0.14%)</title><rect x="12.2798%" y="309" width="0.1438%" height="15" fill="rgb(244,192,49)" fg:x="683" fg:w="8"/><text x="12.5298%" y="319.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (4 samples, 0.07%)</title><rect x="12.3517%" y="293" width="0.0719%" height="15" fill="rgb(226,211,11)" fg:x="687" fg:w="4"/><text x="12.6017%" y="303.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14DifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (4 samples, 0.07%)</title><rect x="12.3517%" y="277" width="0.0719%" height="15" fill="rgb(236,162,54)" fg:x="687" fg:w="4"/><text x="12.6017%" y="287.50"></text></g><g><title>local_Rb_tree_increment (6 samples, 0.11%)</title><rect x="12.4236%" y="341" width="0.1079%" height="15" fill="rgb(220,229,9)" fg:x="691" fg:w="6"/><text x="12.6736%" y="351.50"></text></g><g><title>std::local_Rb_tree_increment (6 samples, 0.11%)</title><rect x="12.4236%" y="325" width="0.1079%" height="15" fill="rgb(250,87,22)" fg:x="691" fg:w="6"/><text x="12.6736%" y="335.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calc (196 samples, 3.52%)</title><rect x="9.4031%" y="357" width="3.5239%" height="15" fill="rgb(239,43,17)" fg:x="523" fg:w="196"/><text x="9.6531%" y="367.50">cro..</text></g><g><title>std::local_Rb_tree_increment (22 samples, 0.40%)</title><rect x="12.5315%" y="341" width="0.3955%" height="15" fill="rgb(231,177,25)" fg:x="697" fg:w="22"/><text x="12.7815%" y="351.50"></text></g><g><title>local_Rb_tree_increment (17 samples, 0.31%)</title><rect x="12.6214%" y="325" width="0.3056%" height="15" fill="rgb(219,179,1)" fg:x="702" fg:w="17"/><text x="12.8714%" y="335.50"></text></g><g><title>Eigen::internal::Assignment&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 9u&gt;, Eigen::TriangularView&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, 9u&gt;, Eigen::internal::assign_op&lt;double, double&gt;, Eigen::internal::Triangular2Triangular, void&gt;::run (4 samples, 0.07%)</title><rect x="12.9809%" y="341" width="0.0719%" height="15" fill="rgb(238,219,53)" fg:x="722" fg:w="4"/><text x="13.2309%" y="351.50"></text></g><g><title>pinocchio::cholesky::computeMinv&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (76 samples, 1.37%)</title><rect x="12.9270%" y="357" width="1.3664%" height="15" fill="rgb(232,167,36)" fg:x="719" fg:w="76"/><text x="13.1770%" y="367.50"></text></g><g><title>pinocchio::cholesky::internal::Miunit&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt; &gt; (69 samples, 1.24%)</title><rect x="13.0529%" y="341" width="1.2406%" height="15" fill="rgb(244,19,51)" fg:x="726" fg:w="69"/><text x="13.3029%" y="351.50"></text></g><g><title>__memset_avx2_unaligned_erms (4 samples, 0.07%)</title><rect x="14.2215%" y="325" width="0.0719%" height="15" fill="rgb(224,6,22)" fg:x="791" fg:w="4"/><text x="14.4715%" y="335.50"></text></g><g><title>pinocchio::cholesky::decompose&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; (48 samples, 0.86%)</title><rect x="14.2934%" y="357" width="0.8630%" height="15" fill="rgb(224,145,5)" fg:x="795" fg:w="48"/><text x="14.5434%" y="367.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl14CATForwardStepIdLi0ES16_N5Eigen3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEES1M_EEvE27InternalVisitorModelAndDataINS1_13JointModelTplIdLi0ES16_EENS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES16_EERNS1_7DataTplIdLi0ES16_EERKS1M_S22_EEEEEEENT_11result_typeERS25_ (3 samples, 0.05%)</title><rect x="16.3251%" y="341" width="0.0539%" height="15" fill="rgb(234,130,49)" fg:x="908" fg:w="3"/><text x="16.5751%" y="351.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl15CATBackwardStepIdLi0ES16_EEvE27InternalVisitorModelAndDataINS1_13JointModelTplIdLi0ES16_EENS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES16_EERNS1_7DataTplIdLi0ES16_EEEEEEEEENT_11result_typeERS1V_ (2 samples, 0.04%)</title><rect x="16.3790%" y="341" width="0.0360%" height="15" fill="rgb(254,6,2)" fg:x="911" fg:w="2"/><text x="16.6290%" y="351.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_28KineticEnergyAlgoForwardStepIdLi0ES16_EEvE27InternalVisitorModelAndDataINS1_13JointModelTplIdLi0ES16_EENS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES16_EERNS1_7DataTplIdLi0ES16_EEEEEEEEENT_11result_typeERS1U_ (3 samples, 0.05%)</title><rect x="16.6127%" y="325" width="0.0539%" height="15" fill="rgb(208,96,46)" fg:x="924" fg:w="3"/><text x="16.8627%" y="335.50"></text></g><g><title>pinocchio::computeMechanicalEnergy&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; (30 samples, 0.54%)</title><rect x="16.4150%" y="341" width="0.5394%" height="15" fill="rgb(239,3,39)" fg:x="913" fg:w="30"/><text x="16.6650%" y="351.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::KineticEnergyAlgoForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (16 samples, 0.29%)</title><rect x="16.6667%" y="325" width="0.2877%" height="15" fill="rgb(233,210,1)" fg:x="927" fg:w="16"/><text x="16.9167%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::vtiv_impl&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (10 samples, 0.18%)</title><rect x="16.7745%" y="309" width="0.1798%" height="15" fill="rgb(244,137,37)" fg:x="933" fg:w="10"/><text x="17.0245%" y="319.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, (1 samples, 0.02%)</title><rect x="16.9543%" y="325" width="0.0180%" height="15" fill="rgb(240,136,2)" fg:x="943" fg:w="1"/><text x="17.2043%" y="335.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (5 samples, 0.09%)</title><rect x="18.2129%" y="309" width="0.0899%" height="15" fill="rgb(239,18,37)" fg:x="1013" fg:w="5"/><text x="18.4629%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (24 samples, 0.43%)</title><rect x="18.3028%" y="309" width="0.4315%" height="15" fill="rgb(218,185,22)" fg:x="1018" fg:w="24"/><text x="18.5528%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt;, 3, 1, false&gt; &gt; (3 samples, 0.05%)</title><rect x="18.6803%" y="293" width="0.0539%" height="15" fill="rgb(225,218,4)" fg:x="1039" fg:w="3"/><text x="18.9303%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (9 samples, 0.16%)</title><rect x="18.7343%" y="309" width="0.1618%" height="15" fill="rgb(230,182,32)" fg:x="1042" fg:w="9"/><text x="18.9843%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="18.8961%" y="309" width="0.0180%" height="15" fill="rgb(242,56,43)" fg:x="1051" fg:w="1"/><text x="19.1461%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-= (1 samples, 0.02%)</title><rect x="18.9500%" y="293" width="0.0180%" height="15" fill="rgb(233,99,24)" fg:x="1054" fg:w="1"/><text x="19.2000%" y="303.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (113 samples, 2.03%)</title><rect x="16.9543%" y="341" width="2.0316%" height="15" fill="rgb(234,209,42)" fg:x="943" fg:w="113"/><text x="17.2043%" y="351.50">p..</text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (112 samples, 2.01%)</title><rect x="16.9723%" y="325" width="2.0137%" height="15" fill="rgb(227,7,12)" fg:x="944" fg:w="112"/><text x="17.2223%" y="335.50">p..</text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (4 samples, 0.07%)</title><rect x="18.9141%" y="309" width="0.0719%" height="15" fill="rgb(245,203,43)" fg:x="1052" fg:w="4"/><text x="19.1641%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-=@plt (1 samples, 0.02%)</title><rect x="18.9680%" y="293" width="0.0180%" height="15" fill="rgb(238,205,33)" fg:x="1055" fg:w="1"/><text x="19.2180%" y="303.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointDataRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointDataHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointDataCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;boost::detail::variant::get_visitor&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt; &gt; (36 samples, 0.65%)</title><rect x="19.7231%" y="325" width="0.6472%" height="15" fill="rgb(231,56,7)" fg:x="1097" fg:w="36"/><text x="19.9731%" y="335.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (28 samples, 0.50%)</title><rect x="21.3233%" y="309" width="0.5034%" height="15" fill="rgb(244,186,29)" fg:x="1186" fg:w="28"/><text x="21.5733%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="21.8267%" y="309" width="0.0180%" height="15" fill="rgb(234,111,31)" fg:x="1214" fg:w="1"/><text x="22.0767%" y="319.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="21.8267%" y="293" width="0.0180%" height="15" fill="rgb(241,149,10)" fg:x="1214" fg:w="1"/><text x="22.0767%" y="303.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="21.8267%" y="277" width="0.0180%" height="15" fill="rgb(249,206,44)" fg:x="1214" fg:w="1"/><text x="22.0767%" y="287.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="21.8267%" y="261" width="0.0180%" height="15" fill="rgb(251,153,30)" fg:x="1214" fg:w="1"/><text x="22.0767%" y="271.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="21.8267%" y="245" width="0.0180%" height="15" fill="rgb(239,152,38)" fg:x="1214" fg:w="1"/><text x="22.0767%" y="255.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="21.8267%" y="229" width="0.0180%" height="15" fill="rgb(249,139,47)" fg:x="1214" fg:w="1"/><text x="22.0767%" y="239.50"></text></g><g><title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="21.8267%" y="213" width="0.0180%" height="15" fill="rgb(244,64,35)" fg:x="1214" fg:w="1"/><text x="22.0767%" y="223.50"></text></g><g><title>tick_do_update_jiffies64 (1 samples, 0.02%)</title><rect x="21.8267%" y="197" width="0.0180%" height="15" fill="rgb(216,46,15)" fg:x="1214" fg:w="1"/><text x="22.0767%" y="207.50"></text></g><g><title>update_wall_time (1 samples, 0.02%)</title><rect x="21.8267%" y="181" width="0.0180%" height="15" fill="rgb(250,74,19)" fg:x="1214" fg:w="1"/><text x="22.0767%" y="191.50"></text></g><g><title>timekeeping_adjust.constprop.0 (1 samples, 0.02%)</title><rect x="21.8267%" y="165" width="0.0180%" height="15" fill="rgb(249,42,33)" fg:x="1214" fg:w="1"/><text x="22.0767%" y="175.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (3 samples, 0.05%)</title><rect x="21.8447%" y="309" width="0.0539%" height="15" fill="rgb(242,149,17)" fg:x="1215" fg:w="3"/><text x="22.0947%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (17 samples, 0.31%)</title><rect x="21.8986%" y="309" width="0.3056%" height="15" fill="rgb(244,29,21)" fg:x="1218" fg:w="17"/><text x="22.1486%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (2 samples, 0.04%)</title><rect x="22.1683%" y="293" width="0.0360%" height="15" fill="rgb(220,130,37)" fg:x="1233" fg:w="2"/><text x="22.4183%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (5 samples, 0.09%)</title><rect x="22.2042%" y="309" width="0.0899%" height="15" fill="rgb(211,67,2)" fg:x="1235" fg:w="5"/><text x="22.4542%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt; (4 samples, 0.07%)</title><rect x="22.2222%" y="293" width="0.0719%" height="15" fill="rgb(235,68,52)" fg:x="1236" fg:w="4"/><text x="22.4722%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (53 samples, 0.95%)</title><rect x="22.2941%" y="309" width="0.9529%" height="15" fill="rgb(246,142,3)" fg:x="1240" fg:w="53"/><text x="22.5441%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator- (1 samples, 0.02%)</title><rect x="23.2291%" y="293" width="0.0180%" height="15" fill="rgb(241,25,7)" fg:x="1292" fg:w="1"/><text x="23.4791%" y="303.50"></text></g><g><title>do_cos (1 samples, 0.02%)</title><rect x="23.2650%" y="261" width="0.0180%" height="15" fill="rgb(242,119,39)" fg:x="1294" fg:w="1"/><text x="23.5150%" y="271.50"></text></g><g><title>do_sin (1 samples, 0.02%)</title><rect x="23.2830%" y="261" width="0.0180%" height="15" fill="rgb(241,98,45)" fg:x="1295" fg:w="1"/><text x="23.5330%" y="271.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="23.2470%" y="293" width="0.0719%" height="15" fill="rgb(254,28,30)" fg:x="1293" fg:w="4"/><text x="23.4970%" y="303.50"></text></g><g><title>__sincos_fma (4 samples, 0.07%)</title><rect x="23.2470%" y="277" width="0.0719%" height="15" fill="rgb(241,142,54)" fg:x="1293" fg:w="4"/><text x="23.4970%" y="287.50"></text></g><g><title>libc_feholdsetround_sse_ctx (1 samples, 0.02%)</title><rect x="23.3010%" y="261" width="0.0180%" height="15" fill="rgb(222,85,15)" fg:x="1296" fg:w="1"/><text x="23.5510%" y="271.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (5 samples, 0.09%)</title><rect x="23.2470%" y="309" width="0.0899%" height="15" fill="rgb(210,85,47)" fg:x="1293" fg:w="5"/><text x="23.4970%" y="319.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;@plt (1 samples, 0.02%)</title><rect x="23.3190%" y="293" width="0.0180%" height="15" fill="rgb(224,206,25)" fg:x="1297" fg:w="1"/><text x="23.5690%" y="303.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (8 samples, 0.14%)</title><rect x="23.3369%" y="309" width="0.1438%" height="15" fill="rgb(243,201,19)" fg:x="1298" fg:w="8"/><text x="23.5869%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (11 samples, 0.20%)</title><rect x="23.4808%" y="309" width="0.1978%" height="15" fill="rgb(236,59,4)" fg:x="1306" fg:w="11"/><text x="23.7308%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="23.6785%" y="309" width="0.0180%" height="15" fill="rgb(254,179,45)" fg:x="1317" fg:w="1"/><text x="23.9285%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (17 samples, 0.31%)</title><rect x="23.6965%" y="309" width="0.3056%" height="15" fill="rgb(226,14,10)" fg:x="1318" fg:w="17"/><text x="23.9465%" y="319.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (209 samples, 3.76%)</title><rect x="20.3704%" y="325" width="3.7576%" height="15" fill="rgb(244,27,41)" fg:x="1133" fg:w="209"/><text x="20.6204%" y="335.50">pino..</text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (7 samples, 0.13%)</title><rect x="24.0022%" y="309" width="0.1259%" height="15" fill="rgb(235,35,32)" fg:x="1335" fg:w="7"/><text x="24.2522%" y="319.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;&gt; &gt;::operator (287 samples, 5.16%)</title><rect x="18.9860%" y="341" width="5.1600%" height="15" fill="rgb(218,68,31)" fg:x="1056" fg:w="287"/><text x="19.2360%" y="351.50">pinocc..</text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="24.1280%" y="325" width="0.0180%" height="15" fill="rgb(207,120,37)" fg:x="1342" fg:w="1"/><text x="24.3780%" y="335.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (9 samples, 0.16%)</title><rect x="24.5056%" y="325" width="0.1618%" height="15" fill="rgb(227,98,0)" fg:x="1363" fg:w="9"/><text x="24.7556%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (15 samples, 0.27%)</title><rect x="24.6674%" y="325" width="0.2697%" height="15" fill="rgb(207,7,3)" fg:x="1372" fg:w="15"/><text x="24.9174%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="25.0809%" y="309" width="0.0180%" height="15" fill="rgb(206,98,19)" fg:x="1395" fg:w="1"/><text x="25.3309%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (10 samples, 0.18%)</title><rect x="24.9371%" y="325" width="0.1798%" height="15" fill="rgb(217,5,26)" fg:x="1387" fg:w="10"/><text x="25.1871%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="25.0989%" y="309" width="0.0180%" height="15" fill="rgb(235,190,38)" fg:x="1396" fg:w="1"/><text x="25.3489%" y="319.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (60 samples, 1.08%)</title><rect x="24.1460%" y="341" width="1.0787%" height="15" fill="rgb(247,86,24)" fg:x="1343" fg:w="60"/><text x="24.3960%" y="351.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (6 samples, 0.11%)</title><rect x="25.1169%" y="325" width="0.1079%" height="15" fill="rgb(205,101,16)" fg:x="1397" fg:w="6"/><text x="25.3669%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-= (3 samples, 0.05%)</title><rect x="25.1708%" y="309" width="0.0539%" height="15" fill="rgb(246,168,33)" fg:x="1400" fg:w="3"/><text x="25.4208%" y="319.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="25.2247%" y="341" width="0.0180%" height="15" fill="rgb(231,114,1)" fg:x="1403" fg:w="1"/><text x="25.4747%" y="351.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (7 samples, 0.13%)</title><rect x="25.4764%" y="325" width="0.1259%" height="15" fill="rgb(207,184,53)" fg:x="1417" fg:w="7"/><text x="25.7264%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (11 samples, 0.20%)</title><rect x="25.6023%" y="325" width="0.1978%" height="15" fill="rgb(224,95,51)" fg:x="1424" fg:w="11"/><text x="25.8523%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt;, 3, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="25.7821%" y="309" width="0.0180%" height="15" fill="rgb(212,188,45)" fg:x="1434" fg:w="1"/><text x="26.0321%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (6 samples, 0.11%)</title><rect x="25.8001%" y="325" width="0.1079%" height="15" fill="rgb(223,154,38)" fg:x="1435" fg:w="6"/><text x="26.0501%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="25.8900%" y="309" width="0.0180%" height="15" fill="rgb(251,22,52)" fg:x="1440" fg:w="1"/><text x="26.1400%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="25.9079%" y="325" width="0.0180%" height="15" fill="rgb(229,209,22)" fg:x="1441" fg:w="1"/><text x="26.1579%" y="335.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (45 samples, 0.81%)</title><rect x="25.2427%" y="341" width="0.8091%" height="15" fill="rgb(234,138,34)" fg:x="1404" fg:w="45"/><text x="25.4927%" y="351.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (7 samples, 0.13%)</title><rect x="25.9259%" y="325" width="0.1259%" height="15" fill="rgb(212,95,11)" fg:x="1442" fg:w="7"/><text x="26.1759%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-= (5 samples, 0.09%)</title><rect x="25.9619%" y="309" width="0.0899%" height="15" fill="rgb(240,179,47)" fg:x="1444" fg:w="5"/><text x="26.2119%" y="319.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="26.0518%" y="341" width="0.0180%" height="15" fill="rgb(240,163,11)" fg:x="1449" fg:w="1"/><text x="26.3018%" y="351.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (10 samples, 0.18%)</title><rect x="26.9507%" y="325" width="0.1798%" height="15" fill="rgb(236,37,12)" fg:x="1499" fg:w="10"/><text x="27.2007%" y="335.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="27.1305%" y="325" width="0.0180%" height="15" fill="rgb(232,164,16)" fg:x="1509" fg:w="1"/><text x="27.3805%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (6 samples, 0.11%)</title><rect x="27.1485%" y="325" width="0.1079%" height="15" fill="rgb(244,205,15)" fg:x="1510" fg:w="6"/><text x="27.3985%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="27.2384%" y="309" width="0.0180%" height="15" fill="rgb(223,117,47)" fg:x="1515" fg:w="1"/><text x="27.4884%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (3 samples, 0.05%)</title><rect x="27.2564%" y="325" width="0.0539%" height="15" fill="rgb(244,107,35)" fg:x="1516" fg:w="3"/><text x="27.5064%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt; (1 samples, 0.02%)</title><rect x="27.2923%" y="309" width="0.0180%" height="15" fill="rgb(205,140,8)" fg:x="1518" fg:w="1"/><text x="27.5423%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (33 samples, 0.59%)</title><rect x="27.3103%" y="325" width="0.5933%" height="15" fill="rgb(228,84,46)" fg:x="1519" fg:w="33"/><text x="27.5603%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator- (3 samples, 0.05%)</title><rect x="27.8497%" y="309" width="0.0539%" height="15" fill="rgb(254,188,9)" fg:x="1549" fg:w="3"/><text x="28.0997%" y="319.50"></text></g><g><title>do_cos (2 samples, 0.04%)</title><rect x="27.9755%" y="277" width="0.0360%" height="15" fill="rgb(206,112,54)" fg:x="1556" fg:w="2"/><text x="28.2255%" y="287.50"></text></g><g><title>do_sin (2 samples, 0.04%)</title><rect x="28.0115%" y="277" width="0.0360%" height="15" fill="rgb(216,84,49)" fg:x="1558" fg:w="2"/><text x="28.2615%" y="287.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (9 samples, 0.16%)</title><rect x="27.9036%" y="325" width="0.1618%" height="15" fill="rgb(214,194,35)" fg:x="1552" fg:w="9"/><text x="28.1536%" y="335.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (9 samples, 0.16%)</title><rect x="27.9036%" y="309" width="0.1618%" height="15" fill="rgb(249,28,3)" fg:x="1552" fg:w="9"/><text x="28.1536%" y="319.50"></text></g><g><title>__sincos_fma (7 samples, 0.13%)</title><rect x="27.9396%" y="293" width="0.1259%" height="15" fill="rgb(222,56,52)" fg:x="1554" fg:w="7"/><text x="28.1896%" y="303.50"></text></g><g><title>libc_feholdsetround_sse_ctx (1 samples, 0.02%)</title><rect x="28.0475%" y="277" width="0.0180%" height="15" fill="rgb(245,217,50)" fg:x="1560" fg:w="1"/><text x="28.2975%" y="287.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (6 samples, 0.11%)</title><rect x="28.0654%" y="325" width="0.1079%" height="15" fill="rgb(213,201,24)" fg:x="1561" fg:w="6"/><text x="28.3154%" y="335.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (5 samples, 0.09%)</title><rect x="28.1733%" y="325" width="0.0899%" height="15" fill="rgb(248,116,28)" fg:x="1567" fg:w="5"/><text x="28.4233%" y="335.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (4 samples, 0.07%)</title><rect x="28.2632%" y="325" width="0.0719%" height="15" fill="rgb(219,72,43)" fg:x="1572" fg:w="4"/><text x="28.5132%" y="335.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="28.3351%" y="325" width="0.0180%" height="15" fill="rgb(209,138,14)" fg:x="1576" fg:w="1"/><text x="28.5851%" y="335.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (7 samples, 0.13%)</title><rect x="28.3531%" y="325" width="0.1259%" height="15" fill="rgb(222,18,33)" fg:x="1577" fg:w="7"/><text x="28.6031%" y="335.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (136 samples, 2.45%)</title><rect x="26.0698%" y="341" width="2.4452%" height="15" fill="rgb(213,199,7)" fg:x="1450" fg:w="136"/><text x="26.3198%" y="351.50">pi..</text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt;@plt (2 samples, 0.04%)</title><rect x="28.4790%" y="325" width="0.0360%" height="15" fill="rgb(250,110,10)" fg:x="1584" fg:w="2"/><text x="28.7290%" y="335.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (23 samples, 0.41%)</title><rect x="29.1082%" y="325" width="0.4135%" height="15" fill="rgb(248,123,6)" fg:x="1619" fg:w="23"/><text x="29.3582%" y="335.50"></text></g><g><title>asm_sysvec_reschedule_ipi (5 samples, 0.09%)</title><rect x="29.6476%" y="309" width="0.0899%" height="15" fill="rgb(206,91,31)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="319.50"></text></g><g><title>sysvec_reschedule_ipi (5 samples, 0.09%)</title><rect x="29.6476%" y="293" width="0.0899%" height="15" fill="rgb(211,154,13)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="303.50"></text></g><g><title>irqentry_exit (5 samples, 0.09%)</title><rect x="29.6476%" y="277" width="0.0899%" height="15" fill="rgb(225,148,7)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="287.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.09%)</title><rect x="29.6476%" y="261" width="0.0899%" height="15" fill="rgb(220,160,43)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="271.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.09%)</title><rect x="29.6476%" y="245" width="0.0899%" height="15" fill="rgb(213,52,39)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="255.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.09%)</title><rect x="29.6476%" y="229" width="0.0899%" height="15" fill="rgb(243,137,7)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="239.50"></text></g><g><title>schedule (5 samples, 0.09%)</title><rect x="29.6476%" y="213" width="0.0899%" height="15" fill="rgb(230,79,13)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="223.50"></text></g><g><title>__schedule (5 samples, 0.09%)</title><rect x="29.6476%" y="197" width="0.0899%" height="15" fill="rgb(247,105,23)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="207.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.09%)</title><rect x="29.6476%" y="181" width="0.0899%" height="15" fill="rgb(223,179,41)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="191.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.09%)</title><rect x="29.6476%" y="165" width="0.0899%" height="15" fill="rgb(218,9,34)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="175.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.09%)</title><rect x="29.6476%" y="149" width="0.0899%" height="15" fill="rgb(222,106,8)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="159.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.09%)</title><rect x="29.6476%" y="133" width="0.0899%" height="15" fill="rgb(211,220,0)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="143.50"></text></g><g><title>native_write_msr (5 samples, 0.09%)</title><rect x="29.6476%" y="117" width="0.0899%" height="15" fill="rgb(229,52,16)" fg:x="1649" fg:w="5"/><text x="29.8976%" y="127.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="29.7375%" y="309" width="0.0180%" height="15" fill="rgb(212,155,18)" fg:x="1654" fg:w="1"/><text x="29.9875%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (14 samples, 0.25%)</title><rect x="29.5218%" y="325" width="0.2517%" height="15" fill="rgb(242,21,14)" fg:x="1642" fg:w="14"/><text x="29.7718%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="29.7555%" y="309" width="0.0180%" height="15" fill="rgb(222,19,48)" fg:x="1655" fg:w="1"/><text x="30.0055%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="29.7735%" y="325" width="0.0180%" height="15" fill="rgb(232,45,27)" fg:x="1656" fg:w="1"/><text x="30.0235%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (4 samples, 0.07%)</title><rect x="29.7914%" y="325" width="0.0719%" height="15" fill="rgb(249,103,42)" fg:x="1657" fg:w="4"/><text x="30.0414%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt; (3 samples, 0.05%)</title><rect x="29.8094%" y="309" width="0.0539%" height="15" fill="rgb(246,81,33)" fg:x="1658" fg:w="3"/><text x="30.0594%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (22 samples, 0.40%)</title><rect x="29.8634%" y="325" width="0.3955%" height="15" fill="rgb(252,33,42)" fg:x="1661" fg:w="22"/><text x="30.1134%" y="335.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="30.2589%" y="325" width="0.0180%" height="15" fill="rgb(209,212,41)" fg:x="1683" fg:w="1"/><text x="30.5089%" y="335.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="30.2589%" y="309" width="0.0180%" height="15" fill="rgb(207,154,6)" fg:x="1683" fg:w="1"/><text x="30.5089%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="30.2769%" y="325" width="0.1259%" height="15" fill="rgb(223,64,47)" fg:x="1684" fg:w="7"/><text x="30.5269%" y="335.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (4 samples, 0.07%)</title><rect x="30.4027%" y="325" width="0.0719%" height="15" fill="rgb(211,161,38)" fg:x="1691" fg:w="4"/><text x="30.6527%" y="335.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (5 samples, 0.09%)</title><rect x="30.4746%" y="325" width="0.0899%" height="15" fill="rgb(219,138,40)" fg:x="1695" fg:w="5"/><text x="30.7246%" y="335.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (13 samples, 0.23%)</title><rect x="30.5645%" y="325" width="0.2337%" height="15" fill="rgb(241,228,46)" fg:x="1700" fg:w="13"/><text x="30.8145%" y="335.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (128 samples, 2.30%)</title><rect x="28.5149%" y="341" width="2.3013%" height="15" fill="rgb(223,209,38)" fg:x="1586" fg:w="128"/><text x="28.7649%" y="351.50">p..</text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="30.7983%" y="325" width="0.0180%" height="15" fill="rgb(236,164,45)" fg:x="1713" fg:w="1"/><text x="31.0483%" y="335.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::calc (1,275 samples, 22.92%)</title><rect x="7.9108%" y="373" width="22.9234%" height="15" fill="rgb(231,15,5)" fg:x="440" fg:w="1275"/><text x="8.1608%" y="383.50">crocoddyl::DifferentialActionModelFr..</text></g><g><title>pinocchio::impl::computeAllTerms&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (872 samples, 15.68%)</title><rect x="15.1564%" y="357" width="15.6778%" height="15" fill="rgb(252,35,15)" fg:x="843" fg:w="872"/><text x="15.4064%" y="367.50">pinocchio::impl::compute..</text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="30.8163%" y="341" width="0.0180%" height="15" fill="rgb(248,181,18)" fg:x="1714" fg:w="1"/><text x="31.0663%" y="351.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calc (1,336 samples, 24.02%)</title><rect x="6.8860%" y="389" width="24.0201%" height="15" fill="rgb(233,39,42)" fg:x="383" fg:w="1336"/><text x="7.1360%" y="399.50">crocoddyl::IntegratedActionModelEulerT..</text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::integrate (4 samples, 0.07%)</title><rect x="30.8342%" y="373" width="0.0719%" height="15" fill="rgb(238,110,33)" fg:x="1715" fg:w="4"/><text x="31.0842%" y="383.50"></text></g><g><title>pinocchio::integrate&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (3 samples, 0.05%)</title><rect x="30.8522%" y="357" width="0.0539%" height="15" fill="rgb(233,195,10)" fg:x="1716" fg:w="3"/><text x="31.1022%" y="367.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_13IntegrateStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (2 samples, 0.04%)</title><rect x="30.8702%" y="341" width="0.0360%" height="15" fill="rgb(254,105,3)" fg:x="1717" fg:w="2"/><text x="31.1202%" y="351.50"></text></g><g><title>proxddp::compat::croc::CrocActionModelWrapperTpl&lt;double&gt;::evaluate (1,361 samples, 24.47%)</title><rect x="6.5804%" y="405" width="24.4696%" height="15" fill="rgb(221,225,9)" fg:x="366" fg:w="1361"/><text x="6.8304%" y="415.50">proxddp::compat::croc::CrocActionModelW..</text></g><g><title>proxddp::compat::croc::StateWrapperTpl&lt;double&gt;::difference_impl (8 samples, 0.14%)</title><rect x="30.9061%" y="389" width="0.1438%" height="15" fill="rgb(224,227,45)" fg:x="1719" fg:w="8"/><text x="31.1561%" y="399.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::diff (8 samples, 0.14%)</title><rect x="30.9061%" y="373" width="0.1438%" height="15" fill="rgb(229,198,43)" fg:x="1719" fg:w="8"/><text x="31.1561%" y="383.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (7 samples, 0.13%)</title><rect x="30.9241%" y="357" width="0.1259%" height="15" fill="rgb(206,209,35)" fg:x="1720" fg:w="7"/><text x="31.1741%" y="367.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14DifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (2 samples, 0.04%)</title><rect x="31.0140%" y="341" width="0.0360%" height="15" fill="rgb(245,195,53)" fg:x="1725" fg:w="2"/><text x="31.2640%" y="351.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calc (4 samples, 0.07%)</title><rect x="31.0500%" y="357" width="0.0719%" height="15" fill="rgb(240,92,26)" fg:x="1727" fg:w="4"/><text x="31.3000%" y="367.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calc (2 samples, 0.04%)</title><rect x="31.0859%" y="341" width="0.0360%" height="15" fill="rgb(207,40,23)" fg:x="1729" fg:w="2"/><text x="31.3359%" y="351.50"></text></g><g><title>crocoddyl::ResidualModelAbstractTpl&lt;double&gt;::calc (2 samples, 0.04%)</title><rect x="31.0859%" y="325" width="0.0360%" height="15" fill="rgb(223,111,35)" fg:x="1729" fg:w="2"/><text x="31.3359%" y="335.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::calc (2 samples, 0.04%)</title><rect x="31.0859%" y="309" width="0.0360%" height="15" fill="rgb(229,147,28)" fg:x="1729" fg:w="2"/><text x="31.3359%" y="319.50"></text></g><g><title>pinocchio::log6_impl&lt;double&gt;::run&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="31.1039%" y="293" width="0.0180%" height="15" fill="rgb(211,29,28)" fg:x="1730" fg:w="1"/><text x="31.3539%" y="303.50"></text></g><g><title>pinocchio::log3_impl&lt;double&gt;::run&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="31.1039%" y="277" width="0.0180%" height="15" fill="rgb(228,72,33)" fg:x="1730" fg:w="1"/><text x="31.3539%" y="287.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="31.1219%" y="341" width="0.0180%" height="15" fill="rgb(205,214,31)" fg:x="1731" fg:w="1"/><text x="31.3719%" y="351.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="31.1219%" y="325" width="0.0180%" height="15" fill="rgb(224,111,15)" fg:x="1731" fg:w="1"/><text x="31.3719%" y="335.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointDataRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointDataHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointDataCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;boost::detail::variant::get_visitor&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="31.1399%" y="325" width="0.0360%" height="15" fill="rgb(253,21,26)" fg:x="1732" fg:w="2"/><text x="31.3899%" y="335.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;&gt; &gt;::operator (3 samples, 0.05%)</title><rect x="31.1399%" y="341" width="0.0539%" height="15" fill="rgb(245,139,43)" fg:x="1732" fg:w="3"/><text x="31.3899%" y="351.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="31.1758%" y="325" width="0.0180%" height="15" fill="rgb(252,170,7)" fg:x="1734" fg:w="1"/><text x="31.4258%" y="335.50"></text></g><g><title>proxddp::compat::croc::CrocCostModelWrapperTpl&lt;double&gt;::evaluate (9 samples, 0.16%)</title><rect x="31.0500%" y="405" width="0.1618%" height="15" fill="rgb(231,118,14)" fg:x="1727" fg:w="9"/><text x="31.3000%" y="415.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calc (9 samples, 0.16%)</title><rect x="31.0500%" y="389" width="0.1618%" height="15" fill="rgb(238,83,0)" fg:x="1727" fg:w="9"/><text x="31.3000%" y="399.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::calc (9 samples, 0.16%)</title><rect x="31.0500%" y="373" width="0.1618%" height="15" fill="rgb(221,39,39)" fg:x="1727" fg:w="9"/><text x="31.3000%" y="383.50"></text></g><g><title>pinocchio::impl::computeAllTerms&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (5 samples, 0.09%)</title><rect x="31.1219%" y="357" width="0.0899%" height="15" fill="rgb(222,119,46)" fg:x="1731" fg:w="5"/><text x="31.3719%" y="367.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (1 samples, 0.02%)</title><rect x="31.1938%" y="341" width="0.0180%" height="15" fill="rgb(222,165,49)" fg:x="1735" fg:w="1"/><text x="31.4438%" y="351.50"></text></g><g><title>proxddp::compat::croc::StateWrapperTpl&lt;double&gt;::difference_impl (9 samples, 0.16%)</title><rect x="31.2118%" y="405" width="0.1618%" height="15" fill="rgb(219,113,52)" fg:x="1736" fg:w="9"/><text x="31.4618%" y="415.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::diff (9 samples, 0.16%)</title><rect x="31.2118%" y="389" width="0.1618%" height="15" fill="rgb(214,7,15)" fg:x="1736" fg:w="9"/><text x="31.4618%" y="399.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (6 samples, 0.11%)</title><rect x="31.2657%" y="373" width="0.1079%" height="15" fill="rgb(235,32,4)" fg:x="1739" fg:w="6"/><text x="31.5157%" y="383.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14DifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (4 samples, 0.07%)</title><rect x="31.3017%" y="357" width="0.0719%" height="15" fill="rgb(238,90,54)" fg:x="1741" fg:w="4"/><text x="31.5517%" y="367.50"></text></g><g><title>proxddp::compat::croc::StateWrapperTpl&lt;double&gt;::integrate_impl (6 samples, 0.11%)</title><rect x="31.3736%" y="405" width="0.1079%" height="15" fill="rgb(213,208,19)" fg:x="1745" fg:w="6"/><text x="31.6236%" y="415.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::integrate (6 samples, 0.11%)</title><rect x="31.3736%" y="389" width="0.1079%" height="15" fill="rgb(233,156,4)" fg:x="1745" fg:w="6"/><text x="31.6236%" y="399.50"></text></g><g><title>pinocchio::integrate&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (2 samples, 0.04%)</title><rect x="31.4455%" y="373" width="0.0360%" height="15" fill="rgb(207,194,5)" fg:x="1749" fg:w="2"/><text x="31.6955%" y="383.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_13IntegrateStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (1 samples, 0.02%)</title><rect x="31.4635%" y="357" width="0.0180%" height="15" fill="rgb(206,111,30)" fg:x="1750" fg:w="1"/><text x="31.7135%" y="367.50"></text></g><g><title>proxddp::SolverFDDP&lt;double&gt;::forwardPass (1,454 samples, 26.14%)</title><rect x="5.3937%" y="421" width="26.1417%" height="15" fill="rgb(243,70,54)" fg:x="300" fg:w="1454"/><text x="5.6437%" y="431.50">proxddp::SolverFDDP&lt;double&gt;::forwardPass</text></g><g><title>proxnlp::VectorSpaceTpl&lt;double, -1, 0&gt;::integrate_impl (3 samples, 0.05%)</title><rect x="31.4815%" y="405" width="0.0539%" height="15" fill="rgb(242,28,8)" fg:x="1751" fg:w="3"/><text x="31.7315%" y="415.50"></text></g><g><title>proxddp::FDDPGoldsteinLinesearch&lt;double&gt;::run&lt;proxddp::SolverFDDP&lt;double&gt;::run(proxddp::TrajOptProblemTpl&lt;double&gt; const&amp;, std::vector&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, std::allocator&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; &gt; const&amp;, std::vector&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, std::allocator&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; &gt; const&amp;)::{lambda(double)#1}, proxddp::SolverFDDP&lt;double&gt;::run(proxddp::TrajOptProblemTpl&lt;double&gt; const&amp;, std::vector&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, std::allocator&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; &gt; const&amp;, std::vector&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, std::allocator&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; &gt; const&amp;)::{lambda(double)#2}&gt; (1,462 samples, 26.29%)</title><rect x="5.2679%" y="437" width="26.2855%" height="15" fill="rgb(219,106,18)" fg:x="293" fg:w="1462"/><text x="5.5179%" y="447.50">proxddp::FDDPGoldsteinLinesearch&lt;double&gt;::..</text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="31.5354%" y="421" width="0.0180%" height="15" fill="rgb(244,222,10)" fg:x="1754" fg:w="1"/><text x="31.7854%" y="431.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (5 samples, 0.09%)</title><rect x="33.1535%" y="405" width="0.0899%" height="15" fill="rgb(236,179,52)" fg:x="1844" fg:w="5"/><text x="33.4035%" y="415.50"></text></g><g><title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (9 samples, 0.16%)</title><rect x="33.2434%" y="405" width="0.1618%" height="15" fill="rgb(213,23,39)" fg:x="1849" fg:w="9"/><text x="33.4934%" y="415.50"></text></g><g><title>Eigen::LLT&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1&gt;::compute&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt; (55 samples, 0.99%)</title><rect x="32.9738%" y="421" width="0.9889%" height="15" fill="rgb(238,48,10)" fg:x="1834" fg:w="55"/><text x="33.2238%" y="431.50"></text></g><g><title>Eigen::internal::llt_inplace&lt;double, 1&gt;::unblocked&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (31 samples, 0.56%)</title><rect x="33.4052%" y="405" width="0.5574%" height="15" fill="rgb(251,196,23)" fg:x="1858" fg:w="31"/><text x="33.6552%" y="415.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (17 samples, 0.31%)</title><rect x="33.6570%" y="389" width="0.3056%" height="15" fill="rgb(250,152,24)" fg:x="1872" fg:w="17"/><text x="33.9070%" y="399.50"></text></g><g><title>Eigen::internal::Assignment&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::SelfAdjointView&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1u&gt;, Eigen::internal::assign_op&lt;double, double&gt;, Eigen::internal::EigenBase2EigenBase, void&gt;::run (10 samples, 0.18%)</title><rect x="33.9626%" y="421" width="0.1798%" height="15" fill="rgb(209,150,17)" fg:x="1889" fg:w="10"/><text x="34.2126%" y="431.50"></text></g><g><title>Eigen::internal::call_triangular_assignment_loop&lt;17, false, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (9 samples, 0.16%)</title><rect x="33.9806%" y="405" width="0.1618%" height="15" fill="rgb(234,202,34)" fg:x="1890" fg:w="9"/><text x="34.2306%" y="415.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (145 samples, 2.61%)</title><rect x="34.4121%" y="373" width="2.6070%" height="15" fill="rgb(253,148,53)" fg:x="1914" fg:w="145"/><text x="34.6621%" y="383.50">Ei..</text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (10 samples, 0.18%)</title><rect x="37.0191%" y="373" width="0.1798%" height="15" fill="rgb(218,129,16)" fg:x="2059" fg:w="10"/><text x="37.2691%" y="383.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, -1, -1, true&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt; &gt; (187 samples, 3.36%)</title><rect x="34.1424%" y="405" width="3.3621%" height="15" fill="rgb(216,85,19)" fg:x="1899" fg:w="187"/><text x="34.3924%" y="415.50">Eig..</text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 1, false, double, 0, false, 0&gt;::run (186 samples, 3.34%)</title><rect x="34.1604%" y="389" width="3.3441%" height="15" fill="rgb(235,228,7)" fg:x="1900" fg:w="186"/><text x="34.4104%" y="399.50">Eig..</text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (17 samples, 0.31%)</title><rect x="37.1988%" y="373" width="0.3056%" height="15" fill="rgb(245,175,0)" fg:x="2069" fg:w="17"/><text x="37.4488%" y="383.50"></text></g><g><title>Eigen::internal::Assignment&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, -1, -1, true&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0&gt;, Eigen::internal::assign_op&lt;double, double&gt;, Eigen::internal::Dense2Dense, void&gt;::run (200 samples, 3.60%)</title><rect x="34.1424%" y="421" width="3.5958%" height="15" fill="rgb(208,168,36)" fg:x="1899" fg:w="200"/><text x="34.3924%" y="431.50">Eige..</text></g><g><title>__memset_avx2_unaligned_erms (13 samples, 0.23%)</title><rect x="37.5045%" y="405" width="0.2337%" height="15" fill="rgb(246,171,24)" fg:x="2086" fg:w="13"/><text x="37.7545%" y="415.50"></text></g><g><title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (17 samples, 0.31%)</title><rect x="37.7382%" y="421" width="0.3056%" height="15" fill="rgb(215,142,24)" fg:x="2099" fg:w="17"/><text x="37.9882%" y="431.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (130 samples, 2.34%)</title><rect x="38.0439%" y="421" width="2.3373%" height="15" fill="rgb(250,187,7)" fg:x="2116" fg:w="130"/><text x="38.2939%" y="431.50">E..</text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, -1, -1, true&gt; &gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (73 samples, 1.31%)</title><rect x="40.3812%" y="421" width="1.3125%" height="15" fill="rgb(228,66,33)" fg:x="2246" fg:w="73"/><text x="40.6312%" y="431.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 1, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, false, 0&gt;::run (72 samples, 1.29%)</title><rect x="40.3991%" y="405" width="1.2945%" height="15" fill="rgb(234,215,21)" fg:x="2247" fg:w="72"/><text x="40.6491%" y="415.50"></text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; (23 samples, 0.41%)</title><rect x="41.6936%" y="421" width="0.4135%" height="15" fill="rgb(222,191,20)" fg:x="2319" fg:w="23"/><text x="41.9436%" y="431.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 1, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, false, 0&gt;::run (23 samples, 0.41%)</title><rect x="41.6936%" y="405" width="0.4135%" height="15" fill="rgb(245,79,54)" fg:x="2319" fg:w="23"/><text x="41.9436%" y="415.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (32 samples, 0.58%)</title><rect x="42.1072%" y="421" width="0.5753%" height="15" fill="rgb(240,10,37)" fg:x="2342" fg:w="32"/><text x="42.3572%" y="431.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (174 samples, 3.13%)</title><rect x="42.7904%" y="389" width="3.1284%" height="15" fill="rgb(214,192,32)" fg:x="2380" fg:w="174"/><text x="43.0404%" y="399.50">Eig..</text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (11 samples, 0.20%)</title><rect x="45.9187%" y="389" width="0.1978%" height="15" fill="rgb(209,36,54)" fg:x="2554" fg:w="11"/><text x="46.1687%" y="399.50"></text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 1, false, double, 0, false, 0&gt;::run (212 samples, 3.81%)</title><rect x="42.6825%" y="405" width="3.8116%" height="15" fill="rgb(220,10,11)" fg:x="2374" fg:w="212"/><text x="42.9325%" y="415.50">Eige..</text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (21 samples, 0.38%)</title><rect x="46.1165%" y="389" width="0.3776%" height="15" fill="rgb(221,106,17)" fg:x="2565" fg:w="21"/><text x="46.3665%" y="399.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, -1, -1, true&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt; (213 samples, 3.83%)</title><rect x="42.6825%" y="421" width="3.8296%" height="15" fill="rgb(251,142,44)" fg:x="2374" fg:w="213"/><text x="42.9325%" y="431.50">Eige..</text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="46.4941%" y="405" width="0.0180%" height="15" fill="rgb(238,13,15)" fg:x="2586" fg:w="1"/><text x="46.7441%" y="415.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (48 samples, 0.86%)</title><rect x="46.6739%" y="389" width="0.8630%" height="15" fill="rgb(208,107,27)" fg:x="2596" fg:w="48"/><text x="46.9239%" y="399.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 2, 0, false, false&gt;::operator (6 samples, 0.11%)</title><rect x="47.5369%" y="389" width="0.1079%" height="15" fill="rgb(205,136,37)" fg:x="2644" fg:w="6"/><text x="47.7869%" y="399.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (69 samples, 1.24%)</title><rect x="46.5120%" y="421" width="1.2406%" height="15" fill="rgb(250,205,27)" fg:x="2587" fg:w="69"/><text x="46.7620%" y="431.50"></text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 0, false, double, 0, false, 0&gt;::run (67 samples, 1.20%)</title><rect x="46.5480%" y="405" width="1.2046%" height="15" fill="rgb(210,80,43)" fg:x="2589" fg:w="67"/><text x="46.7980%" y="415.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (6 samples, 0.11%)</title><rect x="47.6447%" y="389" width="0.1079%" height="15" fill="rgb(247,160,36)" fg:x="2650" fg:w="6"/><text x="47.8947%" y="399.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (24 samples, 0.43%)</title><rect x="48.6516%" y="389" width="0.4315%" height="15" fill="rgb(234,13,49)" fg:x="2706" fg:w="24"/><text x="48.9016%" y="399.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 2, 0, false, false&gt;::operator (3 samples, 0.05%)</title><rect x="49.0831%" y="389" width="0.0539%" height="15" fill="rgb(234,122,0)" fg:x="2730" fg:w="3"/><text x="49.3331%" y="399.50"></text></g><g><title>Eigen::internal::triangular_solver_selector&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1, 1, 0, -1&gt;::run (93 samples, 1.67%)</title><rect x="47.7526%" y="421" width="1.6721%" height="15" fill="rgb(207,146,38)" fg:x="2656" fg:w="93"/><text x="48.0026%" y="431.50"></text></g><g><title>Eigen::internal::triangular_solve_matrix&lt;double, long, 1, 1, false, 0, 0&gt;::run (93 samples, 1.67%)</title><rect x="47.7526%" y="405" width="1.6721%" height="15" fill="rgb(207,177,25)" fg:x="2656" fg:w="93"/><text x="48.0026%" y="415.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 0, false, true&gt;::operator (16 samples, 0.29%)</title><rect x="49.1370%" y="389" width="0.2877%" height="15" fill="rgb(211,178,42)" fg:x="2733" fg:w="16"/><text x="49.3870%" y="399.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (10 samples, 0.18%)</title><rect x="49.9820%" y="389" width="0.1798%" height="15" fill="rgb(230,69,54)" fg:x="2780" fg:w="10"/><text x="50.2320%" y="399.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (1 samples, 0.02%)</title><rect x="50.1618%" y="389" width="0.0180%" height="15" fill="rgb(214,135,41)" fg:x="2790" fg:w="1"/><text x="50.4118%" y="399.50"></text></g><g><title>Eigen::internal::triangular_solver_selector&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1, 2, 0, -1&gt;::run (54 samples, 0.97%)</title><rect x="49.4247%" y="421" width="0.9709%" height="15" fill="rgb(237,67,25)" fg:x="2749" fg:w="54"/><text x="49.6747%" y="431.50"></text></g><g><title>Eigen::internal::triangular_solve_matrix&lt;double, long, 1, 2, false, 1, 0&gt;::run (54 samples, 0.97%)</title><rect x="49.4247%" y="405" width="0.9709%" height="15" fill="rgb(222,189,50)" fg:x="2749" fg:w="54"/><text x="49.6747%" y="415.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 0, false, true&gt;::operator (12 samples, 0.22%)</title><rect x="50.1798%" y="389" width="0.2157%" height="15" fill="rgb(245,148,34)" fg:x="2791" fg:w="12"/><text x="50.4298%" y="399.50"></text></g><g><title>proxddp::SolverFDDP&lt;double&gt;::backwardPass (1,056 samples, 18.99%)</title><rect x="31.5534%" y="437" width="18.9860%" height="15" fill="rgb(222,29,6)" fg:x="1755" fg:w="1056"/><text x="31.8034%" y="447.50">proxddp::SolverFDDP&lt;double&gt;::b..</text></g><g><title>__memset_avx2_unaligned_erms (8 samples, 0.14%)</title><rect x="50.3955%" y="421" width="0.1438%" height="15" fill="rgb(221,189,43)" fg:x="2803" fg:w="8"/><text x="50.6455%" y="431.50"></text></g><g><title>proxddp::SolverFDDP&lt;double&gt;::computeInfeasibility (55 samples, 0.99%)</title><rect x="50.5394%" y="437" width="0.9889%" height="15" fill="rgb(207,36,27)" fg:x="2811" fg:w="55"/><text x="50.7894%" y="447.50"></text></g><g><title>proxddp::compat::croc::StateWrapperTpl&lt;double&gt;::difference_impl (15 samples, 0.27%)</title><rect x="51.2585%" y="421" width="0.2697%" height="15" fill="rgb(217,90,24)" fg:x="2851" fg:w="15"/><text x="51.5085%" y="431.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::diff (15 samples, 0.27%)</title><rect x="51.2585%" y="405" width="0.2697%" height="15" fill="rgb(224,66,35)" fg:x="2851" fg:w="15"/><text x="51.5085%" y="415.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (13 samples, 0.23%)</title><rect x="51.2945%" y="389" width="0.2337%" height="15" fill="rgb(221,13,50)" fg:x="2853" fg:w="13"/><text x="51.5445%" y="399.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14DifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (12 samples, 0.22%)</title><rect x="51.3125%" y="373" width="0.2157%" height="15" fill="rgb(236,68,49)" fg:x="2854" fg:w="12"/><text x="51.5625%" y="383.50"></text></g><g><title>proxddp::SolverFDDP&lt;double&gt;::updateExpectedImprovement (61 samples, 1.10%)</title><rect x="51.5282%" y="437" width="1.0967%" height="15" fill="rgb(229,146,28)" fg:x="2866" fg:w="61"/><text x="51.7782%" y="447.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (37 samples, 0.67%)</title><rect x="51.9597%" y="421" width="0.6652%" height="15" fill="rgb(225,31,38)" fg:x="2890" fg:w="37"/><text x="52.2097%" y="431.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (114 samples, 2.05%)</title><rect x="54.2071%" y="405" width="2.0496%" height="15" fill="rgb(250,208,3)" fg:x="3015" fg:w="114"/><text x="54.4571%" y="415.50">E..</text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;double, double&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (14 samples, 0.25%)</title><rect x="57.2096%" y="389" width="0.2517%" height="15" fill="rgb(246,54,23)" fg:x="3182" fg:w="14"/><text x="57.4596%" y="399.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;double, double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (54 samples, 0.97%)</title><rect x="57.4613%" y="389" width="0.9709%" height="15" fill="rgb(243,76,11)" fg:x="3196" fg:w="54"/><text x="57.7113%" y="399.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::calc (14 samples, 0.25%)</title><rect x="58.4322%" y="389" width="0.2517%" height="15" fill="rgb(245,21,50)" fg:x="3250" fg:w="14"/><text x="58.6822%" y="399.50"></text></g><g><title>asm_sysvec_thermal (1 samples, 0.02%)</title><rect x="58.6659%" y="373" width="0.0180%" height="15" fill="rgb(228,9,43)" fg:x="3263" fg:w="1"/><text x="58.9159%" y="383.50"></text></g><g><title>sysvec_thermal (1 samples, 0.02%)</title><rect x="58.6659%" y="357" width="0.0180%" height="15" fill="rgb(208,100,47)" fg:x="3263" fg:w="1"/><text x="58.9159%" y="367.50"></text></g><g><title>__sysvec_thermal (1 samples, 0.02%)</title><rect x="58.6659%" y="341" width="0.0180%" height="15" fill="rgb(232,26,8)" fg:x="3263" fg:w="1"/><text x="58.9159%" y="351.50"></text></g><g><title>intel_thermal_interrupt (1 samples, 0.02%)</title><rect x="58.6659%" y="325" width="0.0180%" height="15" fill="rgb(216,166,38)" fg:x="3263" fg:w="1"/><text x="58.9159%" y="335.50"></text></g><g><title>pkg_thermal_notify (1 samples, 0.02%)</title><rect x="58.6659%" y="309" width="0.0180%" height="15" fill="rgb(251,202,51)" fg:x="3263" fg:w="1"/><text x="58.9159%" y="319.50"></text></g><g><title>native_read_msr (1 samples, 0.02%)</title><rect x="58.6659%" y="293" width="0.0180%" height="15" fill="rgb(254,216,34)" fg:x="3263" fg:w="1"/><text x="58.9159%" y="303.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::multiplyByJacobian (37 samples, 0.67%)</title><rect x="58.6839%" y="389" width="0.6652%" height="15" fill="rgb(251,32,27)" fg:x="3264" fg:w="37"/><text x="58.9339%" y="399.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (36 samples, 0.65%)</title><rect x="58.7019%" y="373" width="0.6472%" height="15" fill="rgb(208,127,28)" fg:x="3265" fg:w="36"/><text x="58.9519%" y="383.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::multiplyJacobianTransposeBy (10 samples, 0.18%)</title><rect x="59.3492%" y="389" width="0.1798%" height="15" fill="rgb(224,137,22)" fg:x="3301" fg:w="10"/><text x="59.5992%" y="399.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (8 samples, 0.14%)</title><rect x="59.3851%" y="373" width="0.1438%" height="15" fill="rgb(254,70,32)" fg:x="3303" fg:w="8"/><text x="59.6351%" y="383.50"></text></g><g><title>Eigen::internal::evaluateProductBlockingSizesHeuristic&lt;double, double, 1, long&gt; (2 samples, 0.04%)</title><rect x="60.7695%" y="341" width="0.0360%" height="15" fill="rgb(229,75,37)" fg:x="3380" fg:w="2"/><text x="61.0195%" y="351.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (80 samples, 1.44%)</title><rect x="61.1291%" y="325" width="1.4383%" height="15" fill="rgb(252,64,23)" fg:x="3400" fg:w="80"/><text x="61.3791%" y="335.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 2, 0, false, false&gt;::operator (27 samples, 0.49%)</title><rect x="62.5674%" y="325" width="0.4854%" height="15" fill="rgb(232,162,48)" fg:x="3480" fg:w="27"/><text x="62.8174%" y="335.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (21 samples, 0.38%)</title><rect x="63.0529%" y="325" width="0.3776%" height="15" fill="rgb(246,160,12)" fg:x="3507" fg:w="21"/><text x="63.3029%" y="335.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (150 samples, 2.70%)</title><rect x="60.7515%" y="357" width="2.6969%" height="15" fill="rgb(247,166,0)" fg:x="3379" fg:w="150"/><text x="61.0015%" y="367.50">Ei..</text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 0, false, double, 0, false, 0&gt;::run (147 samples, 2.64%)</title><rect x="60.8055%" y="341" width="2.6429%" height="15" fill="rgb(249,219,21)" fg:x="3382" fg:w="147"/><text x="61.0555%" y="351.50">Ei..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="63.4304%" y="325" width="0.0180%" height="15" fill="rgb(205,209,3)" fg:x="3528" fg:w="1"/><text x="63.6804%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="63.4304%" y="309" width="0.0180%" height="15" fill="rgb(243,44,1)" fg:x="3528" fg:w="1"/><text x="63.6804%" y="319.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="63.4304%" y="293" width="0.0180%" height="15" fill="rgb(206,159,16)" fg:x="3528" fg:w="1"/><text x="63.6804%" y="303.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="63.4304%" y="277" width="0.0180%" height="15" fill="rgb(244,77,30)" fg:x="3528" fg:w="1"/><text x="63.6804%" y="287.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="63.4304%" y="261" width="0.0180%" height="15" fill="rgb(218,69,12)" fg:x="3528" fg:w="1"/><text x="63.6804%" y="271.50"></text></g><g><title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="63.4304%" y="245" width="0.0180%" height="15" fill="rgb(212,87,7)" fg:x="3528" fg:w="1"/><text x="63.6804%" y="255.50"></text></g><g><title>rb_next (1 samples, 0.02%)</title><rect x="63.4304%" y="229" width="0.0180%" height="15" fill="rgb(245,114,25)" fg:x="3528" fg:w="1"/><text x="63.6804%" y="239.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (155 samples, 2.79%)</title><rect x="60.7515%" y="373" width="2.7868%" height="15" fill="rgb(210,61,42)" fg:x="3379" fg:w="155"/><text x="61.0015%" y="383.50">Ei..</text></g><g><title>__memset_avx2_unaligned_erms (5 samples, 0.09%)</title><rect x="63.4484%" y="357" width="0.0899%" height="15" fill="rgb(211,52,33)" fg:x="3529" fg:w="5"/><text x="63.6984%" y="367.50"></text></g><g><title>[example-croc-talos-arm] (1 samples, 0.02%)</title><rect x="67.2420%" y="357" width="0.0180%" height="15" fill="rgb(234,58,33)" fg:x="3740" fg:w="1"/><text x="67.4920%" y="367.50"></text></g><g><title>__memset_avx2_unaligned_erms (15 samples, 0.27%)</title><rect x="67.2600%" y="357" width="0.2697%" height="15" fill="rgb(220,115,36)" fg:x="3741" fg:w="15"/><text x="67.5100%" y="367.50"></text></g><g><title>Eigen::internal::evaluateProductBlockingSizesHeuristic&lt;double, double, 1, long&gt; (1 samples, 0.02%)</title><rect x="68.5185%" y="309" width="0.0180%" height="15" fill="rgb(243,153,54)" fg:x="3811" fg:w="1"/><text x="68.7685%" y="319.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (117 samples, 2.10%)</title><rect x="69.0399%" y="293" width="2.1036%" height="15" fill="rgb(251,47,18)" fg:x="3840" fg:w="117"/><text x="69.2899%" y="303.50">E..</text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (23 samples, 0.41%)</title><rect x="71.1435%" y="293" width="0.4135%" height="15" fill="rgb(242,102,42)" fg:x="3957" fg:w="23"/><text x="71.3935%" y="303.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (182 samples, 3.27%)</title><rect x="68.4826%" y="325" width="3.2722%" height="15" fill="rgb(234,31,38)" fg:x="3809" fg:w="182"/><text x="68.7326%" y="335.50">Eig..</text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 1, false, double, 0, false, 0&gt;::run (179 samples, 3.22%)</title><rect x="68.5365%" y="309" width="3.2183%" height="15" fill="rgb(221,117,51)" fg:x="3812" fg:w="179"/><text x="68.7865%" y="319.50">Eig..</text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (11 samples, 0.20%)</title><rect x="71.5570%" y="293" width="0.1978%" height="15" fill="rgb(212,20,18)" fg:x="3980" fg:w="11"/><text x="71.8070%" y="303.50"></text></g><g><title>Eigen::internal::Assignment&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0&gt;, Eigen::internal::assign_op&lt;double, double&gt;, Eigen::internal::Dense2Dense, void&gt;::run (205 samples, 3.69%)</title><rect x="68.3927%" y="341" width="3.6857%" height="15" fill="rgb(245,133,36)" fg:x="3804" fg:w="205"/><text x="68.6427%" y="351.50">Eige..</text></g><g><title>__memset_avx2_unaligned_erms (18 samples, 0.32%)</title><rect x="71.7548%" y="325" width="0.3236%" height="15" fill="rgb(212,6,19)" fg:x="3991" fg:w="18"/><text x="72.0048%" y="335.50"></text></g><g><title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Product&lt;Eigen::DiagonalWrapper&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1&gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (38 samples, 0.68%)</title><rect x="72.0784%" y="341" width="0.6832%" height="15" fill="rgb(218,1,36)" fg:x="4009" fg:w="38"/><text x="72.3284%" y="351.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Product&lt;Eigen::DiagonalWrapper&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, 1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (10 samples, 0.18%)</title><rect x="72.7616%" y="341" width="0.1798%" height="15" fill="rgb(246,84,54)" fg:x="4047" fg:w="10"/><text x="73.0116%" y="351.50"></text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; &gt; (15 samples, 0.27%)</title><rect x="72.9414%" y="341" width="0.2697%" height="15" fill="rgb(242,110,6)" fg:x="4057" fg:w="15"/><text x="73.1914%" y="351.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 1, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, false, 0&gt;::run (11 samples, 0.20%)</title><rect x="73.0133%" y="325" width="0.1978%" height="15" fill="rgb(214,47,5)" fg:x="4061" fg:w="11"/><text x="73.2633%" y="335.50"></text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; (61 samples, 1.10%)</title><rect x="73.2111%" y="341" width="1.0967%" height="15" fill="rgb(218,159,25)" fg:x="4072" fg:w="61"/><text x="73.4611%" y="351.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 1, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, false, 0&gt;::run (58 samples, 1.04%)</title><rect x="73.2650%" y="325" width="1.0428%" height="15" fill="rgb(215,211,28)" fg:x="4075" fg:w="58"/><text x="73.5150%" y="335.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (23 samples, 0.41%)</title><rect x="74.6674%" y="293" width="0.4135%" height="15" fill="rgb(238,59,32)" fg:x="4153" fg:w="23"/><text x="74.9174%" y="303.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (2 samples, 0.04%)</title><rect x="75.0809%" y="293" width="0.0360%" height="15" fill="rgb(226,82,3)" fg:x="4176" fg:w="2"/><text x="75.3309%" y="303.50"></text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 1, false, double, 0, false, 0&gt;::run (41 samples, 0.74%)</title><rect x="74.4696%" y="309" width="0.7371%" height="15" fill="rgb(240,164,32)" fg:x="4142" fg:w="41"/><text x="74.7196%" y="319.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (5 samples, 0.09%)</title><rect x="75.1169%" y="293" width="0.0899%" height="15" fill="rgb(232,46,7)" fg:x="4178" fg:w="5"/><text x="75.3669%" y="303.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt; (47 samples, 0.85%)</title><rect x="74.3797%" y="325" width="0.8450%" height="15" fill="rgb(229,129,53)" fg:x="4137" fg:w="47"/><text x="74.6297%" y="335.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="75.2068%" y="309" width="0.0180%" height="15" fill="rgb(234,188,29)" fg:x="4183" fg:w="1"/><text x="75.4568%" y="319.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt; (54 samples, 0.97%)</title><rect x="74.3078%" y="341" width="0.9709%" height="15" fill="rgb(246,141,4)" fg:x="4133" fg:w="54"/><text x="74.5578%" y="351.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.05%)</title><rect x="75.2247%" y="325" width="0.0539%" height="15" fill="rgb(229,23,39)" fg:x="4184" fg:w="3"/><text x="75.4747%" y="335.50"></text></g><g><title>[example-croc-talos-arm] (1 samples, 0.02%)</title><rect x="75.2787%" y="341" width="0.0180%" height="15" fill="rgb(206,12,3)" fg:x="4187" fg:w="1"/><text x="75.5287%" y="351.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="75.2967%" y="341" width="0.0360%" height="15" fill="rgb(252,226,20)" fg:x="4188" fg:w="2"/><text x="75.5467%" y="351.50"></text></g><g><title>crocoddyl::ActivationModelQuadTpl&lt;double&gt;::calcDiff (33 samples, 0.59%)</title><rect x="75.3326%" y="341" width="0.5933%" height="15" fill="rgb(216,123,35)" fg:x="4190" fg:w="33"/><text x="75.5826%" y="351.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt;, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (17 samples, 0.31%)</title><rect x="76.1956%" y="325" width="0.3056%" height="15" fill="rgb(212,68,40)" fg:x="4238" fg:w="17"/><text x="76.4456%" y="335.50"></text></g><g><title>do_cos (2 samples, 0.04%)</title><rect x="76.6810%" y="293" width="0.0360%" height="15" fill="rgb(254,125,32)" fg:x="4265" fg:w="2"/><text x="76.9310%" y="303.50"></text></g><g><title>do_sin (2 samples, 0.04%)</title><rect x="76.7170%" y="293" width="0.0360%" height="15" fill="rgb(253,97,22)" fg:x="4267" fg:w="2"/><text x="76.9670%" y="303.50"></text></g><g><title>__sincos_fma (5 samples, 0.09%)</title><rect x="76.6810%" y="309" width="0.0899%" height="15" fill="rgb(241,101,14)" fg:x="4265" fg:w="5"/><text x="76.9310%" y="319.50"></text></g><g><title>libc_feholdsetround_sse_ctx (1 samples, 0.02%)</title><rect x="76.7530%" y="293" width="0.0180%" height="15" fill="rgb(238,103,29)" fg:x="4269" fg:w="1"/><text x="77.0030%" y="303.50"></text></g><g><title>pinocchio::Jlog3_impl&lt;double&gt;::run&lt;double, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt;, 3, 3, false&gt; &gt; (4 samples, 0.07%)</title><rect x="76.7709%" y="309" width="0.0719%" height="15" fill="rgb(233,195,47)" fg:x="4270" fg:w="4"/><text x="77.0209%" y="319.50"></text></g><g><title>__sincos_fma (3 samples, 0.05%)</title><rect x="76.7889%" y="293" width="0.0539%" height="15" fill="rgb(246,218,30)" fg:x="4271" fg:w="3"/><text x="77.0389%" y="303.50"></text></g><g><title>do_sin (2 samples, 0.04%)</title><rect x="76.8069%" y="277" width="0.0360%" height="15" fill="rgb(219,145,47)" fg:x="4272" fg:w="2"/><text x="77.0569%" y="287.50"></text></g><g><title>__atan2 (18 samples, 0.32%)</title><rect x="77.2204%" y="293" width="0.3236%" height="15" fill="rgb(243,12,26)" fg:x="4295" fg:w="18"/><text x="77.4704%" y="303.50"></text></g><g><title>__ieee754_atan2_fma (17 samples, 0.31%)</title><rect x="77.2384%" y="277" width="0.3056%" height="15" fill="rgb(214,87,16)" fg:x="4296" fg:w="17"/><text x="77.4884%" y="287.50"></text></g><g><title>libc_feholdsetround_sse_ctx (1 samples, 0.02%)</title><rect x="77.5261%" y="261" width="0.0180%" height="15" fill="rgb(208,99,42)" fg:x="4312" fg:w="1"/><text x="77.7761%" y="271.50"></text></g><g><title>__ieee754_acos_fma (9 samples, 0.16%)</title><rect x="77.5440%" y="293" width="0.1618%" height="15" fill="rgb(253,99,2)" fg:x="4313" fg:w="9"/><text x="77.7940%" y="303.50"></text></g><g><title>do_cos (1 samples, 0.02%)</title><rect x="77.7059%" y="277" width="0.0180%" height="15" fill="rgb(220,168,23)" fg:x="4322" fg:w="1"/><text x="77.9559%" y="287.50"></text></g><g><title>pinocchio::Jlog6_impl&lt;double&gt;::run&lt;double, 0, Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (69 samples, 1.24%)</title><rect x="76.5013%" y="325" width="1.2406%" height="15" fill="rgb(242,38,24)" fg:x="4255" fg:w="69"/><text x="76.7513%" y="335.50"></text></g><g><title>pinocchio::log3_impl&lt;double&gt;::run&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; &gt; (50 samples, 0.90%)</title><rect x="76.8429%" y="309" width="0.8990%" height="15" fill="rgb(225,182,9)" fg:x="4274" fg:w="50"/><text x="77.0929%" y="319.50"></text></g><g><title>__sin_fma (2 samples, 0.04%)</title><rect x="77.7059%" y="293" width="0.0360%" height="15" fill="rgb(243,178,37)" fg:x="4322" fg:w="2"/><text x="77.9559%" y="303.50"></text></g><g><title>do_sin (1 samples, 0.02%)</title><rect x="77.7238%" y="277" width="0.0180%" height="15" fill="rgb(232,139,19)" fg:x="4323" fg:w="1"/><text x="77.9738%" y="287.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="77.7778%" y="309" width="0.0539%" height="15" fill="rgb(225,201,24)" fg:x="4326" fg:w="3"/><text x="78.0278%" y="319.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (2 samples, 0.04%)</title><rect x="77.8677%" y="293" width="0.0360%" height="15" fill="rgb(221,47,46)" fg:x="4331" fg:w="2"/><text x="78.1177%" y="303.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::calcDiff (142 samples, 2.55%)</title><rect x="75.9259%" y="341" width="2.5530%" height="15" fill="rgb(249,23,13)" fg:x="4223" fg:w="142"/><text x="76.1759%" y="351.50">cr..</text></g><g><title>pinocchio::getFrameJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; (41 samples, 0.74%)</title><rect x="77.7418%" y="325" width="0.7371%" height="15" fill="rgb(219,9,5)" fg:x="4324" fg:w="41"/><text x="77.9918%" y="335.50"></text></g><g><title>pinocchio::getFrameJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; (36 samples, 0.65%)</title><rect x="77.8317%" y="309" width="0.6472%" height="15" fill="rgb(254,171,16)" fg:x="4329" fg:w="36"/><text x="78.0817%" y="319.50"></text></g><g><title>pinocchio::details::translateJointJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; (32 samples, 0.58%)</title><rect x="77.9036%" y="293" width="0.5753%" height="15" fill="rgb(230,171,20)" fg:x="4333" fg:w="32"/><text x="78.1536%" y="303.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; const, 6, 1, true&gt; const&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (7 samples, 0.13%)</title><rect x="78.3531%" y="277" width="0.1259%" height="15" fill="rgb(210,71,41)" fg:x="4358" fg:w="7"/><text x="78.6031%" y="287.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calcDiff (619 samples, 11.13%)</title><rect x="67.5297%" y="357" width="11.1291%" height="15" fill="rgb(206,173,20)" fg:x="3756" fg:w="619"/><text x="67.7797%" y="367.50">crocoddyl::CostM..</text></g><g><title>crocoddyl::ResidualModelStateTpl&lt;double&gt;::calcDiff (10 samples, 0.18%)</title><rect x="78.4790%" y="341" width="0.1798%" height="15" fill="rgb(233,88,34)" fg:x="4365" fg:w="10"/><text x="78.7290%" y="351.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::Jdiff (3 samples, 0.05%)</title><rect x="78.6048%" y="325" width="0.0539%" height="15" fill="rgb(223,209,46)" fg:x="4372" fg:w="3"/><text x="78.8548%" y="335.50"></text></g><g><title>pinocchio::dDifference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (2 samples, 0.04%)</title><rect x="78.6228%" y="309" width="0.0360%" height="15" fill="rgb(250,43,18)" fg:x="4373" fg:w="2"/><text x="78.8728%" y="319.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_15dDifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_INS1I_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS1F_11OuterStrideILin1EEEEELin1ELin1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S21_RS1U_RKNS1_16ArgumentPositionEEEEvEEEENT_11result_typeERS28_ (2 samples, 0.04%)</title><rect x="78.6228%" y="293" width="0.0360%" height="15" fill="rgb(208,13,10)" fg:x="4373" fg:w="2"/><text x="78.8728%" y="303.50"></text></g><g><title>local_Rb_tree_increment (1 samples, 0.02%)</title><rect x="78.6588%" y="357" width="0.0180%" height="15" fill="rgb(212,200,36)" fg:x="4375" fg:w="1"/><text x="78.9088%" y="367.50"></text></g><g><title>std::local_Rb_tree_increment (1 samples, 0.02%)</title><rect x="78.6588%" y="341" width="0.0180%" height="15" fill="rgb(225,90,30)" fg:x="4375" fg:w="1"/><text x="78.9088%" y="351.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calcDiff (859 samples, 15.44%)</title><rect x="63.5383%" y="373" width="15.4441%" height="15" fill="rgb(236,182,39)" fg:x="3534" fg:w="859"/><text x="63.7883%" y="383.50">crocoddyl::CostModelSumT..</text></g><g><title>std::local_Rb_tree_increment (17 samples, 0.31%)</title><rect x="78.6767%" y="357" width="0.3056%" height="15" fill="rgb(212,144,35)" fg:x="4376" fg:w="17"/><text x="78.9267%" y="367.50"></text></g><g><title>local_Rb_tree_increment (7 samples, 0.13%)</title><rect x="78.8565%" y="341" width="0.1259%" height="15" fill="rgb(228,63,44)" fg:x="4386" fg:w="7"/><text x="79.1065%" y="351.50"></text></g><g><title>free@plt (1 samples, 0.02%)</title><rect x="79.5577%" y="357" width="0.0180%" height="15" fill="rgb(228,109,6)" fg:x="4425" fg:w="1"/><text x="79.8077%" y="367.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl33ComputeRNEADerivativesForwardStepIdLi0ES16_N5Eigen3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEES1M_S1 (1 samples, 0.02%)</title><rect x="79.9533%" y="341" width="0.0180%" height="15" fill="rgb(238,117,24)" fg:x="4447" fg:w="1"/><text x="80.2033%" y="351.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl33ComputeRNEADerivativesForwardStepIdLi0ES16_N5Eigen3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEES1M_S1M_EEvE27InternalVisitorModelAndDataINS1_13JointModelTplIdLi0ES16_EENS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES16_EERNS1_7DataTplIdLi0ES16_EERKS1M_S22_S22_EEEEEEENT_11result_typeERS25_ (9 samples, 0.16%)</title><rect x="79.9712%" y="341" width="0.1618%" height="15" fill="rgb(242,26,26)" fg:x="4448" fg:w="9"/><text x="80.2212%" y="351.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl34ComputeRNEADerivativesBackwardStepIdLi0ES16_N5Eigen3RefINS1F_6MatrixIdLin1ELin1ELi1ELin1ELin1EEELi0ENS1F_11OuterStrideILin1EEEEES1L (2 samples, 0.04%)</title><rect x="80.1330%" y="341" width="0.0360%" height="15" fill="rgb(221,92,48)" fg:x="4457" fg:w="2"/><text x="80.3830%" y="351.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl34ComputeRNEADerivativesBackwardStepIdLi0ES16_N5Eigen3RefINS1F_6MatrixIdLin1ELin1ELi1ELin1ELin1EEELi0ENS1F_11OuterStrideILin1EEEEES1L_NS1G_INS1H_IdLin1ELin1ELi0ELin1ELin1EEELi0ES1K_EEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES16_EERNS1_7DataTplIdLi0ES16_EERKS1L_S21_RKS1N_EEEvEEEENT_11result_typeERS26_ (4 samples, 0.07%)</title><rect x="80.1690%" y="341" width="0.0719%" height="15" fill="rgb(209,209,32)" fg:x="4459" fg:w="4"/><text x="80.4190%" y="351.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointDataRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointDataHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointDataCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;boost::detail::variant::get_visitor&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt; &gt; (24 samples, 0.43%)</title><rect x="80.8342%" y="325" width="0.4315%" height="15" fill="rgb(221,70,22)" fg:x="4496" fg:w="24"/><text x="81.0842%" y="335.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (30 samples, 0.54%)</title><rect x="83.2614%" y="309" width="0.5394%" height="15" fill="rgb(248,145,5)" fg:x="4631" fg:w="30"/><text x="83.5114%" y="319.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="83.8008%" y="309" width="0.0180%" height="15" fill="rgb(226,116,26)" fg:x="4661" fg:w="1"/><text x="84.0508%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (30 samples, 0.54%)</title><rect x="83.8188%" y="309" width="0.5394%" height="15" fill="rgb(244,5,17)" fg:x="4662" fg:w="30"/><text x="84.0688%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (3 samples, 0.05%)</title><rect x="84.3042%" y="293" width="0.0539%" height="15" fill="rgb(252,159,33)" fg:x="4689" fg:w="3"/><text x="84.5542%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="84.3581%" y="309" width="0.0180%" height="15" fill="rgb(206,71,0)" fg:x="4692" fg:w="1"/><text x="84.6081%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt; (4 samples, 0.07%)</title><rect x="84.4660%" y="293" width="0.0719%" height="15" fill="rgb(233,118,54)" fg:x="4698" fg:w="4"/><text x="84.7160%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (10 samples, 0.18%)</title><rect x="84.3761%" y="309" width="0.1798%" height="15" fill="rgb(234,83,48)" fg:x="4693" fg:w="10"/><text x="84.6261%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="84.5379%" y="293" width="0.0180%" height="15" fill="rgb(228,3,54)" fg:x="4702" fg:w="1"/><text x="84.7879%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (35 samples, 0.63%)</title><rect x="84.5559%" y="309" width="0.6293%" height="15" fill="rgb(226,155,13)" fg:x="4703" fg:w="35"/><text x="84.8059%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator- (1 samples, 0.02%)</title><rect x="85.1672%" y="293" width="0.0180%" height="15" fill="rgb(241,28,37)" fg:x="4737" fg:w="1"/><text x="85.4172%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="85.1852%" y="309" width="0.0180%" height="15" fill="rgb(233,93,10)" fg:x="4738" fg:w="1"/><text x="85.4352%" y="319.50"></text></g><g><title>do_sin (5 samples, 0.09%)</title><rect x="85.2211%" y="261" width="0.0899%" height="15" fill="rgb(225,113,19)" fg:x="4740" fg:w="5"/><text x="85.4711%" y="271.50"></text></g><g><title>libc_feholdsetround_sse_ctx (3 samples, 0.05%)</title><rect x="85.3110%" y="261" width="0.0539%" height="15" fill="rgb(241,2,18)" fg:x="4745" fg:w="3"/><text x="85.5610%" y="271.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (10 samples, 0.18%)</title><rect x="85.2032%" y="309" width="0.1798%" height="15" fill="rgb(228,207,21)" fg:x="4739" fg:w="10"/><text x="85.4532%" y="319.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (9 samples, 0.16%)</title><rect x="85.2211%" y="293" width="0.1618%" height="15" fill="rgb(213,211,35)" fg:x="4740" fg:w="9"/><text x="85.4711%" y="303.50"></text></g><g><title>__sincos_fma (9 samples, 0.16%)</title><rect x="85.2211%" y="277" width="0.1618%" height="15" fill="rgb(209,83,10)" fg:x="4740" fg:w="9"/><text x="85.4711%" y="287.50"></text></g><g><title>reduce_sincos (1 samples, 0.02%)</title><rect x="85.3650%" y="261" width="0.0180%" height="15" fill="rgb(209,164,1)" fg:x="4748" fg:w="1"/><text x="85.6150%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (17 samples, 0.31%)</title><rect x="85.3830%" y="309" width="0.3056%" height="15" fill="rgb(213,184,43)" fg:x="4749" fg:w="17"/><text x="85.6330%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (7 samples, 0.13%)</title><rect x="85.6886%" y="309" width="0.1259%" height="15" fill="rgb(231,61,34)" fg:x="4766" fg:w="7"/><text x="85.9386%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (2 samples, 0.04%)</title><rect x="85.8145%" y="309" width="0.0360%" height="15" fill="rgb(235,75,3)" fg:x="4773" fg:w="2"/><text x="86.0645%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (4 samples, 0.07%)</title><rect x="85.8504%" y="309" width="0.0719%" height="15" fill="rgb(220,106,47)" fg:x="4775" fg:w="4"/><text x="86.1004%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="85.9223%" y="309" width="0.0180%" height="15" fill="rgb(210,196,33)" fg:x="4779" fg:w="1"/><text x="86.1723%" y="319.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (11 samples, 0.20%)</title><rect x="85.9403%" y="309" width="0.1978%" height="15" fill="rgb(229,154,42)" fg:x="4780" fg:w="11"/><text x="86.1903%" y="319.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="86.1381%" y="309" width="0.0180%" height="15" fill="rgb(228,114,26)" fg:x="4791" fg:w="1"/><text x="86.3881%" y="319.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (273 samples, 4.91%)</title><rect x="81.2657%" y="325" width="4.9083%" height="15" fill="rgb(208,144,1)" fg:x="4520" fg:w="273"/><text x="81.5157%" y="335.50">pinocc..</text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::addForceCrossMatrix&lt;pinocchio::ForceTpl&lt;double, 0&gt;, Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (1 samples, 0.02%)</title><rect x="86.1561%" y="309" width="0.0180%" height="15" fill="rgb(239,112,37)" fg:x="4792" fg:w="1"/><text x="86.4061%" y="319.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (13 samples, 0.23%)</title><rect x="87.1988%" y="309" width="0.2337%" height="15" fill="rgb(210,96,50)" fg:x="4850" fg:w="13"/><text x="87.4488%" y="319.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="87.4326%" y="309" width="0.0180%" height="15" fill="rgb(222,178,2)" fg:x="4863" fg:w="1"/><text x="87.6826%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (7 samples, 0.13%)</title><rect x="87.4506%" y="309" width="0.1259%" height="15" fill="rgb(226,74,18)" fg:x="4864" fg:w="7"/><text x="87.7006%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (5 samples, 0.09%)</title><rect x="87.5764%" y="309" width="0.0899%" height="15" fill="rgb(225,67,54)" fg:x="4871" fg:w="5"/><text x="87.8264%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt; (3 samples, 0.05%)</title><rect x="87.6124%" y="293" width="0.0539%" height="15" fill="rgb(251,92,32)" fg:x="4873" fg:w="3"/><text x="87.8624%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (28 samples, 0.50%)</title><rect x="87.6663%" y="309" width="0.5034%" height="15" fill="rgb(228,149,22)" fg:x="4876" fg:w="28"/><text x="87.9163%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="88.1697%" y="309" width="0.0180%" height="15" fill="rgb(243,54,13)" fg:x="4904" fg:w="1"/><text x="88.4197%" y="319.50"></text></g><g><title>do_cos (1 samples, 0.02%)</title><rect x="88.2237%" y="261" width="0.0180%" height="15" fill="rgb(243,180,28)" fg:x="4907" fg:w="1"/><text x="88.4737%" y="271.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (5 samples, 0.09%)</title><rect x="88.1877%" y="309" width="0.0899%" height="15" fill="rgb(208,167,24)" fg:x="4905" fg:w="5"/><text x="88.4377%" y="319.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="88.2057%" y="293" width="0.0719%" height="15" fill="rgb(245,73,45)" fg:x="4906" fg:w="4"/><text x="88.4557%" y="303.50"></text></g><g><title>__sincos_fma (3 samples, 0.05%)</title><rect x="88.2237%" y="277" width="0.0539%" height="15" fill="rgb(237,203,48)" fg:x="4907" fg:w="3"/><text x="88.4737%" y="287.50"></text></g><g><title>do_sin (2 samples, 0.04%)</title><rect x="88.2416%" y="261" width="0.0360%" height="15" fill="rgb(211,197,16)" fg:x="4908" fg:w="2"/><text x="88.4916%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="88.2776%" y="309" width="0.1259%" height="15" fill="rgb(243,99,51)" fg:x="4910" fg:w="7"/><text x="88.5276%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt;@plt (1 samples, 0.02%)</title><rect x="88.4035%" y="309" width="0.0180%" height="15" fill="rgb(215,123,29)" fg:x="4917" fg:w="1"/><text x="88.6535%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (6 samples, 0.11%)</title><rect x="88.4214%" y="309" width="0.1079%" height="15" fill="rgb(239,186,37)" fg:x="4918" fg:w="6"/><text x="88.6714%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (5 samples, 0.09%)</title><rect x="88.5293%" y="309" width="0.0899%" height="15" fill="rgb(252,136,39)" fg:x="4924" fg:w="5"/><text x="88.7793%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (2 samples, 0.04%)</title><rect x="88.6192%" y="309" width="0.0360%" height="15" fill="rgb(223,213,32)" fg:x="4929" fg:w="2"/><text x="88.8692%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (2 samples, 0.04%)</title><rect x="88.6552%" y="309" width="0.0360%" height="15" fill="rgb(233,115,5)" fg:x="4931" fg:w="2"/><text x="88.9052%" y="319.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (7 samples, 0.13%)</title><rect x="88.6911%" y="309" width="0.1259%" height="15" fill="rgb(207,226,44)" fg:x="4933" fg:w="7"/><text x="88.9411%" y="319.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (148 samples, 2.66%)</title><rect x="86.1740%" y="325" width="2.6609%" height="15" fill="rgb(208,126,0)" fg:x="4793" fg:w="148"/><text x="86.4240%" y="335.50">pi..</text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::addForceCrossMatrix&lt;pinocchio::ForceTpl&lt;double, 0&gt;, Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (1 samples, 0.02%)</title><rect x="88.8170%" y="309" width="0.0180%" height="15" fill="rgb(244,66,21)" fg:x="4940" fg:w="1"/><text x="89.0670%" y="319.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (13 samples, 0.23%)</title><rect x="89.7699%" y="309" width="0.2337%" height="15" fill="rgb(222,97,12)" fg:x="4993" fg:w="13"/><text x="90.0199%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="89.9856%" y="293" width="0.0180%" height="15" fill="rgb(219,213,19)" fg:x="5005" fg:w="1"/><text x="90.2356%" y="303.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="89.9856%" y="277" width="0.0180%" height="15" fill="rgb(252,169,30)" fg:x="5005" fg:w="1"/><text x="90.2356%" y="287.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="89.9856%" y="261" width="0.0180%" height="15" fill="rgb(206,32,51)" fg:x="5005" fg:w="1"/><text x="90.2356%" y="271.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="89.9856%" y="245" width="0.0180%" height="15" fill="rgb(250,172,42)" fg:x="5005" fg:w="1"/><text x="90.2356%" y="255.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="89.9856%" y="229" width="0.0180%" height="15" fill="rgb(209,34,43)" fg:x="5005" fg:w="1"/><text x="90.2356%" y="239.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="89.9856%" y="213" width="0.0180%" height="15" fill="rgb(223,11,35)" fg:x="5005" fg:w="1"/><text x="90.2356%" y="223.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="89.9856%" y="197" width="0.0180%" height="15" fill="rgb(251,219,26)" fg:x="5005" fg:w="1"/><text x="90.2356%" y="207.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="89.9856%" y="181" width="0.0180%" height="15" fill="rgb(231,119,3)" fg:x="5005" fg:w="1"/><text x="90.2356%" y="191.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="89.9856%" y="165" width="0.0180%" height="15" fill="rgb(216,97,11)" fg:x="5005" fg:w="1"/><text x="90.2356%" y="175.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="89.9856%" y="149" width="0.0180%" height="15" fill="rgb(223,59,9)" fg:x="5005" fg:w="1"/><text x="90.2356%" y="159.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.02%)</title><rect x="89.9856%" y="133" width="0.0180%" height="15" fill="rgb(233,93,31)" fg:x="5005" fg:w="1"/><text x="90.2356%" y="143.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="90.0036%" y="309" width="0.0180%" height="15" fill="rgb(239,81,33)" fg:x="5006" fg:w="1"/><text x="90.2536%" y="319.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="90.0036%" y="293" width="0.0180%" height="15" fill="rgb(213,120,34)" fg:x="5006" fg:w="1"/><text x="90.2536%" y="303.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="90.0036%" y="277" width="0.0180%" height="15" fill="rgb(243,49,53)" fg:x="5006" fg:w="1"/><text x="90.2536%" y="287.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="90.0036%" y="261" width="0.0180%" height="15" fill="rgb(247,216,33)" fg:x="5006" fg:w="1"/><text x="90.2536%" y="271.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="90.0036%" y="245" width="0.0180%" height="15" fill="rgb(226,26,14)" fg:x="5006" fg:w="1"/><text x="90.2536%" y="255.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="90.0036%" y="229" width="0.0180%" height="15" fill="rgb(215,49,53)" fg:x="5006" fg:w="1"/><text x="90.2536%" y="239.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="90.0036%" y="213" width="0.0180%" height="15" fill="rgb(245,162,40)" fg:x="5006" fg:w="1"/><text x="90.2536%" y="223.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="90.0036%" y="197" width="0.0180%" height="15" fill="rgb(229,68,17)" fg:x="5006" fg:w="1"/><text x="90.2536%" y="207.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="90.0036%" y="181" width="0.0180%" height="15" fill="rgb(213,182,10)" fg:x="5006" fg:w="1"/><text x="90.2536%" y="191.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="90.0036%" y="165" width="0.0180%" height="15" fill="rgb(245,125,30)" fg:x="5006" fg:w="1"/><text x="90.2536%" y="175.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="90.0216%" y="309" width="0.0180%" height="15" fill="rgb(232,202,2)" fg:x="5007" fg:w="1"/><text x="90.2716%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (9 samples, 0.16%)</title><rect x="90.0396%" y="309" width="0.1618%" height="15" fill="rgb(237,140,51)" fg:x="5008" fg:w="9"/><text x="90.2896%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (3 samples, 0.05%)</title><rect x="90.2014%" y="309" width="0.0539%" height="15" fill="rgb(236,157,25)" fg:x="5017" fg:w="3"/><text x="90.4514%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt; (2 samples, 0.04%)</title><rect x="90.2193%" y="293" width="0.0360%" height="15" fill="rgb(219,209,0)" fg:x="5018" fg:w="2"/><text x="90.4693%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (19 samples, 0.34%)</title><rect x="90.2553%" y="309" width="0.3416%" height="15" fill="rgb(240,116,54)" fg:x="5020" fg:w="19"/><text x="90.5053%" y="319.50"></text></g><g><title>do_cos (1 samples, 0.02%)</title><rect x="90.6329%" y="261" width="0.0180%" height="15" fill="rgb(216,10,36)" fg:x="5041" fg:w="1"/><text x="90.8829%" y="271.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (5 samples, 0.09%)</title><rect x="90.5969%" y="309" width="0.0899%" height="15" fill="rgb(222,72,44)" fg:x="5039" fg:w="5"/><text x="90.8469%" y="319.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (4 samples, 0.07%)</title><rect x="90.6149%" y="293" width="0.0719%" height="15" fill="rgb(232,159,9)" fg:x="5040" fg:w="4"/><text x="90.8649%" y="303.50"></text></g><g><title>__sincos_fma (4 samples, 0.07%)</title><rect x="90.6149%" y="277" width="0.0719%" height="15" fill="rgb(210,39,32)" fg:x="5040" fg:w="4"/><text x="90.8649%" y="287.50"></text></g><g><title>do_sin (2 samples, 0.04%)</title><rect x="90.6508%" y="261" width="0.0360%" height="15" fill="rgb(216,194,45)" fg:x="5042" fg:w="2"/><text x="90.9008%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (7 samples, 0.13%)</title><rect x="90.6868%" y="309" width="0.1259%" height="15" fill="rgb(218,18,35)" fg:x="5044" fg:w="7"/><text x="90.9368%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (10 samples, 0.18%)</title><rect x="90.8127%" y="309" width="0.1798%" height="15" fill="rgb(207,83,51)" fg:x="5051" fg:w="10"/><text x="91.0627%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="90.9924%" y="309" width="0.0180%" height="15" fill="rgb(225,63,43)" fg:x="5061" fg:w="1"/><text x="91.2424%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="91.0104%" y="309" width="0.0180%" height="15" fill="rgb(207,57,36)" fg:x="5062" fg:w="1"/><text x="91.2604%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="91.0284%" y="309" width="0.0180%" height="15" fill="rgb(216,99,33)" fg:x="5063" fg:w="1"/><text x="91.2784%" y="319.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (4 samples, 0.07%)</title><rect x="91.0464%" y="309" width="0.0719%" height="15" fill="rgb(225,42,16)" fg:x="5064" fg:w="4"/><text x="91.2964%" y="319.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;&gt; &gt;::operator (606 samples, 10.90%)</title><rect x="80.2409%" y="341" width="10.8954%" height="15" fill="rgb(220,201,45)" fg:x="4463" fg:w="606"/><text x="80.4909%" y="351.50">pinocchio::fusio..</text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (128 samples, 2.30%)</title><rect x="88.8350%" y="325" width="2.3013%" height="15" fill="rgb(225,33,4)" fg:x="4941" fg:w="128"/><text x="89.0850%" y="335.50">p..</text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::addForceCrossMatrix&lt;pinocchio::ForceTpl&lt;double, 0&gt;, Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (1 samples, 0.02%)</title><rect x="91.1183%" y="309" width="0.0180%" height="15" fill="rgb(224,33,50)" fg:x="5068" fg:w="1"/><text x="91.3683%" y="319.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (3 samples, 0.05%)</title><rect x="92.4128%" y="325" width="0.0539%" height="15" fill="rgb(246,198,51)" fg:x="5140" fg:w="3"/><text x="92.6628%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (18 samples, 0.32%)</title><rect x="92.4667%" y="325" width="0.3236%" height="15" fill="rgb(205,22,4)" fg:x="5143" fg:w="18"/><text x="92.7167%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (35 samples, 0.63%)</title><rect x="92.7904%" y="325" width="0.6293%" height="15" fill="rgb(206,3,8)" fg:x="5161" fg:w="35"/><text x="93.0404%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (3 samples, 0.05%)</title><rect x="93.3657%" y="309" width="0.0539%" height="15" fill="rgb(251,23,15)" fg:x="5193" fg:w="3"/><text x="93.6157%" y="319.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (128 samples, 2.30%)</title><rect x="91.1363%" y="341" width="2.3013%" height="15" fill="rgb(252,88,28)" fg:x="5069" fg:w="128"/><text x="91.3863%" y="351.50">p..</text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (1 samples, 0.02%)</title><rect x="93.4196%" y="325" width="0.0180%" height="15" fill="rgb(212,127,14)" fg:x="5196" fg:w="1"/><text x="93.6696%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-= (1 samples, 0.02%)</title><rect x="93.4196%" y="309" width="0.0180%" height="15" fill="rgb(247,145,37)" fg:x="5196" fg:w="1"/><text x="93.6696%" y="319.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="93.4376%" y="341" width="0.0180%" height="15" fill="rgb(209,117,53)" fg:x="5197" fg:w="1"/><text x="93.6876%" y="351.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (2 samples, 0.04%)</title><rect x="94.0489%" y="325" width="0.0360%" height="15" fill="rgb(212,90,42)" fg:x="5231" fg:w="2"/><text x="94.2989%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (10 samples, 0.18%)</title><rect x="94.0849%" y="325" width="0.1798%" height="15" fill="rgb(218,164,37)" fg:x="5233" fg:w="10"/><text x="94.3349%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (26 samples, 0.47%)</title><rect x="94.2647%" y="325" width="0.4675%" height="15" fill="rgb(246,65,34)" fg:x="5243" fg:w="26"/><text x="94.5147%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (2 samples, 0.04%)</title><rect x="94.6962%" y="309" width="0.0360%" height="15" fill="rgb(231,100,33)" fg:x="5267" fg:w="2"/><text x="94.9462%" y="319.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (73 samples, 1.31%)</title><rect x="93.4556%" y="341" width="1.3125%" height="15" fill="rgb(228,126,14)" fg:x="5198" fg:w="73"/><text x="93.7056%" y="351.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (2 samples, 0.04%)</title><rect x="94.7321%" y="325" width="0.0360%" height="15" fill="rgb(215,173,21)" fg:x="5269" fg:w="2"/><text x="94.9821%" y="335.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="95.2535%" y="325" width="0.0180%" height="15" fill="rgb(210,6,40)" fg:x="5298" fg:w="1"/><text x="95.5035%" y="335.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="95.2715%" y="325" width="0.0180%" height="15" fill="rgb(212,48,18)" fg:x="5299" fg:w="1"/><text x="95.5215%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (9 samples, 0.16%)</title><rect x="95.2895%" y="325" width="0.1618%" height="15" fill="rgb(230,214,11)" fg:x="5300" fg:w="9"/><text x="95.5395%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt;@plt (1 samples, 0.02%)</title><rect x="95.4513%" y="325" width="0.0180%" height="15" fill="rgb(254,105,39)" fg:x="5309" fg:w="1"/><text x="95.7013%" y="335.50"></text></g><g><title>asm_sysvec_thermal (1 samples, 0.02%)</title><rect x="95.7929%" y="309" width="0.0180%" height="15" fill="rgb(245,158,5)" fg:x="5328" fg:w="1"/><text x="96.0429%" y="319.50"></text></g><g><title>sysvec_thermal (1 samples, 0.02%)</title><rect x="95.7929%" y="293" width="0.0180%" height="15" fill="rgb(249,208,11)" fg:x="5328" fg:w="1"/><text x="96.0429%" y="303.50"></text></g><g><title>__sysvec_thermal (1 samples, 0.02%)</title><rect x="95.7929%" y="277" width="0.0180%" height="15" fill="rgb(210,39,28)" fg:x="5328" fg:w="1"/><text x="96.0429%" y="287.50"></text></g><g><title>intel_thermal_interrupt (1 samples, 0.02%)</title><rect x="95.7929%" y="261" width="0.0180%" height="15" fill="rgb(211,56,53)" fg:x="5328" fg:w="1"/><text x="96.0429%" y="271.50"></text></g><g><title>pkg_thermal_notify (1 samples, 0.02%)</title><rect x="95.7929%" y="245" width="0.0180%" height="15" fill="rgb(226,201,30)" fg:x="5328" fg:w="1"/><text x="96.0429%" y="255.50"></text></g><g><title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="95.7929%" y="229" width="0.0180%" height="15" fill="rgb(239,101,34)" fg:x="5328" fg:w="1"/><text x="96.0429%" y="239.50"></text></g><g><title>__raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="95.7929%" y="213" width="0.0180%" height="15" fill="rgb(226,209,5)" fg:x="5328" fg:w="1"/><text x="96.0429%" y="223.50"></text></g><g><title>native_queued_spin_lock_slowpath (1 samples, 0.02%)</title><rect x="95.7929%" y="197" width="0.0180%" height="15" fill="rgb(250,105,47)" fg:x="5328" fg:w="1"/><text x="96.0429%" y="207.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (1 samples, 0.02%)</title><rect x="95.7929%" y="181" width="0.0180%" height="15" fill="rgb(230,72,3)" fg:x="5328" fg:w="1"/><text x="96.0429%" y="191.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (22 samples, 0.40%)</title><rect x="95.4693%" y="325" width="0.3955%" height="15" fill="rgb(232,218,39)" fg:x="5310" fg:w="22"/><text x="95.7193%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (3 samples, 0.05%)</title><rect x="95.8109%" y="309" width="0.0539%" height="15" fill="rgb(248,166,6)" fg:x="5329" fg:w="3"/><text x="96.0609%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="95.8648%" y="325" width="0.0180%" height="15" fill="rgb(247,89,20)" fg:x="5332" fg:w="1"/><text x="96.1148%" y="335.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (64 samples, 1.15%)</title><rect x="94.7681%" y="341" width="1.1507%" height="15" fill="rgb(248,130,54)" fg:x="5271" fg:w="64"/><text x="95.0181%" y="351.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (2 samples, 0.04%)</title><rect x="95.8828%" y="325" width="0.0360%" height="15" fill="rgb(234,196,4)" fg:x="5333" fg:w="2"/><text x="96.1328%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-= (1 samples, 0.02%)</title><rect x="95.9008%" y="309" width="0.0180%" height="15" fill="rgb(250,143,31)" fg:x="5334" fg:w="1"/><text x="96.1508%" y="319.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::calcDiff (2,025 samples, 36.41%)</title><rect x="59.5289%" y="389" width="36.4078%" height="15" fill="rgb(211,110,34)" fg:x="3311" fg:w="2025"/><text x="59.7789%" y="399.50">crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double..</text></g><g><title>pinocchio::computeRNEADerivatives&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; (943 samples, 16.95%)</title><rect x="78.9824%" y="373" width="16.9543%" height="15" fill="rgb(215,124,48)" fg:x="4393" fg:w="943"/><text x="79.2324%" y="383.50">pinocchio::computeRNEADeri..</text></g><g><title>pinocchio::impl::computeRNEADerivatives&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt; (910 samples, 16.36%)</title><rect x="79.5757%" y="357" width="16.3610%" height="15" fill="rgb(216,46,13)" fg:x="4426" fg:w="910"/><text x="79.8257%" y="367.50">pinocchio::impl::computeR..</text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="95.9187%" y="341" width="0.0180%" height="15" fill="rgb(205,184,25)" fg:x="5335" fg:w="1"/><text x="96.1687%" y="351.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::Jintegrate (4 samples, 0.07%)</title><rect x="95.9367%" y="389" width="0.0719%" height="15" fill="rgb(228,1,10)" fg:x="5336" fg:w="4"/><text x="96.1867%" y="399.50"></text></g><g><title>pinocchio::dIntegrate&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (2 samples, 0.04%)</title><rect x="95.9727%" y="373" width="0.0360%" height="15" fill="rgb(213,116,27)" fg:x="5338" fg:w="2"/><text x="96.2227%" y="383.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14dIntegrateStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_INS1I_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS1F_11OuterStrideILin1EEEEELin1ELin1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S21_RS1U_RKNS1_16ArgumentPositionERKNS1_22AssignmentOperatorTypeEEEEvEEEENT_11result_typeERS2B_ (1 samples, 0.02%)</title><rect x="95.9907%" y="357" width="0.0180%" height="15" fill="rgb(241,95,50)" fg:x="5339" fg:w="1"/><text x="96.2407%" y="367.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calcDiff (2,218 samples, 39.88%)</title><rect x="56.2567%" y="405" width="39.8777%" height="15" fill="rgb(238,48,32)" fg:x="3129" fg:w="2218"/><text x="56.5067%" y="415.50">crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calcDiff</text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::JintegrateTransport (7 samples, 0.13%)</title><rect x="96.0086%" y="389" width="0.1259%" height="15" fill="rgb(235,113,49)" fg:x="5340" fg:w="7"/><text x="96.2586%" y="399.50"></text></g><g><title>pinocchio::dIntegrateTransport&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (7 samples, 0.13%)</title><rect x="96.0086%" y="373" width="0.1259%" height="15" fill="rgb(205,127,43)" fg:x="5340" fg:w="7"/><text x="96.2586%" y="383.50"></text></g><g><title>proxddp::compat::croc::CrocActionModelWrapperTpl&lt;double&gt;::computeDerivatives (2,402 samples, 43.19%)</title><rect x="53.0385%" y="421" width="43.1859%" height="15" fill="rgb(250,162,2)" fg:x="2950" fg:w="2402"/><text x="53.2885%" y="431.50">proxddp::compat::croc::CrocActionModelWrapperTpl&lt;double&gt;::computeDeriva..</text></g><g><title>proxddp::compat::croc::StateWrapperTpl&lt;double&gt;::Jdifference_impl (5 samples, 0.09%)</title><rect x="96.1345%" y="405" width="0.0899%" height="15" fill="rgb(220,13,41)" fg:x="5347" fg:w="5"/><text x="96.3845%" y="415.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::Jdiff (5 samples, 0.09%)</title><rect x="96.1345%" y="389" width="0.0899%" height="15" fill="rgb(249,221,25)" fg:x="5347" fg:w="5"/><text x="96.3845%" y="399.50"></text></g><g><title>pinocchio::dDifference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (2 samples, 0.04%)</title><rect x="96.1884%" y="373" width="0.0360%" height="15" fill="rgb(215,208,19)" fg:x="5350" fg:w="2"/><text x="96.4384%" y="383.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_15dDifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_INS1I_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS1F_11OuterStrideILin1EEEEELin1ELin1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S21_RS1U_RKNS1_16ArgumentPositionEEEEvEEEENT_11result_typeERS28_ (1 samples, 0.02%)</title><rect x="96.2064%" y="357" width="0.0180%" height="15" fill="rgb(236,175,2)" fg:x="5351" fg:w="1"/><text x="96.4564%" y="367.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt;, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (1 samples, 0.02%)</title><rect x="96.2424%" y="325" width="0.0180%" height="15" fill="rgb(241,52,2)" fg:x="5353" fg:w="1"/><text x="96.4924%" y="335.50"></text></g><g><title>proxddp::compat::croc::CrocCostModelWrapperTpl&lt;double&gt;::computeGradients (3 samples, 0.05%)</title><rect x="96.2244%" y="421" width="0.0539%" height="15" fill="rgb(248,140,14)" fg:x="5352" fg:w="3"/><text x="96.4744%" y="431.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calcDiff (2 samples, 0.04%)</title><rect x="96.2424%" y="405" width="0.0360%" height="15" fill="rgb(253,22,42)" fg:x="5353" fg:w="2"/><text x="96.4924%" y="415.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calcDiff (2 samples, 0.04%)</title><rect x="96.2424%" y="389" width="0.0360%" height="15" fill="rgb(234,61,47)" fg:x="5353" fg:w="2"/><text x="96.4924%" y="399.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calcDiff (2 samples, 0.04%)</title><rect x="96.2424%" y="373" width="0.0360%" height="15" fill="rgb(208,226,15)" fg:x="5353" fg:w="2"/><text x="96.4924%" y="383.50"></text></g><g><title>crocoddyl::ResidualModelAbstractTpl&lt;double&gt;::calcDiff (2 samples, 0.04%)</title><rect x="96.2424%" y="357" width="0.0360%" height="15" fill="rgb(217,221,4)" fg:x="5353" fg:w="2"/><text x="96.4924%" y="367.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::calcDiff (2 samples, 0.04%)</title><rect x="96.2424%" y="341" width="0.0360%" height="15" fill="rgb(212,174,34)" fg:x="5353" fg:w="2"/><text x="96.4924%" y="351.50"></text></g><g><title>pinocchio::getFrameJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="96.2603%" y="325" width="0.0180%" height="15" fill="rgb(253,83,4)" fg:x="5354" fg:w="1"/><text x="96.5103%" y="335.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="96.2603%" y="309" width="0.0180%" height="15" fill="rgb(250,195,49)" fg:x="5354" fg:w="1"/><text x="96.5103%" y="319.50"></text></g><g><title>proxddp::compat::croc::CrocCostModelWrapperTpl&lt;double&gt;::computeHessians (1 samples, 0.02%)</title><rect x="96.2783%" y="421" width="0.0180%" height="15" fill="rgb(241,192,25)" fg:x="5355" fg:w="1"/><text x="96.5283%" y="431.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calcDiff (1 samples, 0.02%)</title><rect x="96.2783%" y="405" width="0.0180%" height="15" fill="rgb(208,124,10)" fg:x="5355" fg:w="1"/><text x="96.5283%" y="415.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calcDiff (1 samples, 0.02%)</title><rect x="96.2783%" y="389" width="0.0180%" height="15" fill="rgb(222,33,0)" fg:x="5355" fg:w="1"/><text x="96.5283%" y="399.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calcDiff (1 samples, 0.02%)</title><rect x="96.2783%" y="373" width="0.0180%" height="15" fill="rgb(234,209,28)" fg:x="5355" fg:w="1"/><text x="96.5283%" y="383.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="96.2783%" y="357" width="0.0180%" height="15" fill="rgb(224,11,23)" fg:x="5355" fg:w="1"/><text x="96.5283%" y="367.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="96.2783%" y="341" width="0.0180%" height="15" fill="rgb(232,99,1)" fg:x="5355" fg:w="1"/><text x="96.5283%" y="351.50"></text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 1, false, double, 0, false, 0&gt;::run (1 samples, 0.02%)</title><rect x="96.2783%" y="325" width="0.0180%" height="15" fill="rgb(237,95,45)" fg:x="5355" fg:w="1"/><text x="96.5283%" y="335.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (1 samples, 0.02%)</title><rect x="96.2783%" y="309" width="0.0180%" height="15" fill="rgb(208,109,11)" fg:x="5355" fg:w="1"/><text x="96.5283%" y="319.50"></text></g><g><title>proxddp::TrajOptProblemTpl&lt;double&gt;::computeDerivatives (2,430 samples, 43.69%)</title><rect x="52.6250%" y="437" width="43.6893%" height="15" fill="rgb(216,190,48)" fg:x="2927" fg:w="2430"/><text x="52.8750%" y="447.50">proxddp::TrajOptProblemTpl&lt;double&gt;::computeDerivatives</text></g><g><title>proxddp::compat::croc::StateWrapperTpl&lt;double&gt;::Jdifference_impl (1 samples, 0.02%)</title><rect x="96.2963%" y="421" width="0.0180%" height="15" fill="rgb(251,171,36)" fg:x="5356" fg:w="1"/><text x="96.5463%" y="431.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::Jdiff (1 samples, 0.02%)</title><rect x="96.2963%" y="405" width="0.0180%" height="15" fill="rgb(230,62,22)" fg:x="5356" fg:w="1"/><text x="96.5463%" y="415.50"></text></g><g><title>pinocchio::dDifference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="96.2963%" y="389" width="0.0180%" height="15" fill="rgb(225,114,35)" fg:x="5356" fg:w="1"/><text x="96.5463%" y="399.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_15dDifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_INS1I_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS1F_11OuterStrideILin1EEEEELin1ELin1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S21_RS1U_RKNS1_16ArgumentPositionEEEEvEEEENT_11result_typeERS28_ (1 samples, 0.02%)</title><rect x="96.2963%" y="373" width="0.0180%" height="15" fill="rgb(215,118,42)" fg:x="5356" fg:w="1"/><text x="96.5463%" y="383.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (1 samples, 0.02%)</title><rect x="96.4401%" y="373" width="0.0180%" height="15" fill="rgb(243,119,21)" fg:x="5364" fg:w="1"/><text x="96.6901%" y="383.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="96.4581%" y="373" width="0.0180%" height="15" fill="rgb(252,177,53)" fg:x="5365" fg:w="1"/><text x="96.7081%" y="383.50"></text></g><g><title>crocoddyl::ActuationModelFullTpl&lt;double&gt;::calc (2 samples, 0.04%)</title><rect x="96.4761%" y="373" width="0.0360%" height="15" fill="rgb(237,209,29)" fg:x="5366" fg:w="2"/><text x="96.7261%" y="383.50"></text></g><g><title>crocoddyl::ResidualModelControlTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="96.6019%" y="341" width="0.0180%" height="15" fill="rgb(212,65,23)" fg:x="5373" fg:w="1"/><text x="96.8519%" y="351.50"></text></g><g><title>__atan2 (2 samples, 0.04%)</title><rect x="96.6918%" y="293" width="0.0360%" height="15" fill="rgb(230,222,46)" fg:x="5378" fg:w="2"/><text x="96.9418%" y="303.50"></text></g><g><title>__ieee754_atan2_fma (2 samples, 0.04%)</title><rect x="96.6918%" y="277" width="0.0360%" height="15" fill="rgb(215,135,32)" fg:x="5378" fg:w="2"/><text x="96.9418%" y="287.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::calc (7 samples, 0.13%)</title><rect x="96.6199%" y="341" width="0.1259%" height="15" fill="rgb(246,101,22)" fg:x="5374" fg:w="7"/><text x="96.8699%" y="351.50"></text></g><g><title>pinocchio::log6_impl&lt;double&gt;::run&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (4 samples, 0.07%)</title><rect x="96.6739%" y="325" width="0.0719%" height="15" fill="rgb(206,107,13)" fg:x="5377" fg:w="4"/><text x="96.9239%" y="335.50"></text></g><g><title>pinocchio::log3_impl&lt;double&gt;::run&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; &gt; (4 samples, 0.07%)</title><rect x="96.6739%" y="309" width="0.0719%" height="15" fill="rgb(250,100,44)" fg:x="5377" fg:w="4"/><text x="96.9239%" y="319.50"></text></g><g><title>__sin_fma (1 samples, 0.02%)</title><rect x="96.7278%" y="293" width="0.0180%" height="15" fill="rgb(231,147,38)" fg:x="5380" fg:w="1"/><text x="96.9778%" y="303.50"></text></g><g><title>do_cos (1 samples, 0.02%)</title><rect x="96.7278%" y="277" width="0.0180%" height="15" fill="rgb(229,8,40)" fg:x="5380" fg:w="1"/><text x="96.9778%" y="287.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calc (10 samples, 0.18%)</title><rect x="96.5840%" y="357" width="0.1798%" height="15" fill="rgb(221,135,30)" fg:x="5372" fg:w="10"/><text x="96.8340%" y="367.50"></text></g><g><title>crocoddyl::ResidualModelStateTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="96.7458%" y="341" width="0.0180%" height="15" fill="rgb(249,193,18)" fg:x="5381" fg:w="1"/><text x="96.9958%" y="351.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::diff (1 samples, 0.02%)</title><rect x="96.7458%" y="325" width="0.0180%" height="15" fill="rgb(209,133,39)" fg:x="5381" fg:w="1"/><text x="96.9958%" y="335.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calc (16 samples, 0.29%)</title><rect x="96.5120%" y="373" width="0.2877%" height="15" fill="rgb(232,100,14)" fg:x="5368" fg:w="16"/><text x="96.7620%" y="383.50"></text></g><g><title>std::local_Rb_tree_increment (2 samples, 0.04%)</title><rect x="96.7638%" y="357" width="0.0360%" height="15" fill="rgb(224,185,1)" fg:x="5382" fg:w="2"/><text x="97.0138%" y="367.50"></text></g><g><title>pinocchio::cholesky::computeMinv&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (3 samples, 0.05%)</title><rect x="96.7997%" y="373" width="0.0539%" height="15" fill="rgb(223,139,8)" fg:x="5384" fg:w="3"/><text x="97.0497%" y="383.50"></text></g><g><title>pinocchio::cholesky::internal::Miunit&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt; &gt; (3 samples, 0.05%)</title><rect x="96.7997%" y="357" width="0.0539%" height="15" fill="rgb(232,213,38)" fg:x="5384" fg:w="3"/><text x="97.0497%" y="367.50"></text></g><g><title>pinocchio::cholesky::decompose&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; (3 samples, 0.05%)</title><rect x="96.8536%" y="373" width="0.0539%" height="15" fill="rgb(207,94,22)" fg:x="5387" fg:w="3"/><text x="97.1036%" y="383.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl14CATForwardStepIdLi0ES16_N5Eigen3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEES1M_EEvE27InternalVisitor (1 samples, 0.02%)</title><rect x="96.9975%" y="357" width="0.0180%" height="15" fill="rgb(219,183,54)" fg:x="5395" fg:w="1"/><text x="97.2475%" y="367.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointDataRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointDataHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointDataCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;boost::detail::variant::get_visitor&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="97.0155%" y="325" width="0.0180%" height="15" fill="rgb(216,185,54)" fg:x="5396" fg:w="1"/><text x="97.2655%" y="335.50"></text></g><g><title>pinocchio::computeMechanicalEnergy&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; (2 samples, 0.04%)</title><rect x="97.0155%" y="357" width="0.0360%" height="15" fill="rgb(254,217,39)" fg:x="5396" fg:w="2"/><text x="97.2655%" y="367.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::KineticEnergyAlgoForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (2 samples, 0.04%)</title><rect x="97.0155%" y="341" width="0.0360%" height="15" fill="rgb(240,178,23)" fg:x="5396" fg:w="2"/><text x="97.2655%" y="351.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::vtiv_impl&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="97.0334%" y="325" width="0.0180%" height="15" fill="rgb(218,11,47)" fg:x="5397" fg:w="1"/><text x="97.2834%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (2 samples, 0.04%)</title><rect x="97.2132%" y="325" width="0.0360%" height="15" fill="rgb(218,51,51)" fg:x="5407" fg:w="2"/><text x="97.4632%" y="335.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (12 samples, 0.22%)</title><rect x="97.0514%" y="357" width="0.2157%" height="15" fill="rgb(238,126,27)" fg:x="5398" fg:w="12"/><text x="97.3014%" y="367.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (11 samples, 0.20%)</title><rect x="97.0694%" y="341" width="0.1978%" height="15" fill="rgb(249,202,22)" fg:x="5399" fg:w="11"/><text x="97.3194%" y="351.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (1 samples, 0.02%)</title><rect x="97.2492%" y="325" width="0.0180%" height="15" fill="rgb(254,195,49)" fg:x="5409" fg:w="1"/><text x="97.4992%" y="335.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-= (1 samples, 0.02%)</title><rect x="97.2492%" y="309" width="0.0180%" height="15" fill="rgb(208,123,14)" fg:x="5409" fg:w="1"/><text x="97.4992%" y="319.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointDataRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointDataHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointDataCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;boost::detail::variant::get_visitor&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="97.3211%" y="341" width="0.0180%" height="15" fill="rgb(224,200,8)" fg:x="5413" fg:w="1"/><text x="97.5711%" y="351.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (1 samples, 0.02%)</title><rect x="97.3930%" y="325" width="0.0180%" height="15" fill="rgb(217,61,36)" fg:x="5417" fg:w="1"/><text x="97.6430%" y="335.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;&gt; &gt;::operator (9 samples, 0.16%)</title><rect x="97.2672%" y="357" width="0.1618%" height="15" fill="rgb(206,35,45)" fg:x="5410" fg:w="9"/><text x="97.5172%" y="367.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (5 samples, 0.09%)</title><rect x="97.3391%" y="341" width="0.0899%" height="15" fill="rgb(217,65,33)" fg:x="5414" fg:w="5"/><text x="97.5891%" y="351.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="97.4110%" y="325" width="0.0180%" height="15" fill="rgb(222,158,48)" fg:x="5418" fg:w="1"/><text x="97.6610%" y="335.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (3 samples, 0.05%)</title><rect x="97.4290%" y="357" width="0.0539%" height="15" fill="rgb(254,2,54)" fg:x="5419" fg:w="3"/><text x="97.6790%" y="367.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="97.4649%" y="341" width="0.0180%" height="15" fill="rgb(250,143,38)" fg:x="5421" fg:w="1"/><text x="97.7149%" y="351.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="97.4829%" y="357" width="0.0180%" height="15" fill="rgb(248,25,0)" fg:x="5422" fg:w="1"/><text x="97.7329%" y="367.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (2 samples, 0.04%)</title><rect x="97.5009%" y="357" width="0.0360%" height="15" fill="rgb(206,152,27)" fg:x="5423" fg:w="2"/><text x="97.7509%" y="367.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="97.5189%" y="341" width="0.0180%" height="15" fill="rgb(240,77,30)" fg:x="5424" fg:w="1"/><text x="97.7689%" y="351.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="97.5189%" y="325" width="0.0180%" height="15" fill="rgb(231,5,3)" fg:x="5424" fg:w="1"/><text x="97.7689%" y="335.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (1 samples, 0.02%)</title><rect x="97.5908%" y="341" width="0.0180%" height="15" fill="rgb(207,226,32)" fg:x="5428" fg:w="1"/><text x="97.8408%" y="351.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (2 samples, 0.04%)</title><rect x="97.6088%" y="341" width="0.0360%" height="15" fill="rgb(222,207,47)" fg:x="5429" fg:w="2"/><text x="97.8588%" y="351.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (7 samples, 0.13%)</title><rect x="97.5369%" y="357" width="0.1259%" height="15" fill="rgb(229,115,45)" fg:x="5425" fg:w="7"/><text x="97.7869%" y="367.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="97.6447%" y="341" width="0.0180%" height="15" fill="rgb(224,191,6)" fg:x="5431" fg:w="1"/><text x="97.8947%" y="351.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (2 samples, 0.04%)</title><rect x="97.6807%" y="341" width="0.0360%" height="15" fill="rgb(230,227,24)" fg:x="5433" fg:w="2"/><text x="97.9307%" y="351.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="97.7166%" y="341" width="0.0180%" height="15" fill="rgb(228,80,19)" fg:x="5435" fg:w="1"/><text x="97.9666%" y="351.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="97.7346%" y="341" width="0.0180%" height="15" fill="rgb(247,229,0)" fg:x="5436" fg:w="1"/><text x="97.9846%" y="351.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="97.7526%" y="341" width="0.0180%" height="15" fill="rgb(237,194,15)" fg:x="5437" fg:w="1"/><text x="98.0026%" y="351.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calc (81 samples, 1.46%)</title><rect x="96.3323%" y="405" width="1.4563%" height="15" fill="rgb(219,203,20)" fg:x="5358" fg:w="81"/><text x="96.5823%" y="415.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::calc (78 samples, 1.40%)</title><rect x="96.3862%" y="389" width="1.4024%" height="15" fill="rgb(234,128,8)" fg:x="5361" fg:w="78"/><text x="96.6362%" y="399.50"></text></g><g><title>pinocchio::impl::computeAllTerms&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (49 samples, 0.88%)</title><rect x="96.9076%" y="373" width="0.8810%" height="15" fill="rgb(248,202,8)" fg:x="5390" fg:w="49"/><text x="97.1576%" y="383.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (7 samples, 0.13%)</title><rect x="97.6627%" y="357" width="0.1259%" height="15" fill="rgb(206,104,37)" fg:x="5432" fg:w="7"/><text x="97.9127%" y="367.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="97.7706%" y="341" width="0.0180%" height="15" fill="rgb(223,8,27)" fg:x="5438" fg:w="1"/><text x="98.0206%" y="351.50"></text></g><g><title>proxddp::compat::croc::CrocActionModelWrapperTpl&lt;double&gt;::evaluate (83 samples, 1.49%)</title><rect x="96.3143%" y="421" width="1.4923%" height="15" fill="rgb(216,217,28)" fg:x="5357" fg:w="83"/><text x="96.5643%" y="431.50"></text></g><g><title>proxddp::compat::croc::StateWrapperTpl&lt;double&gt;::difference_impl (1 samples, 0.02%)</title><rect x="97.7886%" y="405" width="0.0180%" height="15" fill="rgb(249,199,1)" fg:x="5439" fg:w="1"/><text x="98.0386%" y="415.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::diff (1 samples, 0.02%)</title><rect x="97.7886%" y="389" width="0.0180%" height="15" fill="rgb(240,85,17)" fg:x="5439" fg:w="1"/><text x="98.0386%" y="399.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="97.7886%" y="373" width="0.0180%" height="15" fill="rgb(206,108,45)" fg:x="5439" fg:w="1"/><text x="98.0386%" y="383.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14DifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (1 samples, 0.02%)</title><rect x="97.7886%" y="357" width="0.0180%" height="15" fill="rgb(245,210,41)" fg:x="5439" fg:w="1"/><text x="98.0386%" y="367.50"></text></g><g><title>proxddp::TrajOptProblemTpl&lt;double&gt;::evaluate (84 samples, 1.51%)</title><rect x="96.3143%" y="437" width="1.5102%" height="15" fill="rgb(206,13,37)" fg:x="5357" fg:w="84"/><text x="96.5643%" y="447.50"></text></g><g><title>proxddp::compat::croc::CrocCostModelWrapperTpl&lt;double&gt;::evaluate (1 samples, 0.02%)</title><rect x="97.8065%" y="421" width="0.0180%" height="15" fill="rgb(250,61,18)" fg:x="5440" fg:w="1"/><text x="98.0565%" y="431.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="97.8065%" y="405" width="0.0180%" height="15" fill="rgb(235,172,48)" fg:x="5440" fg:w="1"/><text x="98.0565%" y="415.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="97.8065%" y="389" width="0.0180%" height="15" fill="rgb(249,201,17)" fg:x="5440" fg:w="1"/><text x="98.0565%" y="399.50"></text></g><g><title>pinocchio::impl::computeAllTerms&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="97.8065%" y="373" width="0.0180%" height="15" fill="rgb(219,208,6)" fg:x="5440" fg:w="1"/><text x="98.0565%" y="383.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="97.8065%" y="357" width="0.0180%" height="15" fill="rgb(248,31,23)" fg:x="5440" fg:w="1"/><text x="98.0565%" y="367.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="97.8065%" y="341" width="0.0180%" height="15" fill="rgb(245,15,42)" fg:x="5440" fg:w="1"/><text x="98.0565%" y="351.50"></text></g><g><title>proxddp::SolverFDDP&lt;double&gt;::run (5,157 samples, 92.72%)</title><rect x="5.1780%" y="453" width="92.7184%" height="15" fill="rgb(222,217,39)" fg:x="288" fg:w="5157"/><text x="5.4280%" y="463.50">proxddp::SolverFDDP&lt;double&gt;::run</text></g><g><title>std::vector&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, std::allocator&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; &gt;::operator= (4 samples, 0.07%)</title><rect x="97.8245%" y="437" width="0.0719%" height="15" fill="rgb(210,219,27)" fg:x="5441" fg:w="4"/><text x="98.0745%" y="447.50"></text></g><g><title>proxddp::ResultsFDDPTpl&lt;double&gt;::ResultsFDDPTpl (1 samples, 0.02%)</title><rect x="97.8964%" y="437" width="0.0180%" height="15" fill="rgb(252,166,36)" fg:x="5445" fg:w="1"/><text x="98.1464%" y="447.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="97.8964%" y="421" width="0.0180%" height="15" fill="rgb(245,132,34)" fg:x="5445" fg:w="1"/><text x="98.1464%" y="431.50"></text></g><g><title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt;::resize (1 samples, 0.02%)</title><rect x="97.9144%" y="421" width="0.0180%" height="15" fill="rgb(236,54,3)" fg:x="5446" fg:w="1"/><text x="98.1644%" y="431.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="97.9144%" y="405" width="0.0180%" height="15" fill="rgb(241,173,43)" fg:x="5446" fg:w="1"/><text x="98.1644%" y="415.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="97.9144%" y="389" width="0.0180%" height="15" fill="rgb(215,190,9)" fg:x="5446" fg:w="1"/><text x="98.1644%" y="399.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="97.9144%" y="373" width="0.0180%" height="15" fill="rgb(242,101,16)" fg:x="5446" fg:w="1"/><text x="98.1644%" y="383.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="97.9144%" y="357" width="0.0180%" height="15" fill="rgb(223,190,21)" fg:x="5446" fg:w="1"/><text x="98.1644%" y="367.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="97.9144%" y="341" width="0.0180%" height="15" fill="rgb(215,228,25)" fg:x="5446" fg:w="1"/><text x="98.1644%" y="351.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="97.9144%" y="325" width="0.0180%" height="15" fill="rgb(225,36,22)" fg:x="5446" fg:w="1"/><text x="98.1644%" y="335.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="97.9144%" y="309" width="0.0180%" height="15" fill="rgb(251,106,46)" fg:x="5446" fg:w="1"/><text x="98.1644%" y="319.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="97.9144%" y="293" width="0.0180%" height="15" fill="rgb(208,90,1)" fg:x="5446" fg:w="1"/><text x="98.1644%" y="303.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="97.9144%" y="277" width="0.0180%" height="15" fill="rgb(243,10,4)" fg:x="5446" fg:w="1"/><text x="98.1644%" y="287.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="97.9144%" y="261" width="0.0180%" height="15" fill="rgb(212,137,27)" fg:x="5446" fg:w="1"/><text x="98.1644%" y="271.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="97.9684%" y="261" width="0.0180%" height="15" fill="rgb(231,220,49)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="271.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="97.9684%" y="245" width="0.0180%" height="15" fill="rgb(237,96,20)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="255.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="97.9684%" y="229" width="0.0180%" height="15" fill="rgb(239,229,30)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="239.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="97.9684%" y="213" width="0.0180%" height="15" fill="rgb(219,65,33)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="223.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="97.9684%" y="197" width="0.0180%" height="15" fill="rgb(243,134,7)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="207.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="97.9684%" y="181" width="0.0180%" height="15" fill="rgb(216,177,54)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="191.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="97.9684%" y="165" width="0.0180%" height="15" fill="rgb(211,160,20)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="175.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="97.9684%" y="149" width="0.0180%" height="15" fill="rgb(239,85,39)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="159.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="97.9684%" y="133" width="0.0180%" height="15" fill="rgb(232,125,22)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="143.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="97.9684%" y="117" width="0.0180%" height="15" fill="rgb(244,57,34)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="127.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="97.9684%" y="101" width="0.0180%" height="15" fill="rgb(214,203,32)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="111.50"></text></g><g><title>rmqueue (1 samples, 0.02%)</title><rect x="97.9684%" y="85" width="0.0180%" height="15" fill="rgb(207,58,43)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="95.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (1 samples, 0.02%)</title><rect x="97.9684%" y="69" width="0.0180%" height="15" fill="rgb(215,193,15)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="79.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.02%)</title><rect x="97.9684%" y="53" width="0.0180%" height="15" fill="rgb(232,15,44)" fg:x="5449" fg:w="1"/><text x="98.2184%" y="63.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (3 samples, 0.05%)</title><rect x="97.9504%" y="309" width="0.0539%" height="15" fill="rgb(212,3,48)" fg:x="5448" fg:w="3"/><text x="98.2004%" y="319.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.05%)</title><rect x="97.9504%" y="293" width="0.0539%" height="15" fill="rgb(218,128,7)" fg:x="5448" fg:w="3"/><text x="98.2004%" y="303.50"></text></g><g><title>_int_malloc (3 samples, 0.05%)</title><rect x="97.9504%" y="277" width="0.0539%" height="15" fill="rgb(226,216,39)" fg:x="5448" fg:w="3"/><text x="98.2004%" y="287.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="97.9863%" y="261" width="0.0180%" height="15" fill="rgb(243,47,51)" fg:x="5450" fg:w="1"/><text x="98.2363%" y="271.50"></text></g><g><title>crocoddyl::ActionDataAbstractTpl&lt;double&gt;::ActionDataAbstractTpl&lt;crocoddyl::IntegratedActionModelEulerTpl&gt; (6 samples, 0.11%)</title><rect x="97.9324%" y="325" width="0.1079%" height="15" fill="rgb(241,183,40)" fg:x="5447" fg:w="6"/><text x="98.1824%" y="335.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="98.0043%" y="309" width="0.0360%" height="15" fill="rgb(231,217,32)" fg:x="5451" fg:w="2"/><text x="98.2543%" y="319.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="98.0043%" y="293" width="0.0360%" height="15" fill="rgb(229,61,38)" fg:x="5451" fg:w="2"/><text x="98.2543%" y="303.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::createData (1 samples, 0.02%)</title><rect x="98.0403%" y="325" width="0.0180%" height="15" fill="rgb(225,210,5)" fg:x="5453" fg:w="1"/><text x="98.2903%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="98.0762%" y="197" width="0.0180%" height="15" fill="rgb(231,79,45)" fg:x="5455" fg:w="1"/><text x="98.3262%" y="207.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (2 samples, 0.04%)</title><rect x="98.0942%" y="181" width="0.0360%" height="15" fill="rgb(224,100,7)" fg:x="5456" fg:w="2"/><text x="98.3442%" y="191.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="98.0942%" y="165" width="0.0360%" height="15" fill="rgb(241,198,18)" fg:x="5456" fg:w="2"/><text x="98.3442%" y="175.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="98.0942%" y="149" width="0.0360%" height="15" fill="rgb(252,97,53)" fg:x="5456" fg:w="2"/><text x="98.3442%" y="159.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="98.1122%" y="133" width="0.0180%" height="15" fill="rgb(220,88,7)" fg:x="5457" fg:w="1"/><text x="98.3622%" y="143.50"></text></g><g><title>crocoddyl::ActivationModelQuadTpl&lt;double&gt;::createData (1 samples, 0.02%)</title><rect x="98.1302%" y="181" width="0.0180%" height="15" fill="rgb(213,176,14)" fg:x="5458" fg:w="1"/><text x="98.3802%" y="191.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::ActivationDataAbstractTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::ActivationDataAbstractTpl&lt;double&gt; &gt;, crocoddyl::ActivationModelQuadTpl&lt;double&gt;*&gt; (1 samples, 0.02%)</title><rect x="98.1302%" y="165" width="0.0180%" height="15" fill="rgb(246,73,7)" fg:x="5458" fg:w="1"/><text x="98.3802%" y="175.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="98.1481%" y="117" width="0.0180%" height="15" fill="rgb(245,64,36)" fg:x="5459" fg:w="1"/><text x="98.3981%" y="127.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.1481%" y="101" width="0.0180%" height="15" fill="rgb(245,80,10)" fg:x="5459" fg:w="1"/><text x="98.3981%" y="111.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.1481%" y="85" width="0.0180%" height="15" fill="rgb(232,107,50)" fg:x="5459" fg:w="1"/><text x="98.3981%" y="95.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::createData (7 samples, 0.13%)</title><rect x="98.0583%" y="245" width="0.1259%" height="15" fill="rgb(253,3,0)" fg:x="5454" fg:w="7"/><text x="98.3083%" y="255.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::CostDataResidualTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataResidualTpl&lt;double&gt; &gt;, crocoddyl::CostModelResidualTpl&lt;double&gt;*, crocoddyl::DataCollectorAbstractTpl&lt;double&gt;* const&amp;&gt; (7 samples, 0.13%)</title><rect x="98.0583%" y="229" width="0.1259%" height="15" fill="rgb(212,99,53)" fg:x="5454" fg:w="7"/><text x="98.3083%" y="239.50"></text></g><g><title>crocoddyl::CostDataResidualTpl&lt;double&gt;::CostDataResidualTpl&lt;crocoddyl::CostModelResidualTpl&gt; (6 samples, 0.11%)</title><rect x="98.0762%" y="213" width="0.1079%" height="15" fill="rgb(249,111,54)" fg:x="5455" fg:w="6"/><text x="98.3262%" y="223.50"></text></g><g><title>crocoddyl::CostDataAbstractTpl&lt;double&gt;::CostDataAbstractTpl&lt;crocoddyl::CostModelResidualTpl&gt; (5 samples, 0.09%)</title><rect x="98.0942%" y="197" width="0.0899%" height="15" fill="rgb(249,55,30)" fg:x="5456" fg:w="5"/><text x="98.3442%" y="207.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::createData (2 samples, 0.04%)</title><rect x="98.1481%" y="181" width="0.0360%" height="15" fill="rgb(237,47,42)" fg:x="5459" fg:w="2"/><text x="98.3981%" y="191.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::ResidualDataFramePlacementTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::ResidualDataFramePlacementTpl&lt;double&gt; &gt;, crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;*, crocoddyl::DataCollectorAbstractTpl&lt;double&gt;* const&amp;&gt; (2 samples, 0.04%)</title><rect x="98.1481%" y="165" width="0.0360%" height="15" fill="rgb(211,20,18)" fg:x="5459" fg:w="2"/><text x="98.3981%" y="175.50"></text></g><g><title>crocoddyl::ResidualDataFramePlacementTpl&lt;double&gt;::ResidualDataFramePlacementTpl&lt;crocoddyl::ResidualModelFramePlacementTpl&gt; (2 samples, 0.04%)</title><rect x="98.1481%" y="149" width="0.0360%" height="15" fill="rgb(231,203,46)" fg:x="5459" fg:w="2"/><text x="98.3981%" y="159.50"></text></g><g><title>crocoddyl::ResidualDataAbstractTpl&lt;double&gt;::ResidualDataAbstractTpl&lt;crocoddyl::ResidualModelFramePlacementTpl&gt; (2 samples, 0.04%)</title><rect x="98.1481%" y="133" width="0.0360%" height="15" fill="rgb(237,142,3)" fg:x="5459" fg:w="2"/><text x="98.3981%" y="143.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="98.1661%" y="117" width="0.0180%" height="15" fill="rgb(241,107,1)" fg:x="5460" fg:w="1"/><text x="98.4161%" y="127.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::CostDataSumTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataSumTpl&lt;double&gt; &gt;, crocoddyl::CostModelSumTpl&lt;double&gt;*, crocoddyl::DataCollectorAbstractTpl&lt;double&gt;* const&amp;&gt; (8 samples, 0.14%)</title><rect x="98.0583%" y="277" width="0.1438%" height="15" fill="rgb(229,83,13)" fg:x="5454" fg:w="8"/><text x="98.3083%" y="287.50"></text></g><g><title>crocoddyl::CostDataSumTpl&lt;double&gt;::CostDataSumTpl&lt;crocoddyl::CostModelSumTpl&gt; (8 samples, 0.14%)</title><rect x="98.0583%" y="261" width="0.1438%" height="15" fill="rgb(241,91,40)" fg:x="5454" fg:w="8"/><text x="98.3083%" y="271.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt; &gt;::_M_emplace_unique&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="98.1841%" y="245" width="0.0180%" height="15" fill="rgb(225,3,45)" fg:x="5461" fg:w="1"/><text x="98.4341%" y="255.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (1 samples, 0.02%)</title><rect x="98.1841%" y="229" width="0.0180%" height="15" fill="rgb(244,223,14)" fg:x="5461" fg:w="1"/><text x="98.4341%" y="239.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.02%)</title><rect x="98.1841%" y="213" width="0.0180%" height="15" fill="rgb(224,124,37)" fg:x="5461" fg:w="1"/><text x="98.4341%" y="223.50"></text></g><g><title>crocoddyl::DifferentialActionDataAbstractTpl&lt;double&gt;::DifferentialActionDataAbstractTpl&lt;crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&gt; (1 samples, 0.02%)</title><rect x="98.2021%" y="277" width="0.0180%" height="15" fill="rgb(251,171,30)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="287.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="98.2021%" y="261" width="0.0180%" height="15" fill="rgb(236,46,54)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.2021%" y="245" width="0.0180%" height="15" fill="rgb(245,213,5)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.2021%" y="229" width="0.0180%" height="15" fill="rgb(230,144,27)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="239.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="98.2021%" y="213" width="0.0180%" height="15" fill="rgb(220,86,6)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="223.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="98.2021%" y="197" width="0.0180%" height="15" fill="rgb(240,20,13)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="207.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="98.2021%" y="181" width="0.0180%" height="15" fill="rgb(217,89,34)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="191.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="98.2021%" y="165" width="0.0180%" height="15" fill="rgb(229,13,5)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="175.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="98.2021%" y="149" width="0.0180%" height="15" fill="rgb(244,67,35)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="159.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="98.2021%" y="133" width="0.0180%" height="15" fill="rgb(221,40,2)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="143.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="98.2021%" y="117" width="0.0180%" height="15" fill="rgb(237,157,21)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="127.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.02%)</title><rect x="98.2021%" y="101" width="0.0180%" height="15" fill="rgb(222,94,11)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="111.50"></text></g><g><title>lru_cache_add (1 samples, 0.02%)</title><rect x="98.2021%" y="85" width="0.0180%" height="15" fill="rgb(249,113,6)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="95.50"></text></g><g><title>folio_add_lru (1 samples, 0.02%)</title><rect x="98.2021%" y="69" width="0.0180%" height="15" fill="rgb(238,137,36)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="79.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.02%)</title><rect x="98.2021%" y="53" width="0.0180%" height="15" fill="rgb(210,102,26)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="63.50"></text></g><g><title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="98.2021%" y="37" width="0.0180%" height="15" fill="rgb(218,30,30)" fg:x="5462" fg:w="1"/><text x="98.4521%" y="47.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.04%)</title><rect x="98.2560%" y="213" width="0.0360%" height="15" fill="rgb(214,67,26)" fg:x="5465" fg:w="2"/><text x="98.5060%" y="223.50"></text></g><g><title>exc_page_fault (2 samples, 0.04%)</title><rect x="98.2560%" y="197" width="0.0360%" height="15" fill="rgb(251,9,53)" fg:x="5465" fg:w="2"/><text x="98.5060%" y="207.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.04%)</title><rect x="98.2560%" y="181" width="0.0360%" height="15" fill="rgb(228,204,25)" fg:x="5465" fg:w="2"/><text x="98.5060%" y="191.50"></text></g><g><title>handle_mm_fault (2 samples, 0.04%)</title><rect x="98.2560%" y="165" width="0.0360%" height="15" fill="rgb(207,153,8)" fg:x="5465" fg:w="2"/><text x="98.5060%" y="175.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.04%)</title><rect x="98.2560%" y="149" width="0.0360%" height="15" fill="rgb(242,9,16)" fg:x="5465" fg:w="2"/><text x="98.5060%" y="159.50"></text></g><g><title>handle_pte_fault (2 samples, 0.04%)</title><rect x="98.2560%" y="133" width="0.0360%" height="15" fill="rgb(217,211,10)" fg:x="5465" fg:w="2"/><text x="98.5060%" y="143.50"></text></g><g><title>do_anonymous_page (2 samples, 0.04%)</title><rect x="98.2560%" y="117" width="0.0360%" height="15" fill="rgb(219,228,52)" fg:x="5465" fg:w="2"/><text x="98.5060%" y="127.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.04%)</title><rect x="98.2560%" y="101" width="0.0360%" height="15" fill="rgb(231,92,29)" fg:x="5465" fg:w="2"/><text x="98.5060%" y="111.50"></text></g><g><title>mem_cgroup_charge_statistics (2 samples, 0.04%)</title><rect x="98.2560%" y="85" width="0.0360%" height="15" fill="rgb(232,8,23)" fg:x="5465" fg:w="2"/><text x="98.5060%" y="95.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (3 samples, 0.05%)</title><rect x="98.2560%" y="261" width="0.0539%" height="15" fill="rgb(216,211,34)" fg:x="5465" fg:w="3"/><text x="98.5060%" y="271.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.05%)</title><rect x="98.2560%" y="245" width="0.0539%" height="15" fill="rgb(236,151,0)" fg:x="5465" fg:w="3"/><text x="98.5060%" y="255.50"></text></g><g><title>_int_malloc (3 samples, 0.05%)</title><rect x="98.2560%" y="229" width="0.0539%" height="15" fill="rgb(209,168,3)" fg:x="5465" fg:w="3"/><text x="98.5060%" y="239.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="98.2920%" y="213" width="0.0180%" height="15" fill="rgb(208,129,28)" fg:x="5467" fg:w="1"/><text x="98.5420%" y="223.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 1&gt;::resize (1 samples, 0.02%)</title><rect x="98.3100%" y="261" width="0.0180%" height="15" fill="rgb(229,78,22)" fg:x="5468" fg:w="1"/><text x="98.5600%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.3100%" y="245" width="0.0180%" height="15" fill="rgb(228,187,13)" fg:x="5468" fg:w="1"/><text x="98.5600%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.3100%" y="229" width="0.0180%" height="15" fill="rgb(240,119,24)" fg:x="5468" fg:w="1"/><text x="98.5600%" y="239.50"></text></g><g><title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt;::resize (1 samples, 0.02%)</title><rect x="98.3279%" y="261" width="0.0180%" height="15" fill="rgb(209,194,42)" fg:x="5469" fg:w="1"/><text x="98.5779%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.3279%" y="245" width="0.0180%" height="15" fill="rgb(247,200,46)" fg:x="5469" fg:w="1"/><text x="98.5779%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.3279%" y="229" width="0.0180%" height="15" fill="rgb(218,76,16)" fg:x="5469" fg:w="1"/><text x="98.5779%" y="239.50"></text></g><g><title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt;::resize (2 samples, 0.04%)</title><rect x="98.3459%" y="261" width="0.0360%" height="15" fill="rgb(225,21,48)" fg:x="5470" fg:w="2"/><text x="98.5959%" y="271.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="98.3459%" y="245" width="0.0360%" height="15" fill="rgb(239,223,50)" fg:x="5470" fg:w="2"/><text x="98.5959%" y="255.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="98.3459%" y="229" width="0.0360%" height="15" fill="rgb(244,45,21)" fg:x="5470" fg:w="2"/><text x="98.5959%" y="239.50"></text></g><g><title>checked_request2size (1 samples, 0.02%)</title><rect x="98.3639%" y="213" width="0.0180%" height="15" fill="rgb(232,33,43)" fg:x="5471" fg:w="1"/><text x="98.6139%" y="223.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.05%)</title><rect x="98.3819%" y="261" width="0.0539%" height="15" fill="rgb(209,8,3)" fg:x="5472" fg:w="3"/><text x="98.6319%" y="271.50"></text></g><g><title>boost::variant&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointModelMimic&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointModelMimic&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointModelMimic&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointModelFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointModelPlanarTpl&lt;double, 0&gt;, pinocchio::JointModelRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointModelSphericalTpl&lt;double, 0&gt;, pinocchio::JointModelSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointModelPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointModelPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointModelPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointModelPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointModelTranslationTpl&lt;double, 0&gt;, pinocchio::JointModelRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointModelRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointModelRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointModelRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointModelHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointModelHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointModelHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointModelHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointModelCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;pinocchio::CreateJointData&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&gt; (1 samples, 0.02%)</title><rect x="98.4358%" y="261" width="0.0180%" height="15" fill="rgb(214,25,53)" fg:x="5475" fg:w="1"/><text x="98.6858%" y="271.50"></text></g><g><title>pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::JointDataTpl&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt; (1 samples, 0.02%)</title><rect x="98.4358%" y="245" width="0.0180%" height="15" fill="rgb(254,186,54)" fg:x="5475" fg:w="1"/><text x="98.6858%" y="255.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, (1 samples, 0.02%)</title><rect x="98.4358%" y="229" width="0.0180%" height="15" fill="rgb(208,174,49)" fg:x="5475" fg:w="1"/><text x="98.6858%" y="239.50"></text></g><g><title>std::vector&lt;Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, Eigen::aligned_allocator&lt;Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="98.4538%" y="261" width="0.0180%" height="15" fill="rgb(233,191,51)" fg:x="5476" fg:w="1"/><text x="98.7038%" y="271.50"></text></g><g><title>Eigen::aligned_allocator&lt;Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="98.4538%" y="245" width="0.0180%" height="15" fill="rgb(222,134,10)" fg:x="5476" fg:w="1"/><text x="98.7038%" y="255.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.4538%" y="229" width="0.0180%" height="15" fill="rgb(230,226,20)" fg:x="5476" fg:w="1"/><text x="98.7038%" y="239.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.4538%" y="213" width="0.0180%" height="15" fill="rgb(251,111,25)" fg:x="5476" fg:w="1"/><text x="98.7038%" y="223.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="98.4538%" y="197" width="0.0180%" height="15" fill="rgb(224,40,46)" fg:x="5476" fg:w="1"/><text x="98.7038%" y="207.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="98.4898%" y="197" width="0.0180%" height="15" fill="rgb(236,108,47)" fg:x="5478" fg:w="1"/><text x="98.7398%" y="207.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="98.5077%" y="133" width="0.0180%" height="15" fill="rgb(234,93,0)" fg:x="5479" fg:w="1"/><text x="98.7577%" y="143.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="98.5077%" y="117" width="0.0180%" height="15" fill="rgb(224,213,32)" fg:x="5479" fg:w="1"/><text x="98.7577%" y="127.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="98.5077%" y="101" width="0.0180%" height="15" fill="rgb(251,11,48)" fg:x="5479" fg:w="1"/><text x="98.7577%" y="111.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="98.5077%" y="85" width="0.0180%" height="15" fill="rgb(236,173,5)" fg:x="5479" fg:w="1"/><text x="98.7577%" y="95.50"></text></g><g><title>__page_set_anon_rmap (1 samples, 0.02%)</title><rect x="98.5077%" y="69" width="0.0180%" height="15" fill="rgb(230,95,12)" fg:x="5479" fg:w="1"/><text x="98.7577%" y="79.50"></text></g><g><title>Eigen::aligned_allocator&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::allocate (4 samples, 0.07%)</title><rect x="98.4718%" y="245" width="0.0719%" height="15" fill="rgb(232,209,1)" fg:x="5477" fg:w="4"/><text x="98.7218%" y="255.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.07%)</title><rect x="98.4718%" y="229" width="0.0719%" height="15" fill="rgb(232,6,1)" fg:x="5477" fg:w="4"/><text x="98.7218%" y="239.50"></text></g><g><title>_int_malloc (4 samples, 0.07%)</title><rect x="98.4718%" y="213" width="0.0719%" height="15" fill="rgb(210,224,50)" fg:x="5477" fg:w="4"/><text x="98.7218%" y="223.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.04%)</title><rect x="98.5077%" y="197" width="0.0360%" height="15" fill="rgb(228,127,35)" fg:x="5479" fg:w="2"/><text x="98.7577%" y="207.50"></text></g><g><title>exc_page_fault (2 samples, 0.04%)</title><rect x="98.5077%" y="181" width="0.0360%" height="15" fill="rgb(245,102,45)" fg:x="5479" fg:w="2"/><text x="98.7577%" y="191.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.04%)</title><rect x="98.5077%" y="165" width="0.0360%" height="15" fill="rgb(214,1,49)" fg:x="5479" fg:w="2"/><text x="98.7577%" y="175.50"></text></g><g><title>handle_mm_fault (2 samples, 0.04%)</title><rect x="98.5077%" y="149" width="0.0360%" height="15" fill="rgb(226,163,40)" fg:x="5479" fg:w="2"/><text x="98.7577%" y="159.50"></text></g><g><title>count_memcg_events.constprop.0 (1 samples, 0.02%)</title><rect x="98.5257%" y="133" width="0.0180%" height="15" fill="rgb(239,212,28)" fg:x="5480" fg:w="1"/><text x="98.7757%" y="143.50"></text></g><g><title>__count_memcg_events (1 samples, 0.02%)</title><rect x="98.5257%" y="117" width="0.0180%" height="15" fill="rgb(220,20,13)" fg:x="5480" fg:w="1"/><text x="98.7757%" y="127.50"></text></g><g><title>std::vector&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt;, Eigen::aligned_allocator&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; &gt;::vector (5 samples, 0.09%)</title><rect x="98.4718%" y="261" width="0.0899%" height="15" fill="rgb(210,164,35)" fg:x="5477" fg:w="5"/><text x="98.7218%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="98.5437%" y="245" width="0.0180%" height="15" fill="rgb(248,109,41)" fg:x="5481" fg:w="1"/><text x="98.7937%" y="255.50"></text></g><g><title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="98.5617%" y="261" width="0.0180%" height="15" fill="rgb(238,23,50)" fg:x="5482" fg:w="1"/><text x="98.8117%" y="271.50"></text></g><g><title>std::vector&lt;pinocchio::ForceTpl&lt;double, 0&gt;, Eigen::aligned_allocator&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt; &gt;::vector (2 samples, 0.04%)</title><rect x="98.5796%" y="261" width="0.0360%" height="15" fill="rgb(211,48,49)" fg:x="5483" fg:w="2"/><text x="98.8296%" y="271.50"></text></g><g><title>Eigen::aligned_allocator&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="98.5976%" y="245" width="0.0180%" height="15" fill="rgb(223,36,21)" fg:x="5484" fg:w="1"/><text x="98.8476%" y="255.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.5976%" y="229" width="0.0180%" height="15" fill="rgb(207,123,46)" fg:x="5484" fg:w="1"/><text x="98.8476%" y="239.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.5976%" y="213" width="0.0180%" height="15" fill="rgb(240,218,32)" fg:x="5484" fg:w="1"/><text x="98.8476%" y="223.50"></text></g><g><title>Eigen::aligned_allocator&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt;::allocate (2 samples, 0.04%)</title><rect x="98.6156%" y="245" width="0.0360%" height="15" fill="rgb(252,5,43)" fg:x="5485" fg:w="2"/><text x="98.8656%" y="255.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="98.6156%" y="229" width="0.0360%" height="15" fill="rgb(252,84,19)" fg:x="5485" fg:w="2"/><text x="98.8656%" y="239.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="98.6156%" y="213" width="0.0360%" height="15" fill="rgb(243,152,39)" fg:x="5485" fg:w="2"/><text x="98.8656%" y="223.50"></text></g><g><title>asm_exc_page_fault (2 samples, 0.04%)</title><rect x="98.6156%" y="197" width="0.0360%" height="15" fill="rgb(234,160,15)" fg:x="5485" fg:w="2"/><text x="98.8656%" y="207.50"></text></g><g><title>exc_page_fault (2 samples, 0.04%)</title><rect x="98.6156%" y="181" width="0.0360%" height="15" fill="rgb(237,34,20)" fg:x="5485" fg:w="2"/><text x="98.8656%" y="191.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.04%)</title><rect x="98.6156%" y="165" width="0.0360%" height="15" fill="rgb(229,97,13)" fg:x="5485" fg:w="2"/><text x="98.8656%" y="175.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="98.6336%" y="149" width="0.0180%" height="15" fill="rgb(234,71,50)" fg:x="5486" fg:w="1"/><text x="98.8836%" y="159.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="98.6336%" y="133" width="0.0180%" height="15" fill="rgb(253,155,4)" fg:x="5486" fg:w="1"/><text x="98.8836%" y="143.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="98.6336%" y="117" width="0.0180%" height="15" fill="rgb(222,185,37)" fg:x="5486" fg:w="1"/><text x="98.8836%" y="127.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="98.6336%" y="101" width="0.0180%" height="15" fill="rgb(251,177,13)" fg:x="5486" fg:w="1"/><text x="98.8836%" y="111.50"></text></g><g><title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="98.6336%" y="85" width="0.0180%" height="15" fill="rgb(250,179,40)" fg:x="5486" fg:w="1"/><text x="98.8836%" y="95.50"></text></g><g><title>__page_set_anon_rmap (1 samples, 0.02%)</title><rect x="98.6336%" y="69" width="0.0180%" height="15" fill="rgb(242,44,2)" fg:x="5486" fg:w="1"/><text x="98.8836%" y="79.50"></text></g><g><title>std::vector&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, Eigen::aligned_allocator&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::_M_realloc_insert&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; (3 samples, 0.05%)</title><rect x="98.6156%" y="261" width="0.0539%" height="15" fill="rgb(216,177,13)" fg:x="5485" fg:w="3"/><text x="98.8656%" y="271.50"></text></g><g><title>std::__uninitialized_copy_a&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const*, pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;*, Eigen::aligned_allocator&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="98.6516%" y="245" width="0.0180%" height="15" fill="rgb(216,106,43)" fg:x="5487" fg:w="1"/><text x="98.9016%" y="255.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointDataRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointDataHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointDataCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::variant (1 samples, 0.02%)</title><rect x="98.6516%" y="229" width="0.0180%" height="15" fill="rgb(216,183,2)" fg:x="5487" fg:w="1"/><text x="98.9016%" y="239.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::createData (43 samples, 0.77%)</title><rect x="97.9324%" y="373" width="0.7731%" height="15" fill="rgb(249,75,3)" fg:x="5447" fg:w="43"/><text x="98.1824%" y="383.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt; &gt;, crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;*&gt; (43 samples, 0.77%)</title><rect x="97.9324%" y="357" width="0.7731%" height="15" fill="rgb(219,67,39)" fg:x="5447" fg:w="43"/><text x="98.1824%" y="367.50"></text></g><g><title>crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;::IntegratedActionDataEulerTpl&lt;crocoddyl::IntegratedActionModelEulerTpl&gt; (43 samples, 0.77%)</title><rect x="97.9324%" y="341" width="0.7731%" height="15" fill="rgb(253,228,2)" fg:x="5447" fg:w="43"/><text x="98.1824%" y="351.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::createData (36 samples, 0.65%)</title><rect x="98.0583%" y="325" width="0.6472%" height="15" fill="rgb(235,138,27)" fg:x="5454" fg:w="36"/><text x="98.3083%" y="335.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt; &gt;, crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;*&gt; (36 samples, 0.65%)</title><rect x="98.0583%" y="309" width="0.6472%" height="15" fill="rgb(236,97,51)" fg:x="5454" fg:w="36"/><text x="98.3083%" y="319.50"></text></g><g><title>crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;::DifferentialActionDataFreeFwdDynamicsTpl&lt;crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&gt; (36 samples, 0.65%)</title><rect x="98.0583%" y="293" width="0.6472%" height="15" fill="rgb(240,80,30)" fg:x="5454" fg:w="36"/><text x="98.3083%" y="303.50"></text></g><g><title>pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::DataTpl (27 samples, 0.49%)</title><rect x="98.2201%" y="277" width="0.4854%" height="15" fill="rgb(230,178,19)" fg:x="5463" fg:w="27"/><text x="98.4701%" y="287.50"></text></g><g><title>std::vector&lt;pinocchio::SE3Tpl&lt;double, 0&gt;, Eigen::aligned_allocator&lt;pinocchio::SE3Tpl&lt;double, 0&gt; &gt; &gt;::vector (2 samples, 0.04%)</title><rect x="98.6695%" y="261" width="0.0360%" height="15" fill="rgb(210,190,27)" fg:x="5488" fg:w="2"/><text x="98.9195%" y="271.50"></text></g><g><title>Eigen::aligned_allocator&lt;pinocchio::SE3Tpl&lt;double, 0&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="98.6875%" y="245" width="0.0180%" height="15" fill="rgb(222,107,31)" fg:x="5489" fg:w="1"/><text x="98.9375%" y="255.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.6875%" y="229" width="0.0180%" height="15" fill="rgb(216,127,34)" fg:x="5489" fg:w="1"/><text x="98.9375%" y="239.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.6875%" y="213" width="0.0180%" height="15" fill="rgb(234,116,52)" fg:x="5489" fg:w="1"/><text x="98.9375%" y="223.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="98.6875%" y="197" width="0.0180%" height="15" fill="rgb(222,124,15)" fg:x="5489" fg:w="1"/><text x="98.9375%" y="207.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="98.6875%" y="181" width="0.0180%" height="15" fill="rgb(231,179,28)" fg:x="5489" fg:w="1"/><text x="98.9375%" y="191.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="98.6875%" y="165" width="0.0180%" height="15" fill="rgb(226,93,45)" fg:x="5489" fg:w="1"/><text x="98.9375%" y="175.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="98.6875%" y="149" width="0.0180%" height="15" fill="rgb(215,8,51)" fg:x="5489" fg:w="1"/><text x="98.9375%" y="159.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="98.6875%" y="133" width="0.0180%" height="15" fill="rgb(223,106,5)" fg:x="5489" fg:w="1"/><text x="98.9375%" y="143.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="98.6875%" y="117" width="0.0180%" height="15" fill="rgb(250,191,5)" fg:x="5489" fg:w="1"/><text x="98.9375%" y="127.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="98.6875%" y="101" width="0.0180%" height="15" fill="rgb(242,132,44)" fg:x="5489" fg:w="1"/><text x="98.9375%" y="111.50"></text></g><g><title>proxddp::CostDataAbstractTpl&lt;double&gt;::CostDataAbstractTpl (1 samples, 0.02%)</title><rect x="98.7055%" y="357" width="0.0180%" height="15" fill="rgb(251,152,29)" fg:x="5490" fg:w="1"/><text x="98.9555%" y="367.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="98.7055%" y="341" width="0.0180%" height="15" fill="rgb(218,179,5)" fg:x="5490" fg:w="1"/><text x="98.9555%" y="351.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.7055%" y="325" width="0.0180%" height="15" fill="rgb(227,67,19)" fg:x="5490" fg:w="1"/><text x="98.9555%" y="335.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.7055%" y="309" width="0.0180%" height="15" fill="rgb(233,119,31)" fg:x="5490" fg:w="1"/><text x="98.9555%" y="319.50"></text></g><g><title>proxddp::compat::croc::CrocActionModelWrapperTpl&lt;double&gt;::createData (47 samples, 0.85%)</title><rect x="97.9324%" y="389" width="0.8450%" height="15" fill="rgb(241,120,22)" fg:x="5447" fg:w="47"/><text x="98.1824%" y="399.50"></text></g><g><title>proxddp::compat::croc::CrocActionDataWrapperTpl&lt;double&gt;::CrocActionDataWrapperTpl (4 samples, 0.07%)</title><rect x="98.7055%" y="373" width="0.0719%" height="15" fill="rgb(224,102,30)" fg:x="5490" fg:w="4"/><text x="98.9555%" y="383.50"></text></g><g><title>proxddp::ExplicitDynamicsDataTpl&lt;double&gt;::ExplicitDynamicsDataTpl (3 samples, 0.05%)</title><rect x="98.7235%" y="357" width="0.0539%" height="15" fill="rgb(210,164,37)" fg:x="5491" fg:w="3"/><text x="98.9735%" y="367.50"></text></g><g><title>proxddp::FunctionDataTpl&lt;double&gt;::FunctionDataTpl (3 samples, 0.05%)</title><rect x="98.7235%" y="341" width="0.0539%" height="15" fill="rgb(226,191,16)" fg:x="5491" fg:w="3"/><text x="98.9735%" y="351.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.05%)</title><rect x="98.7235%" y="325" width="0.0539%" height="15" fill="rgb(214,40,45)" fg:x="5491" fg:w="3"/><text x="98.9735%" y="335.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="98.7594%" y="309" width="0.0180%" height="15" fill="rgb(244,29,26)" fg:x="5493" fg:w="1"/><text x="99.0094%" y="319.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="98.7594%" y="293" width="0.0180%" height="15" fill="rgb(216,16,5)" fg:x="5493" fg:w="1"/><text x="99.0094%" y="303.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="98.7594%" y="277" width="0.0180%" height="15" fill="rgb(249,76,35)" fg:x="5493" fg:w="1"/><text x="99.0094%" y="287.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="98.7594%" y="261" width="0.0180%" height="15" fill="rgb(207,11,44)" fg:x="5493" fg:w="1"/><text x="99.0094%" y="271.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="98.7594%" y="245" width="0.0180%" height="15" fill="rgb(228,190,49)" fg:x="5493" fg:w="1"/><text x="99.0094%" y="255.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="98.7594%" y="229" width="0.0180%" height="15" fill="rgb(214,173,12)" fg:x="5493" fg:w="1"/><text x="99.0094%" y="239.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="98.7594%" y="213" width="0.0180%" height="15" fill="rgb(218,26,35)" fg:x="5493" fg:w="1"/><text x="99.0094%" y="223.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.02%)</title><rect x="98.7594%" y="197" width="0.0180%" height="15" fill="rgb(220,200,19)" fg:x="5493" fg:w="1"/><text x="99.0094%" y="207.50"></text></g><g><title>charge_memcg (1 samples, 0.02%)</title><rect x="98.7594%" y="181" width="0.0180%" height="15" fill="rgb(239,95,49)" fg:x="5493" fg:w="1"/><text x="99.0094%" y="191.50"></text></g><g><title>try_charge_memcg (1 samples, 0.02%)</title><rect x="98.7594%" y="165" width="0.0180%" height="15" fill="rgb(235,85,53)" fg:x="5493" fg:w="1"/><text x="99.0094%" y="175.50"></text></g><g><title>consume_stock (1 samples, 0.02%)</title><rect x="98.7594%" y="149" width="0.0180%" height="15" fill="rgb(233,133,31)" fg:x="5493" fg:w="1"/><text x="99.0094%" y="159.50"></text></g><g><title>std::vector&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, Eigen::aligned_allocator&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::_M_realloc_insert&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; (1 samples, 0.02%)</title><rect x="98.7774%" y="261" width="0.0180%" height="15" fill="rgb(218,25,20)" fg:x="5494" fg:w="1"/><text x="99.0274%" y="271.50"></text></g><g><title>Eigen::aligned_allocator&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="98.7774%" y="245" width="0.0180%" height="15" fill="rgb(252,210,38)" fg:x="5494" fg:w="1"/><text x="99.0274%" y="255.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.7774%" y="229" width="0.0180%" height="15" fill="rgb(242,134,21)" fg:x="5494" fg:w="1"/><text x="99.0274%" y="239.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.7774%" y="213" width="0.0180%" height="15" fill="rgb(213,28,48)" fg:x="5494" fg:w="1"/><text x="99.0274%" y="223.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="98.7774%" y="197" width="0.0180%" height="15" fill="rgb(250,196,2)" fg:x="5494" fg:w="1"/><text x="99.0274%" y="207.50"></text></g><g><title>proxddp::WorkspaceBaseTpl&lt;double&gt;::WorkspaceBaseTpl (49 samples, 0.88%)</title><rect x="97.9324%" y="421" width="0.8810%" height="15" fill="rgb(227,5,17)" fg:x="5447" fg:w="49"/><text x="98.1824%" y="431.50"></text></g><g><title>proxddp::TrajOptDataTpl&lt;double&gt;::TrajOptDataTpl (49 samples, 0.88%)</title><rect x="97.9324%" y="405" width="0.8810%" height="15" fill="rgb(221,226,24)" fg:x="5447" fg:w="49"/><text x="98.1824%" y="415.50"></text></g><g><title>proxddp::compat::croc::CrocCostModelWrapperTpl&lt;double&gt;::createData (2 samples, 0.04%)</title><rect x="98.7774%" y="389" width="0.0360%" height="15" fill="rgb(211,5,48)" fg:x="5494" fg:w="2"/><text x="99.0274%" y="399.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::createData (2 samples, 0.04%)</title><rect x="98.7774%" y="373" width="0.0360%" height="15" fill="rgb(219,150,6)" fg:x="5494" fg:w="2"/><text x="99.0274%" y="383.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt; &gt;, crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;*&gt; (2 samples, 0.04%)</title><rect x="98.7774%" y="357" width="0.0360%" height="15" fill="rgb(251,46,16)" fg:x="5494" fg:w="2"/><text x="99.0274%" y="367.50"></text></g><g><title>crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;::IntegratedActionDataEulerTpl&lt;crocoddyl::IntegratedActionModelEulerTpl&gt; (2 samples, 0.04%)</title><rect x="98.7774%" y="341" width="0.0360%" height="15" fill="rgb(220,204,40)" fg:x="5494" fg:w="2"/><text x="99.0274%" y="351.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::createData (2 samples, 0.04%)</title><rect x="98.7774%" y="325" width="0.0360%" height="15" fill="rgb(211,85,2)" fg:x="5494" fg:w="2"/><text x="99.0274%" y="335.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt; &gt;, crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;*&gt; (2 samples, 0.04%)</title><rect x="98.7774%" y="309" width="0.0360%" height="15" fill="rgb(229,17,7)" fg:x="5494" fg:w="2"/><text x="99.0274%" y="319.50"></text></g><g><title>crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;::DifferentialActionDataFreeFwdDynamicsTpl&lt;crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&gt; (2 samples, 0.04%)</title><rect x="98.7774%" y="293" width="0.0360%" height="15" fill="rgb(239,72,28)" fg:x="5494" fg:w="2"/><text x="99.0274%" y="303.50"></text></g><g><title>pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::DataTpl (2 samples, 0.04%)</title><rect x="98.7774%" y="277" width="0.0360%" height="15" fill="rgb(230,47,54)" fg:x="5494" fg:w="2"/><text x="99.0274%" y="287.50"></text></g><g><title>std::vector&lt;pinocchio::MotionTpl&lt;double, 0&gt;, Eigen::aligned_allocator&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="98.7954%" y="261" width="0.0180%" height="15" fill="rgb(214,50,8)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="271.50"></text></g><g><title>Eigen::aligned_allocator&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="98.7954%" y="245" width="0.0180%" height="15" fill="rgb(216,198,43)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="255.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.7954%" y="229" width="0.0180%" height="15" fill="rgb(234,20,35)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="239.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.7954%" y="213" width="0.0180%" height="15" fill="rgb(254,45,19)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="223.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="98.7954%" y="197" width="0.0180%" height="15" fill="rgb(219,14,44)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="207.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="98.7954%" y="181" width="0.0180%" height="15" fill="rgb(217,220,26)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="191.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="98.7954%" y="165" width="0.0180%" height="15" fill="rgb(213,158,28)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="175.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="98.7954%" y="149" width="0.0180%" height="15" fill="rgb(252,51,52)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="159.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="98.7954%" y="133" width="0.0180%" height="15" fill="rgb(246,89,16)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="143.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="98.7954%" y="117" width="0.0180%" height="15" fill="rgb(216,158,49)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="127.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="98.7954%" y="101" width="0.0180%" height="15" fill="rgb(236,107,19)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="111.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.02%)</title><rect x="98.7954%" y="85" width="0.0180%" height="15" fill="rgb(228,185,30)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="95.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="98.7954%" y="69" width="0.0180%" height="15" fill="rgb(246,134,8)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="79.50"></text></g><g><title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="98.7954%" y="53" width="0.0180%" height="15" fill="rgb(214,143,50)" fg:x="5495" fg:w="1"/><text x="99.0454%" y="63.50"></text></g><g><title>proxddp::internal::q_storage&lt;double&gt;::q_storage (2 samples, 0.04%)</title><rect x="98.8134%" y="421" width="0.0360%" height="15" fill="rgb(228,75,8)" fg:x="5496" fg:w="2"/><text x="99.0634%" y="431.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (2 samples, 0.04%)</title><rect x="98.8134%" y="405" width="0.0360%" height="15" fill="rgb(207,175,4)" fg:x="5496" fg:w="2"/><text x="99.0634%" y="415.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="98.8134%" y="389" width="0.0360%" height="15" fill="rgb(205,108,24)" fg:x="5496" fg:w="2"/><text x="99.0634%" y="399.50"></text></g><g><title>_int_malloc (2 samples, 0.04%)</title><rect x="98.8134%" y="373" width="0.0360%" height="15" fill="rgb(244,120,49)" fg:x="5496" fg:w="2"/><text x="99.0634%" y="383.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="98.8314%" y="357" width="0.0180%" height="15" fill="rgb(223,47,38)" fg:x="5497" fg:w="1"/><text x="99.0814%" y="367.50"></text></g><g><title>proxddp::internal::value_storage&lt;double&gt;::value_storage (1 samples, 0.02%)</title><rect x="98.8493%" y="421" width="0.0180%" height="15" fill="rgb(229,179,11)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="431.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="98.8493%" y="405" width="0.0180%" height="15" fill="rgb(231,122,1)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.8493%" y="389" width="0.0180%" height="15" fill="rgb(245,119,9)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.8493%" y="373" width="0.0180%" height="15" fill="rgb(241,163,25)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="383.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="98.8493%" y="357" width="0.0180%" height="15" fill="rgb(217,214,3)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="367.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="98.8493%" y="341" width="0.0180%" height="15" fill="rgb(240,86,28)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="351.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="98.8493%" y="325" width="0.0180%" height="15" fill="rgb(215,47,9)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="335.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="98.8493%" y="309" width="0.0180%" height="15" fill="rgb(252,25,45)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="319.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="98.8493%" y="293" width="0.0180%" height="15" fill="rgb(251,164,9)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="303.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="98.8493%" y="277" width="0.0180%" height="15" fill="rgb(233,194,0)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="287.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="98.8493%" y="261" width="0.0180%" height="15" fill="rgb(249,111,24)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="271.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.02%)</title><rect x="98.8493%" y="245" width="0.0180%" height="15" fill="rgb(250,223,3)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="255.50"></text></g><g><title>mem_cgroup_charge_statistics (1 samples, 0.02%)</title><rect x="98.8493%" y="229" width="0.0180%" height="15" fill="rgb(236,178,37)" fg:x="5498" fg:w="1"/><text x="99.0993%" y="239.50"></text></g><g><title>proxddp::SolverFDDP&lt;double&gt;::setup (55 samples, 0.99%)</title><rect x="97.8964%" y="453" width="0.9889%" height="15" fill="rgb(241,158,50)" fg:x="5445" fg:w="55"/><text x="98.1464%" y="463.50"></text></g><g><title>proxddp::WorkspaceFDDPTpl&lt;double&gt;::WorkspaceFDDPTpl (54 samples, 0.97%)</title><rect x="97.9144%" y="437" width="0.9709%" height="15" fill="rgb(213,121,41)" fg:x="5446" fg:w="54"/><text x="98.1644%" y="447.50"></text></g><g><title>std::vector&lt;Eigen::LLT&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1&gt;, std::allocator&lt;Eigen::LLT&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1&gt; &gt; &gt;::emplace_back&lt;int const&amp;&gt; (1 samples, 0.02%)</title><rect x="98.8673%" y="421" width="0.0180%" height="15" fill="rgb(240,92,3)" fg:x="5499" fg:w="1"/><text x="99.1173%" y="431.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="98.8673%" y="405" width="0.0180%" height="15" fill="rgb(205,123,3)" fg:x="5499" fg:w="1"/><text x="99.1173%" y="415.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.8673%" y="389" width="0.0180%" height="15" fill="rgb(205,97,47)" fg:x="5499" fg:w="1"/><text x="99.1173%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.8673%" y="373" width="0.0180%" height="15" fill="rgb(247,152,14)" fg:x="5499" fg:w="1"/><text x="99.1173%" y="383.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="98.8673%" y="357" width="0.0180%" height="15" fill="rgb(248,195,53)" fg:x="5499" fg:w="1"/><text x="99.1173%" y="367.50"></text></g><g><title>proxddp::ResultsBaseTpl&lt;double&gt;::~ResultsBaseTpl (13 samples, 0.23%)</title><rect x="98.8853%" y="437" width="0.2337%" height="15" fill="rgb(226,201,16)" fg:x="5500" fg:w="13"/><text x="99.1353%" y="447.50"></text></g><g><title>__GI___libc_free (13 samples, 0.23%)</title><rect x="98.8853%" y="421" width="0.2337%" height="15" fill="rgb(205,98,0)" fg:x="5500" fg:w="13"/><text x="99.1353%" y="431.50"></text></g><g><title>_int_free (13 samples, 0.23%)</title><rect x="98.8853%" y="405" width="0.2337%" height="15" fill="rgb(214,191,48)" fg:x="5500" fg:w="13"/><text x="99.1353%" y="415.50"></text></g><g><title>malloc_consolidate (11 samples, 0.20%)</title><rect x="98.9213%" y="389" width="0.1978%" height="15" fill="rgb(237,112,39)" fg:x="5502" fg:w="11"/><text x="99.1713%" y="399.50"></text></g><g><title>unlink_chunk (2 samples, 0.04%)</title><rect x="99.0831%" y="373" width="0.0360%" height="15" fill="rgb(247,203,27)" fg:x="5511" fg:w="2"/><text x="99.3331%" y="383.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="99.1190%" y="421" width="0.0180%" height="15" fill="rgb(235,124,28)" fg:x="5513" fg:w="1"/><text x="99.3690%" y="431.50"></text></g><g><title>arena_for_chunk (1 samples, 0.02%)</title><rect x="99.1190%" y="405" width="0.0180%" height="15" fill="rgb(208,207,46)" fg:x="5513" fg:w="1"/><text x="99.3690%" y="415.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="99.1370%" y="389" width="0.0180%" height="15" fill="rgb(234,176,4)" fg:x="5514" fg:w="1"/><text x="99.3870%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="99.1370%" y="373" width="0.0180%" height="15" fill="rgb(230,133,28)" fg:x="5514" fg:w="1"/><text x="99.3870%" y="383.50"></text></g><g><title>__GI___libc_free (4 samples, 0.07%)</title><rect x="99.1550%" y="357" width="0.0719%" height="15" fill="rgb(211,137,40)" fg:x="5515" fg:w="4"/><text x="99.4050%" y="367.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="99.2808%" y="261" width="0.0180%" height="15" fill="rgb(254,35,13)" fg:x="5522" fg:w="1"/><text x="99.5308%" y="271.50"></text></g><g><title>crocoddyl::CostDataAbstractTpl&lt;double&gt;::~CostDataAbstractTpl (2 samples, 0.04%)</title><rect x="99.2808%" y="277" width="0.0360%" height="15" fill="rgb(225,49,51)" fg:x="5522" fg:w="2"/><text x="99.5308%" y="287.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::ResidualDataAbstractTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::ResidualDataAbstractTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::ResidualDataAbstractTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::ResidualDataAbstractTpl&lt;double&gt; &gt; &gt;::dispose (1 samples, 0.02%)</title><rect x="99.2988%" y="261" width="0.0180%" height="15" fill="rgb(251,10,15)" fg:x="5523" fg:w="1"/><text x="99.5488%" y="271.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="99.2988%" y="245" width="0.0180%" height="15" fill="rgb(228,207,15)" fg:x="5523" fg:w="1"/><text x="99.5488%" y="255.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::CostDataResidualTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::CostDataResidualTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataResidualTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataResidualTpl&lt;double&gt; &gt; &gt;::dispose (3 samples, 0.05%)</title><rect x="99.2808%" y="293" width="0.0539%" height="15" fill="rgb(241,99,19)" fg:x="5522" fg:w="3"/><text x="99.5308%" y="303.50"></text></g><g><title>crocoddyl::CostDataResidualTpl&lt;double&gt;::~CostDataResidualTpl (1 samples, 0.02%)</title><rect x="99.3168%" y="277" width="0.0180%" height="15" fill="rgb(207,104,49)" fg:x="5524" fg:w="1"/><text x="99.5668%" y="287.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="99.3168%" y="261" width="0.0180%" height="15" fill="rgb(234,99,18)" fg:x="5524" fg:w="1"/><text x="99.5668%" y="271.50"></text></g><g><title>boost::detail::sp_as_deleter&lt;crocoddyl::CostDataSumTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataSumTpl&lt;double&gt; &gt; &gt;::destroy (6 samples, 0.11%)</title><rect x="99.2449%" y="325" width="0.1079%" height="15" fill="rgb(213,191,49)" fg:x="5520" fg:w="6"/><text x="99.4949%" y="335.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (6 samples, 0.11%)</title><rect x="99.2449%" y="309" width="0.1079%" height="15" fill="rgb(210,226,19)" fg:x="5520" fg:w="6"/><text x="99.4949%" y="319.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="99.3348%" y="293" width="0.0180%" height="15" fill="rgb(229,97,18)" fg:x="5525" fg:w="1"/><text x="99.5848%" y="303.50"></text></g><g><title>proxddp::TrajOptDataTpl&lt;double&gt;::~TrajOptDataTpl (22 samples, 0.40%)</title><rect x="99.1190%" y="437" width="0.3955%" height="15" fill="rgb(211,167,15)" fg:x="5513" fg:w="22"/><text x="99.3690%" y="447.50"></text></g><g><title>proxddp::StageDataTpl&lt;double&gt;::~StageDataTpl (21 samples, 0.38%)</title><rect x="99.1370%" y="421" width="0.3776%" height="15" fill="rgb(210,169,34)" fg:x="5514" fg:w="21"/><text x="99.3870%" y="431.50"></text></g><g><title>proxddp::compat::croc::CrocCostDataWrapperTpl&lt;double&gt;::~CrocCostDataWrapperTpl (21 samples, 0.38%)</title><rect x="99.1370%" y="405" width="0.3776%" height="15" fill="rgb(241,121,31)" fg:x="5514" fg:w="21"/><text x="99.3870%" y="415.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt; &gt; &gt;::dispose (20 samples, 0.36%)</title><rect x="99.1550%" y="389" width="0.3596%" height="15" fill="rgb(232,40,11)" fg:x="5515" fg:w="20"/><text x="99.4050%" y="399.50"></text></g><g><title>crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;::~IntegratedActionDataEulerTpl (20 samples, 0.36%)</title><rect x="99.1550%" y="373" width="0.3596%" height="15" fill="rgb(205,86,26)" fg:x="5515" fg:w="20"/><text x="99.4050%" y="383.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt; &gt; &gt;::dispose (16 samples, 0.29%)</title><rect x="99.2269%" y="357" width="0.2877%" height="15" fill="rgb(231,126,28)" fg:x="5519" fg:w="16"/><text x="99.4769%" y="367.50"></text></g><g><title>crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;::~DifferentialActionDataFreeFwdDynamicsTpl (16 samples, 0.29%)</title><rect x="99.2269%" y="341" width="0.2877%" height="15" fill="rgb(219,221,18)" fg:x="5519" fg:w="16"/><text x="99.4769%" y="351.50"></text></g><g><title>pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::~DataTpl (9 samples, 0.16%)</title><rect x="99.3528%" y="325" width="0.1618%" height="15" fill="rgb(211,40,0)" fg:x="5526" fg:w="9"/><text x="99.6028%" y="335.50"></text></g><g><title>__GI___libc_free (7 samples, 0.13%)</title><rect x="99.3887%" y="309" width="0.1259%" height="15" fill="rgb(239,85,43)" fg:x="5528" fg:w="7"/><text x="99.6387%" y="319.50"></text></g><g><title>_int_free (3 samples, 0.05%)</title><rect x="99.4606%" y="293" width="0.0539%" height="15" fill="rgb(231,55,21)" fg:x="5532" fg:w="3"/><text x="99.7106%" y="303.50"></text></g><g><title>proxddp::WorkspaceBaseTpl&lt;double&gt;::~WorkspaceBaseTpl (1 samples, 0.02%)</title><rect x="99.5146%" y="437" width="0.0180%" height="15" fill="rgb(225,184,43)" fg:x="5535" fg:w="1"/><text x="99.7646%" y="447.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="99.5146%" y="421" width="0.0180%" height="15" fill="rgb(251,158,41)" fg:x="5535" fg:w="1"/><text x="99.7646%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="99.5146%" y="405" width="0.0180%" height="15" fill="rgb(234,159,37)" fg:x="5535" fg:w="1"/><text x="99.7646%" y="415.50"></text></g><g><title>[libc.so.6] (5,347 samples, 96.13%)</title><rect x="3.4340%" y="581" width="96.1345%" height="15" fill="rgb(216,204,22)" fg:x="191" fg:w="5347"/><text x="3.6840%" y="591.50">[libc.so.6]</text></g><g><title>[libc.so.6] (5,347 samples, 96.13%)</title><rect x="3.4340%" y="565" width="96.1345%" height="15" fill="rgb(214,17,3)" fg:x="191" fg:w="5347"/><text x="3.6840%" y="575.50">[libc.so.6]</text></g><g><title>main (5,346 samples, 96.12%)</title><rect x="3.4520%" y="549" width="96.1165%" height="15" fill="rgb(212,111,17)" fg:x="192" fg:w="5346"/><text x="3.7020%" y="559.50">main</text></g><g><title>benchmark::RunSpecifiedBenchmarks (5,346 samples, 96.12%)</title><rect x="3.4520%" y="533" width="96.1165%" height="15" fill="rgb(221,157,24)" fg:x="192" fg:w="5346"/><text x="3.7020%" y="543.50">benchmark::RunSpecifiedBenchmarks</text></g><g><title>benchmark::internal::RunBenchmark (5,346 samples, 96.12%)</title><rect x="3.4520%" y="517" width="96.1165%" height="15" fill="rgb(252,16,13)" fg:x="192" fg:w="5346"/><text x="3.7020%" y="527.50">benchmark::internal::RunBenchmark</text></g><g><title>benchmark::internal::(anonymous namespace)::RunInThread (5,345 samples, 96.10%)</title><rect x="3.4700%" y="501" width="96.0985%" height="15" fill="rgb(221,62,2)" fg:x="193" fg:w="5345"/><text x="3.7200%" y="511.50">benchmark::internal::(anonymous namespace)::RunInThread</text></g><g><title>benchmark::internal::BenchmarkInstance::Run (5,345 samples, 96.10%)</title><rect x="3.4700%" y="485" width="96.0985%" height="15" fill="rgb(247,87,22)" fg:x="193" fg:w="5345"/><text x="3.7200%" y="495.50">benchmark::internal::BenchmarkInstance::Run</text></g><g><title>BM_prox_fddp (5,345 samples, 96.10%)</title><rect x="3.4700%" y="469" width="96.0985%" height="15" fill="rgb(215,73,9)" fg:x="193" fg:w="5345"/><text x="3.7200%" y="479.50">BM_prox_fddp</text></g><g><title>proxddp::SolverFDDP&lt;double&gt;::~SolverFDDP (38 samples, 0.68%)</title><rect x="98.8853%" y="453" width="0.6832%" height="15" fill="rgb(207,175,33)" fg:x="5500" fg:w="38"/><text x="99.1353%" y="463.50"></text></g><g><title>proxddp::WorkspaceFDDPTpl&lt;double&gt;::~WorkspaceFDDPTpl (2 samples, 0.04%)</title><rect x="99.5325%" y="437" width="0.0360%" height="15" fill="rgb(243,129,54)" fg:x="5536" fg:w="2"/><text x="99.7825%" y="447.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="99.5325%" y="421" width="0.0360%" height="15" fill="rgb(227,119,45)" fg:x="5536" fg:w="2"/><text x="99.7825%" y="431.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="99.5325%" y="405" width="0.0360%" height="15" fill="rgb(205,109,36)" fg:x="5536" fg:w="2"/><text x="99.7825%" y="415.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="99.5505%" y="389" width="0.0180%" height="15" fill="rgb(205,6,39)" fg:x="5537" fg:w="1"/><text x="99.8005%" y="399.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="99.5685%" y="517" width="0.0180%" height="15" fill="rgb(221,32,16)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="527.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="99.5685%" y="501" width="0.0180%" height="15" fill="rgb(228,144,50)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="511.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="99.5685%" y="485" width="0.0180%" height="15" fill="rgb(229,201,53)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="495.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="99.5685%" y="469" width="0.0180%" height="15" fill="rgb(249,153,27)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="479.50"></text></g><g><title>open_path (1 samples, 0.02%)</title><rect x="99.5685%" y="453" width="0.0180%" height="15" fill="rgb(227,106,25)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="463.50"></text></g><g><title>open_verify (1 samples, 0.02%)</title><rect x="99.5685%" y="437" width="0.0180%" height="15" fill="rgb(230,65,29)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="447.50"></text></g><g><title>__GI___read_nocancel (1 samples, 0.02%)</title><rect x="99.5685%" y="421" width="0.0180%" height="15" fill="rgb(221,57,46)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.5685%" y="405" width="0.0180%" height="15" fill="rgb(229,161,17)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="415.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.5685%" y="389" width="0.0180%" height="15" fill="rgb(222,213,11)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="399.50"></text></g><g><title>__x64_sys_read (1 samples, 0.02%)</title><rect x="99.5685%" y="373" width="0.0180%" height="15" fill="rgb(235,35,13)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="383.50"></text></g><g><title>ksys_read (1 samples, 0.02%)</title><rect x="99.5685%" y="357" width="0.0180%" height="15" fill="rgb(233,158,34)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="367.50"></text></g><g><title>vfs_read (1 samples, 0.02%)</title><rect x="99.5685%" y="341" width="0.0180%" height="15" fill="rgb(215,151,48)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="351.50"></text></g><g><title>new_sync_read (1 samples, 0.02%)</title><rect x="99.5685%" y="325" width="0.0180%" height="15" fill="rgb(229,84,14)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="335.50"></text></g><g><title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="99.5685%" y="309" width="0.0180%" height="15" fill="rgb(229,68,14)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="319.50"></text></g><g><title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="99.5685%" y="293" width="0.0180%" height="15" fill="rgb(243,106,26)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="303.50"></text></g><g><title>filemap_read (1 samples, 0.02%)</title><rect x="99.5685%" y="277" width="0.0180%" height="15" fill="rgb(206,45,38)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="287.50"></text></g><g><title>filemap_get_pages (1 samples, 0.02%)</title><rect x="99.5685%" y="261" width="0.0180%" height="15" fill="rgb(226,6,15)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="271.50"></text></g><g><title>filemap_get_read_batch (1 samples, 0.02%)</title><rect x="99.5685%" y="245" width="0.0180%" height="15" fill="rgb(232,22,54)" fg:x="5538" fg:w="1"/><text x="99.8185%" y="255.50"></text></g><g><title>_start (5,349 samples, 96.17%)</title><rect x="3.4340%" y="597" width="96.1704%" height="15" fill="rgb(229,222,32)" fg:x="191" fg:w="5349"/><text x="3.6840%" y="607.50">_start</text></g><g><title>_dl_start (2 samples, 0.04%)</title><rect x="99.5685%" y="581" width="0.0360%" height="15" fill="rgb(228,62,29)" fg:x="5538" fg:w="2"/><text x="99.8185%" y="591.50"></text></g><g><title>_dl_start_final (2 samples, 0.04%)</title><rect x="99.5685%" y="565" width="0.0360%" height="15" fill="rgb(251,103,34)" fg:x="5538" fg:w="2"/><text x="99.8185%" y="575.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.04%)</title><rect x="99.5685%" y="549" width="0.0360%" height="15" fill="rgb(233,12,30)" fg:x="5538" fg:w="2"/><text x="99.8185%" y="559.50"></text></g><g><title>dl_main (2 samples, 0.04%)</title><rect x="99.5685%" y="533" width="0.0360%" height="15" fill="rgb(238,52,0)" fg:x="5538" fg:w="2"/><text x="99.8185%" y="543.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="99.5865%" y="517" width="0.0180%" height="15" fill="rgb(223,98,5)" fg:x="5539" fg:w="1"/><text x="99.8365%" y="527.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.02%)</title><rect x="99.5865%" y="501" width="0.0180%" height="15" fill="rgb(228,75,37)" fg:x="5539" fg:w="1"/><text x="99.8365%" y="511.50"></text></g><g><title>elf_machine_rela (1 samples, 0.02%)</title><rect x="99.5865%" y="485" width="0.0180%" height="15" fill="rgb(205,115,49)" fg:x="5539" fg:w="1"/><text x="99.8365%" y="495.50"></text></g><g><title>resolve_map (1 samples, 0.02%)</title><rect x="99.5865%" y="469" width="0.0180%" height="15" fill="rgb(250,154,43)" fg:x="5539" fg:w="1"/><text x="99.8365%" y="479.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="99.5865%" y="453" width="0.0180%" height="15" fill="rgb(226,43,29)" fg:x="5539" fg:w="1"/><text x="99.8365%" y="463.50"></text></g><g><title>do_lookup_x (1 samples, 0.02%)</title><rect x="99.5865%" y="437" width="0.0180%" height="15" fill="rgb(249,228,39)" fg:x="5539" fg:w="1"/><text x="99.8365%" y="447.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="99.6045%" y="597" width="0.0180%" height="15" fill="rgb(216,79,43)" fg:x="5540" fg:w="1"/><text x="99.8545%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.05%)</title><rect x="99.6224%" y="597" width="0.0539%" height="15" fill="rgb(228,95,12)" fg:x="5541" fg:w="3"/><text x="99.8724%" y="607.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.6764%" y="565" width="0.0180%" height="15" fill="rgb(249,221,15)" fg:x="5544" fg:w="1"/><text x="99.9264%" y="575.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.02%)</title><rect x="99.6764%" y="549" width="0.0180%" height="15" fill="rgb(233,34,13)" fg:x="5544" fg:w="1"/><text x="99.9264%" y="559.50"></text></g><g><title>bprm_execve (1 samples, 0.02%)</title><rect x="99.6764%" y="533" width="0.0180%" height="15" fill="rgb(214,103,39)" fg:x="5544" fg:w="1"/><text x="99.9264%" y="543.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.02%)</title><rect x="99.6764%" y="517" width="0.0180%" height="15" fill="rgb(251,126,39)" fg:x="5544" fg:w="1"/><text x="99.9264%" y="527.50"></text></g><g><title>exec_binprm (1 samples, 0.02%)</title><rect x="99.6764%" y="501" width="0.0180%" height="15" fill="rgb(214,216,36)" fg:x="5544" fg:w="1"/><text x="99.9264%" y="511.50"></text></g><g><title>search_binary_handler (1 samples, 0.02%)</title><rect x="99.6764%" y="485" width="0.0180%" height="15" fill="rgb(220,221,8)" fg:x="5544" fg:w="1"/><text x="99.9264%" y="495.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.6764%" y="469" width="0.0180%" height="15" fill="rgb(240,216,3)" fg:x="5544" fg:w="1"/><text x="99.9264%" y="479.50"></text></g><g><title>setup_arg_pages (1 samples, 0.02%)</title><rect x="99.6764%" y="453" width="0.0180%" height="15" fill="rgb(232,218,17)" fg:x="5544" fg:w="1"/><text x="99.9264%" y="463.50"></text></g><g><title>shift_arg_pages (1 samples, 0.02%)</title><rect x="99.6764%" y="437" width="0.0180%" height="15" fill="rgb(229,163,45)" fg:x="5544" fg:w="1"/><text x="99.9264%" y="447.50"></text></g><g><title>__vma_adjust (1 samples, 0.02%)</title><rect x="99.6764%" y="421" width="0.0180%" height="15" fill="rgb(231,110,42)" fg:x="5544" fg:w="1"/><text x="99.9264%" y="431.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="99.6944%" y="469" width="0.0180%" height="15" fill="rgb(208,170,48)" fg:x="5545" fg:w="1"/><text x="99.9444%" y="479.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.02%)</title><rect x="99.6944%" y="453" width="0.0180%" height="15" fill="rgb(239,116,25)" fg:x="5545" fg:w="1"/><text x="99.9444%" y="463.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="99.6944%" y="437" width="0.0180%" height="15" fill="rgb(219,200,50)" fg:x="5545" fg:w="1"/><text x="99.9444%" y="447.50"></text></g><g><title>release_pages (1 samples, 0.02%)</title><rect x="99.6944%" y="421" width="0.0180%" height="15" fill="rgb(245,200,0)" fg:x="5545" fg:w="1"/><text x="99.9444%" y="431.50"></text></g><g><title>free_unref_page_list (1 samples, 0.02%)</title><rect x="99.6944%" y="405" width="0.0180%" height="15" fill="rgb(245,119,33)" fg:x="5545" fg:w="1"/><text x="99.9444%" y="415.50"></text></g><g><title>free_unref_page_commit (1 samples, 0.02%)</title><rect x="99.6944%" y="389" width="0.0180%" height="15" fill="rgb(231,125,12)" fg:x="5545" fg:w="1"/><text x="99.9444%" y="399.50"></text></g><g><title>free_pcppages_bulk (1 samples, 0.02%)</title><rect x="99.6944%" y="373" width="0.0180%" height="15" fill="rgb(216,96,41)" fg:x="5545" fg:w="1"/><text x="99.9444%" y="383.50"></text></g><g><title>__free_one_page (1 samples, 0.02%)</title><rect x="99.6944%" y="357" width="0.0180%" height="15" fill="rgb(248,43,45)" fg:x="5545" fg:w="1"/><text x="99.9444%" y="367.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="99.7123%" y="405" width="0.0180%" height="15" fill="rgb(217,222,7)" fg:x="5546" fg:w="1"/><text x="99.9623%" y="415.50"></text></g><g><title>page_remove_rmap (1 samples, 0.02%)</title><rect x="99.7843%" y="389" width="0.0180%" height="15" fill="rgb(233,28,6)" fg:x="5550" fg:w="1"/><text x="100.0343%" y="399.50"></text></g><g><title>lock_page_memcg (1 samples, 0.02%)</title><rect x="99.7843%" y="373" width="0.0180%" height="15" fill="rgb(231,218,15)" fg:x="5550" fg:w="1"/><text x="100.0343%" y="383.50"></text></g><g><title>folio_memcg_lock.part.0 (1 samples, 0.02%)</title><rect x="99.7843%" y="357" width="0.0180%" height="15" fill="rgb(226,171,48)" fg:x="5550" fg:w="1"/><text x="100.0343%" y="367.50"></text></g><g><title>free_swap_cache (1 samples, 0.02%)</title><rect x="99.8022%" y="341" width="0.0180%" height="15" fill="rgb(235,201,9)" fg:x="5551" fg:w="1"/><text x="100.0522%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (10 samples, 0.18%)</title><rect x="99.6764%" y="597" width="0.1798%" height="15" fill="rgb(217,80,15)" fg:x="5544" fg:w="10"/><text x="99.9264%" y="607.50"></text></g><g><title>do_syscall_64 (10 samples, 0.18%)</title><rect x="99.6764%" y="581" width="0.1798%" height="15" fill="rgb(219,152,8)" fg:x="5544" fg:w="10"/><text x="99.9264%" y="591.50"></text></g><g><title>__x64_sys_exit_group (9 samples, 0.16%)</title><rect x="99.6944%" y="565" width="0.1618%" height="15" fill="rgb(243,107,38)" fg:x="5545" fg:w="9"/><text x="99.9444%" y="575.50"></text></g><g><title>do_group_exit (9 samples, 0.16%)</title><rect x="99.6944%" y="549" width="0.1618%" height="15" fill="rgb(231,17,5)" fg:x="5545" fg:w="9"/><text x="99.9444%" y="559.50"></text></g><g><title>do_exit (9 samples, 0.16%)</title><rect x="99.6944%" y="533" width="0.1618%" height="15" fill="rgb(209,25,54)" fg:x="5545" fg:w="9"/><text x="99.9444%" y="543.50"></text></g><g><title>exit_mm (9 samples, 0.16%)</title><rect x="99.6944%" y="517" width="0.1618%" height="15" fill="rgb(219,0,2)" fg:x="5545" fg:w="9"/><text x="99.9444%" y="527.50"></text></g><g><title>mmput (9 samples, 0.16%)</title><rect x="99.6944%" y="501" width="0.1618%" height="15" fill="rgb(246,9,5)" fg:x="5545" fg:w="9"/><text x="99.9444%" y="511.50"></text></g><g><title>exit_mmap (9 samples, 0.16%)</title><rect x="99.6944%" y="485" width="0.1618%" height="15" fill="rgb(226,159,4)" fg:x="5545" fg:w="9"/><text x="99.9444%" y="495.50"></text></g><g><title>unmap_vmas (8 samples, 0.14%)</title><rect x="99.7123%" y="469" width="0.1438%" height="15" fill="rgb(219,175,34)" fg:x="5546" fg:w="8"/><text x="99.9623%" y="479.50"></text></g><g><title>unmap_single_vma (8 samples, 0.14%)</title><rect x="99.7123%" y="453" width="0.1438%" height="15" fill="rgb(236,10,46)" fg:x="5546" fg:w="8"/><text x="99.9623%" y="463.50"></text></g><g><title>unmap_page_range (8 samples, 0.14%)</title><rect x="99.7123%" y="437" width="0.1438%" height="15" fill="rgb(240,211,16)" fg:x="5546" fg:w="8"/><text x="99.9623%" y="447.50"></text></g><g><title>zap_pmd_range.isra.0 (8 samples, 0.14%)</title><rect x="99.7123%" y="421" width="0.1438%" height="15" fill="rgb(205,3,43)" fg:x="5546" fg:w="8"/><text x="99.9623%" y="431.50"></text></g><g><title>zap_pte_range (7 samples, 0.13%)</title><rect x="99.7303%" y="405" width="0.1259%" height="15" fill="rgb(245,7,22)" fg:x="5547" fg:w="7"/><text x="99.9803%" y="415.50"></text></g><g><title>tlb_flush_mmu (3 samples, 0.05%)</title><rect x="99.8022%" y="389" width="0.0539%" height="15" fill="rgb(239,132,32)" fg:x="5551" fg:w="3"/><text x="100.0522%" y="399.50"></text></g><g><title>tlb_batch_pages_flush (3 samples, 0.05%)</title><rect x="99.8022%" y="373" width="0.0539%" height="15" fill="rgb(228,202,34)" fg:x="5551" fg:w="3"/><text x="100.0522%" y="383.50"></text></g><g><title>free_pages_and_swap_cache (3 samples, 0.05%)</title><rect x="99.8022%" y="357" width="0.0539%" height="15" fill="rgb(254,200,22)" fg:x="5551" fg:w="3"/><text x="100.0522%" y="367.50"></text></g><g><title>release_pages (2 samples, 0.04%)</title><rect x="99.8202%" y="341" width="0.0360%" height="15" fill="rgb(219,10,39)" fg:x="5552" fg:w="2"/><text x="100.0702%" y="351.50"></text></g><g><title>free_unref_page_list (2 samples, 0.04%)</title><rect x="99.8202%" y="325" width="0.0360%" height="15" fill="rgb(226,210,39)" fg:x="5552" fg:w="2"/><text x="100.0702%" y="335.50"></text></g><g><title>free_unref_page_commit (2 samples, 0.04%)</title><rect x="99.8202%" y="309" width="0.0360%" height="15" fill="rgb(208,219,16)" fg:x="5552" fg:w="2"/><text x="100.0702%" y="319.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.04%)</title><rect x="99.8202%" y="293" width="0.0360%" height="15" fill="rgb(216,158,51)" fg:x="5552" fg:w="2"/><text x="100.0702%" y="303.50"></text></g><g><title>__free_one_page (2 samples, 0.04%)</title><rect x="99.8202%" y="277" width="0.0360%" height="15" fill="rgb(233,14,44)" fg:x="5552" fg:w="2"/><text x="100.0702%" y="287.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="99.8562%" y="597" width="0.0180%" height="15" fill="rgb(237,97,39)" fg:x="5554" fg:w="1"/><text x="100.1062%" y="607.50"></text></g><g><title>example-croc-ta (5,557 samples, 99.91%)</title><rect x="0.0000%" y="613" width="99.9101%" height="15" fill="rgb(218,198,43)" fg:x="0" fg:w="5557"/><text x="0.2500%" y="623.50">example-croc-ta</text></g><g><title>proxddp::SolverFDDP&lt;double&gt;::forwardPass (2 samples, 0.04%)</title><rect x="99.8741%" y="597" width="0.0360%" height="15" fill="rgb(231,104,20)" fg:x="5555" fg:w="2"/><text x="100.1241%" y="607.50"></text></g><g><title>all (5,562 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(254,36,13)" fg:x="0" fg:w="5562"/><text x="0.2500%" y="639.50"></text></g><g><title>perf-exec (5 samples, 0.09%)</title><rect x="99.9101%" y="613" width="0.0899%" height="15" fill="rgb(248,14,50)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.09%)</title><rect x="99.9101%" y="597" width="0.0899%" height="15" fill="rgb(217,107,29)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="607.50"></text></g><g><title>do_syscall_64 (5 samples, 0.09%)</title><rect x="99.9101%" y="581" width="0.0899%" height="15" fill="rgb(251,169,33)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="591.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.09%)</title><rect x="99.9101%" y="565" width="0.0899%" height="15" fill="rgb(217,108,32)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="575.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.09%)</title><rect x="99.9101%" y="549" width="0.0899%" height="15" fill="rgb(219,66,42)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="559.50"></text></g><g><title>bprm_execve (5 samples, 0.09%)</title><rect x="99.9101%" y="533" width="0.0899%" height="15" fill="rgb(206,180,7)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="543.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.09%)</title><rect x="99.9101%" y="517" width="0.0899%" height="15" fill="rgb(208,226,31)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="527.50"></text></g><g><title>exec_binprm (5 samples, 0.09%)</title><rect x="99.9101%" y="501" width="0.0899%" height="15" fill="rgb(218,26,49)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="511.50"></text></g><g><title>search_binary_handler (5 samples, 0.09%)</title><rect x="99.9101%" y="485" width="0.0899%" height="15" fill="rgb(233,197,48)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="495.50"></text></g><g><title>load_elf_binary (5 samples, 0.09%)</title><rect x="99.9101%" y="469" width="0.0899%" height="15" fill="rgb(252,181,51)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="479.50"></text></g><g><title>begin_new_exec (5 samples, 0.09%)</title><rect x="99.9101%" y="453" width="0.0899%" height="15" fill="rgb(253,90,19)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="463.50"></text></g><g><title>perf_event_exec (5 samples, 0.09%)</title><rect x="99.9101%" y="437" width="0.0899%" height="15" fill="rgb(215,171,30)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="447.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.09%)</title><rect x="99.9101%" y="421" width="0.0899%" height="15" fill="rgb(214,222,9)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="431.50"></text></g><g><title>ctx_resched (5 samples, 0.09%)</title><rect x="99.9101%" y="405" width="0.0899%" height="15" fill="rgb(223,3,22)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="415.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.09%)</title><rect x="99.9101%" y="389" width="0.0899%" height="15" fill="rgb(225,196,46)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="399.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.09%)</title><rect x="99.9101%" y="373" width="0.0899%" height="15" fill="rgb(209,110,37)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="383.50"></text></g><g><title>native_write_msr (5 samples, 0.09%)</title><rect x="99.9101%" y="357" width="0.0899%" height="15" fill="rgb(249,89,12)" fg:x="5557" fg:w="5"/><text x="100.1601%" y="367.50"></text></g></svg></svg>
