<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="629.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="629.00"> </text><svg id="frames" x="10" width="1180" total_samples="4322"><g><title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Product&lt;Eigen::DiagonalWrapper&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1&gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (1 samples, 0.02%)</title><rect x="0.0000%" y="549" width="0.0231%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;double, double&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (2 samples, 0.05%)</title><rect x="0.0231%" y="549" width="0.0463%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.2731%" y="559.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (1 samples, 0.02%)</title><rect x="0.0694%" y="549" width="0.0231%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="0.3194%" y="559.50"></text></g><g><title>Eigen::internal::evaluateProductBlockingSizesHeuristic&lt;double, double, 1, long&gt; (3 samples, 0.07%)</title><rect x="0.0925%" y="549" width="0.0694%" height="15" fill="rgb(248,212,6)" fg:x="4" fg:w="3"/><text x="0.3425%" y="559.50"></text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="0.1620%" y="549" width="0.0231%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="1"/><text x="0.4120%" y="559.50"></text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 0, false, double, 1, false, 0&gt;::run (1 samples, 0.02%)</title><rect x="0.1851%" y="549" width="0.0231%" height="15" fill="rgb(232,128,0)" fg:x="8" fg:w="1"/><text x="0.4351%" y="559.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (1 samples, 0.02%)</title><rect x="0.2082%" y="549" width="0.0231%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="1"/><text x="0.4582%" y="559.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (2 samples, 0.05%)</title><rect x="0.2314%" y="549" width="0.0463%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="2"/><text x="0.4814%" y="559.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="0.2776%" y="549" width="0.0231%" height="15" fill="rgb(218,30,26)" fg:x="12" fg:w="1"/><text x="0.5276%" y="559.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="0.3008%" y="549" width="0.0231%" height="15" fill="rgb(220,122,19)" fg:x="13" fg:w="1"/><text x="0.5508%" y="559.50"></text></g><g><title>Eigen::internal::triangular_solver_selector&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 1, 1, 0, -1&gt;::run (1 samples, 0.02%)</title><rect x="0.3239%" y="549" width="0.0231%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="1"/><text x="0.5739%" y="559.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_13IntegrateStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (1 samples, 0.02%)</title><rect x="0.3471%" y="549" width="0.0231%" height="15" fill="rgb(240,193,28)" fg:x="15" fg:w="1"/><text x="0.5971%" y="559.50"></text></g><g><title>__GI___libc_free (2 samples, 0.05%)</title><rect x="0.3702%" y="549" width="0.0463%" height="15" fill="rgb(216,20,37)" fg:x="16" fg:w="2"/><text x="0.6202%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.4165%" y="549" width="0.0231%" height="15" fill="rgb(206,188,39)" fg:x="18" fg:w="1"/><text x="0.6665%" y="559.50"></text></g><g><title>crocoddyl::ActivationModelQuadTpl&lt;double&gt;::calc (2 samples, 0.05%)</title><rect x="0.4396%" y="549" width="0.0463%" height="15" fill="rgb(217,207,13)" fg:x="19" fg:w="2"/><text x="0.6896%" y="559.50"></text></g><g><title>crocoddyl::ActivationModelQuadTpl&lt;double&gt;::calcDiff (2 samples, 0.05%)</title><rect x="0.4859%" y="549" width="0.0463%" height="15" fill="rgb(231,73,38)" fg:x="21" fg:w="2"/><text x="0.7359%" y="559.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::multiplyByJacobian (1 samples, 0.02%)</title><rect x="0.5322%" y="549" width="0.0231%" height="15" fill="rgb(225,20,46)" fg:x="23" fg:w="1"/><text x="0.7822%" y="559.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calc (2 samples, 0.05%)</title><rect x="0.5553%" y="549" width="0.0463%" height="15" fill="rgb(210,31,41)" fg:x="24" fg:w="2"/><text x="0.8053%" y="559.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calcDiff (3 samples, 0.07%)</title><rect x="0.6016%" y="549" width="0.0694%" height="15" fill="rgb(221,200,47)" fg:x="26" fg:w="3"/><text x="0.8516%" y="559.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calc (2 samples, 0.05%)</title><rect x="0.6710%" y="549" width="0.0463%" height="15" fill="rgb(226,26,5)" fg:x="29" fg:w="2"/><text x="0.9210%" y="559.50"></text></g><g><title>crocoddyl::SolverFDDP::forwardPass (1 samples, 0.02%)</title><rect x="0.7173%" y="549" width="0.0231%" height="15" fill="rgb(249,33,26)" fg:x="31" fg:w="1"/><text x="0.9673%" y="559.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::JintegrateTransport (1 samples, 0.02%)</title><rect x="0.7404%" y="549" width="0.0231%" height="15" fill="rgb(235,183,28)" fg:x="32" fg:w="1"/><text x="0.9904%" y="559.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="0.7635%" y="549" width="0.0231%" height="15" fill="rgb(221,5,38)" fg:x="33" fg:w="1"/><text x="1.0135%" y="559.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="0.7867%" y="549" width="0.0231%" height="15" fill="rgb(247,18,42)" fg:x="34" fg:w="1"/><text x="1.0367%" y="559.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (1 samples, 0.02%)</title><rect x="0.8098%" y="549" width="0.0231%" height="15" fill="rgb(241,131,45)" fg:x="35" fg:w="1"/><text x="1.0598%" y="559.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (2 samples, 0.05%)</title><rect x="0.8329%" y="549" width="0.0463%" height="15" fill="rgb(249,31,29)" fg:x="36" fg:w="2"/><text x="1.0829%" y="559.50"></text></g><g><title>pinocchio::Jlog6_impl&lt;double&gt;::run&lt;double, 0, Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (1 samples, 0.02%)</title><rect x="0.8792%" y="549" width="0.0231%" height="15" fill="rgb(225,111,53)" fg:x="38" fg:w="1"/><text x="1.1292%" y="559.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="0.9024%" y="549" width="0.0231%" height="15" fill="rgb(238,160,17)" fg:x="39" fg:w="1"/><text x="1.1524%" y="559.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (2 samples, 0.05%)</title><rect x="0.9255%" y="549" width="0.0463%" height="15" fill="rgb(214,148,48)" fg:x="40" fg:w="2"/><text x="1.1755%" y="559.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="0.9718%" y="549" width="0.0231%" height="15" fill="rgb(232,36,49)" fg:x="42" fg:w="1"/><text x="1.2218%" y="559.50"></text></g><g><title>pinocchio::cholesky::internal::Miunit&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt; &gt; (1 samples, 0.02%)</title><rect x="0.9949%" y="549" width="0.0231%" height="15" fill="rgb(209,103,24)" fg:x="43" fg:w="1"/><text x="1.2449%" y="559.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="1.0180%" y="549" width="0.0231%" height="15" fill="rgb(229,88,8)" fg:x="44" fg:w="1"/><text x="1.2680%" y="559.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;&gt; &gt;::operator (1 samples, 0.02%)</title><rect x="1.0412%" y="549" width="0.0231%" height="15" fill="rgb(213,181,19)" fg:x="45" fg:w="1"/><text x="1.2912%" y="559.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (1 samples, 0.02%)</title><rect x="1.0643%" y="549" width="0.0231%" height="15" fill="rgb(254,191,54)" fg:x="46" fg:w="1"/><text x="1.3143%" y="559.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="1.0875%" y="549" width="0.0231%" height="15" fill="rgb(241,83,37)" fg:x="47" fg:w="1"/><text x="1.3375%" y="559.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (1 samples, 0.02%)</title><rect x="1.1106%" y="549" width="0.0231%" height="15" fill="rgb(233,36,39)" fg:x="48" fg:w="1"/><text x="1.3606%" y="559.50"></text></g><g><title>pinocchio::impl::computeRNEADerivatives&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1.1337%" y="549" width="0.0231%" height="15" fill="rgb(226,3,54)" fg:x="49" fg:w="1"/><text x="1.3837%" y="559.50"></text></g><g><title>pinocchio::integrate&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="1.1569%" y="549" width="0.0231%" height="15" fill="rgb(245,192,40)" fg:x="50" fg:w="1"/><text x="1.4069%" y="559.50"></text></g><g><title>[[heap]] (52 samples, 1.20%)</title><rect x="0.0000%" y="565" width="1.2031%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="52"/><text x="0.2500%" y="575.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="1.1800%" y="549" width="0.0231%" height="15" fill="rgb(232,182,51)" fg:x="51" fg:w="1"/><text x="1.4300%" y="559.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (2 samples, 0.05%)</title><rect x="1.2031%" y="549" width="0.0463%" height="15" fill="rgb(231,60,39)" fg:x="52" fg:w="2"/><text x="1.4531%" y="559.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 2, 0, false, false&gt;::operator (1 samples, 0.02%)</title><rect x="1.2494%" y="549" width="0.0231%" height="15" fill="rgb(208,69,12)" fg:x="54" fg:w="1"/><text x="1.4994%" y="559.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (1 samples, 0.02%)</title><rect x="1.2726%" y="549" width="0.0231%" height="15" fill="rgb(235,93,37)" fg:x="55" fg:w="1"/><text x="1.5226%" y="559.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (2 samples, 0.05%)</title><rect x="1.2957%" y="549" width="0.0463%" height="15" fill="rgb(213,116,39)" fg:x="56" fg:w="2"/><text x="1.5457%" y="559.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 1, false, true&gt;::operator (1 samples, 0.02%)</title><rect x="1.3420%" y="549" width="0.0231%" height="15" fill="rgb(222,207,29)" fg:x="58" fg:w="1"/><text x="1.5920%" y="559.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (2 samples, 0.05%)</title><rect x="1.3651%" y="549" width="0.0463%" height="15" fill="rgb(206,96,30)" fg:x="59" fg:w="2"/><text x="1.6151%" y="559.50"></text></g><g><title>TiXmlBase::ReadName (2 samples, 0.05%)</title><rect x="1.4114%" y="549" width="0.0463%" height="15" fill="rgb(218,138,4)" fg:x="61" fg:w="2"/><text x="1.6614%" y="559.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_13IntegrateStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (2 samples, 0.05%)</title><rect x="1.4577%" y="549" width="0.0463%" height="15" fill="rgb(250,191,14)" fg:x="63" fg:w="2"/><text x="1.7077%" y="559.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_15dDifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_INS1I_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS1F_11OuterStrideILin1EEEEELin1ELin1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S21_RS1U_RKNS1_16ArgumentPositionEEEEvEEEENT_11result_typeERS28_ (1 samples, 0.02%)</title><rect x="1.5039%" y="549" width="0.0231%" height="15" fill="rgb(239,60,40)" fg:x="65" fg:w="1"/><text x="1.7539%" y="559.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="1.5271%" y="549" width="0.0231%" height="15" fill="rgb(206,27,48)" fg:x="66" fg:w="1"/><text x="1.7771%" y="559.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="1.5502%" y="549" width="0.0231%" height="15" fill="rgb(225,35,8)" fg:x="67" fg:w="1"/><text x="1.8002%" y="559.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::calc (3 samples, 0.07%)</title><rect x="1.5733%" y="549" width="0.0694%" height="15" fill="rgb(250,213,24)" fg:x="68" fg:w="3"/><text x="1.8233%" y="559.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calcDiff (3 samples, 0.07%)</title><rect x="1.6428%" y="549" width="0.0694%" height="15" fill="rgb(247,123,22)" fg:x="71" fg:w="3"/><text x="1.8928%" y="559.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="1.7122%" y="549" width="0.0231%" height="15" fill="rgb(231,138,38)" fg:x="74" fg:w="1"/><text x="1.9622%" y="559.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1.7353%" y="549" width="0.0231%" height="15" fill="rgb(231,145,46)" fg:x="75" fg:w="1"/><text x="1.9853%" y="559.50"></text></g><g><title>pinocchio::cholesky::internal::Miunit&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt; &gt; (4 samples, 0.09%)</title><rect x="1.7584%" y="549" width="0.0925%" height="15" fill="rgb(251,118,11)" fg:x="76" fg:w="4"/><text x="2.0084%" y="559.50"></text></g><g><title>pinocchio::dIntegrate&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="1.8510%" y="549" width="0.0231%" height="15" fill="rgb(217,147,25)" fg:x="80" fg:w="1"/><text x="2.1010%" y="559.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="1.8741%" y="549" width="0.0231%" height="15" fill="rgb(247,81,37)" fg:x="81" fg:w="1"/><text x="2.1241%" y="559.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (2 samples, 0.05%)</title><rect x="1.8973%" y="549" width="0.0463%" height="15" fill="rgb(209,12,38)" fg:x="82" fg:w="2"/><text x="2.1473%" y="559.50"></text></g><g><title>pinocchio::impl::computeRNEADerivatives&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="1.9435%" y="549" width="0.0231%" height="15" fill="rgb(227,1,9)" fg:x="84" fg:w="1"/><text x="2.1935%" y="559.50"></text></g><g><title>pinocchio::integrate&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="1.9667%" y="549" width="0.0231%" height="15" fill="rgb(248,47,43)" fg:x="85" fg:w="1"/><text x="2.2167%" y="559.50"></text></g><g><title>[[stack]] (35 samples, 0.81%)</title><rect x="1.2031%" y="565" width="0.8098%" height="15" fill="rgb(221,10,30)" fg:x="52" fg:w="35"/><text x="1.4531%" y="575.50"></text></g><g><title>std::string::_Rep::_M_clone (1 samples, 0.02%)</title><rect x="1.9898%" y="549" width="0.0231%" height="15" fill="rgb(210,229,1)" fg:x="86" fg:w="1"/><text x="2.2398%" y="559.50"></text></g><g><title>Eigen::LLT&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1&gt;::compute&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="2.0130%" y="549" width="0.0231%" height="15" fill="rgb(222,148,37)" fg:x="87" fg:w="1"/><text x="2.2630%" y="559.50"></text></g><g><title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Product&lt;Eigen::DiagonalWrapper&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1&gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (1 samples, 0.02%)</title><rect x="2.0361%" y="549" width="0.0231%" height="15" fill="rgb(234,67,33)" fg:x="88" fg:w="1"/><text x="2.2861%" y="559.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Product&lt;Eigen::DiagonalWrapper&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, 1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (1 samples, 0.02%)</title><rect x="2.0592%" y="549" width="0.0231%" height="15" fill="rgb(247,98,35)" fg:x="89" fg:w="1"/><text x="2.3092%" y="559.50"></text></g><g><title>Eigen::internal::evaluateProductBlockingSizesHeuristic&lt;double, double, 1, long&gt; (1 samples, 0.02%)</title><rect x="2.0824%" y="549" width="0.0231%" height="15" fill="rgb(247,138,52)" fg:x="90" fg:w="1"/><text x="2.3324%" y="559.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (2 samples, 0.05%)</title><rect x="2.1055%" y="549" width="0.0463%" height="15" fill="rgb(213,79,30)" fg:x="91" fg:w="2"/><text x="2.3555%" y="559.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 2, 0, false, false&gt;::operator (1 samples, 0.02%)</title><rect x="2.1518%" y="549" width="0.0231%" height="15" fill="rgb(246,177,23)" fg:x="93" fg:w="1"/><text x="2.4018%" y="559.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (2 samples, 0.05%)</title><rect x="2.1749%" y="549" width="0.0463%" height="15" fill="rgb(230,62,27)" fg:x="94" fg:w="2"/><text x="2.4249%" y="559.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, true&gt;::operator (1 samples, 0.02%)</title><rect x="2.2212%" y="549" width="0.0231%" height="15" fill="rgb(216,154,8)" fg:x="96" fg:w="1"/><text x="2.4712%" y="559.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 1, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, false, 0&gt;::run (2 samples, 0.05%)</title><rect x="2.2443%" y="549" width="0.0463%" height="15" fill="rgb(244,35,45)" fg:x="97" fg:w="2"/><text x="2.4943%" y="559.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="2.2906%" y="549" width="0.0231%" height="15" fill="rgb(251,115,12)" fg:x="99" fg:w="1"/><text x="2.5406%" y="559.50"></text></g><g><title>Eigen::internal::triangular_solver_selector&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const, Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 1, 2, 0, -1&gt;::run (1 samples, 0.02%)</title><rect x="2.3137%" y="549" width="0.0231%" height="15" fill="rgb(240,54,50)" fg:x="100" fg:w="1"/><text x="2.5637%" y="559.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14DifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (4 samples, 0.09%)</title><rect x="2.3369%" y="549" width="0.0925%" height="15" fill="rgb(233,84,52)" fg:x="101" fg:w="4"/><text x="2.5869%" y="559.50"></text></g><g><title>__GI___libc_free (3 samples, 0.07%)</title><rect x="2.4294%" y="549" width="0.0694%" height="15" fill="rgb(207,117,47)" fg:x="105" fg:w="3"/><text x="2.6794%" y="559.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.05%)</title><rect x="2.4988%" y="549" width="0.0463%" height="15" fill="rgb(249,43,39)" fg:x="108" fg:w="2"/><text x="2.7488%" y="559.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="2.5220%" y="533" width="0.0231%" height="15" fill="rgb(209,38,44)" fg:x="109" fg:w="1"/><text x="2.7720%" y="543.50"></text></g><g><title>__sincos_fma (1 samples, 0.02%)</title><rect x="2.5451%" y="549" width="0.0231%" height="15" fill="rgb(236,212,23)" fg:x="110" fg:w="1"/><text x="2.7951%" y="559.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointDataRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointDataHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointDataCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;boost::detail::variant::get_visitor&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="2.5683%" y="549" width="0.0231%" height="15" fill="rgb(242,79,21)" fg:x="111" fg:w="1"/><text x="2.8183%" y="559.50"></text></g><g><title>crocoddyl::ActivationModelQuadTpl&lt;double&gt;::calcDiff (1 samples, 0.02%)</title><rect x="2.5914%" y="549" width="0.0231%" height="15" fill="rgb(211,96,35)" fg:x="112" fg:w="1"/><text x="2.8414%" y="559.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calcDiff (13 samples, 0.30%)</title><rect x="2.6145%" y="549" width="0.3008%" height="15" fill="rgb(253,215,40)" fg:x="113" fg:w="13"/><text x="2.8645%" y="559.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calc (3 samples, 0.07%)</title><rect x="2.9153%" y="549" width="0.0694%" height="15" fill="rgb(211,81,21)" fg:x="126" fg:w="3"/><text x="3.1653%" y="559.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::calcDiff (1 samples, 0.02%)</title><rect x="2.9847%" y="549" width="0.0231%" height="15" fill="rgb(208,190,38)" fg:x="129" fg:w="1"/><text x="3.2347%" y="559.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="3.0079%" y="549" width="0.0231%" height="15" fill="rgb(235,213,38)" fg:x="130" fg:w="1"/><text x="3.2579%" y="559.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::calcDiff (1 samples, 0.02%)</title><rect x="3.0310%" y="549" width="0.0231%" height="15" fill="rgb(237,122,38)" fg:x="131" fg:w="1"/><text x="3.2810%" y="559.50"></text></g><g><title>crocoddyl::ResidualModelStateTpl&lt;double&gt;::calcDiff (1 samples, 0.02%)</title><rect x="3.0541%" y="549" width="0.0231%" height="15" fill="rgb(244,218,35)" fg:x="132" fg:w="1"/><text x="3.3041%" y="559.50"></text></g><g><title>crocoddyl::SolverDDP::computeGains (1 samples, 0.02%)</title><rect x="3.0773%" y="549" width="0.0231%" height="15" fill="rgb(240,68,47)" fg:x="133" fg:w="1"/><text x="3.3273%" y="559.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::integrate (1 samples, 0.02%)</title><rect x="3.1004%" y="549" width="0.0231%" height="15" fill="rgb(210,16,53)" fg:x="134" fg:w="1"/><text x="3.3504%" y="559.50"></text></g><g><title>crocoddyl::Stopwatch::profiler_status (1 samples, 0.02%)</title><rect x="3.1236%" y="549" width="0.0231%" height="15" fill="rgb(235,124,12)" fg:x="135" fg:w="1"/><text x="3.3736%" y="559.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="3.1467%" y="549" width="0.0231%" height="15" fill="rgb(224,169,11)" fg:x="136" fg:w="1"/><text x="3.3967%" y="559.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="3.1698%" y="549" width="0.0231%" height="15" fill="rgb(250,166,2)" fg:x="137" fg:w="1"/><text x="3.4198%" y="559.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (2 samples, 0.05%)</title><rect x="3.1930%" y="549" width="0.0463%" height="15" fill="rgb(242,216,29)" fg:x="138" fg:w="2"/><text x="3.4430%" y="559.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="3.2392%" y="549" width="0.0231%" height="15" fill="rgb(230,116,27)" fg:x="140" fg:w="1"/><text x="3.4892%" y="559.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (1 samples, 0.02%)</title><rect x="3.2624%" y="549" width="0.0231%" height="15" fill="rgb(228,99,48)" fg:x="141" fg:w="1"/><text x="3.5124%" y="559.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (1 samples, 0.02%)</title><rect x="3.2855%" y="549" width="0.0231%" height="15" fill="rgb(253,11,6)" fg:x="142" fg:w="1"/><text x="3.5355%" y="559.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="3.3087%" y="549" width="0.0231%" height="15" fill="rgb(247,143,39)" fg:x="143" fg:w="1"/><text x="3.5587%" y="559.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="3.3318%" y="549" width="0.0231%" height="15" fill="rgb(236,97,10)" fg:x="144" fg:w="1"/><text x="3.5818%" y="559.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; const, 6, 1, true&gt; const&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="3.3549%" y="549" width="0.0231%" height="15" fill="rgb(233,208,19)" fg:x="145" fg:w="1"/><text x="3.6049%" y="559.50"></text></g><g><title>pinocchio::dDifference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="3.3781%" y="549" width="0.0231%" height="15" fill="rgb(216,164,2)" fg:x="146" fg:w="1"/><text x="3.6281%" y="559.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::KineticEnergyAlgoForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (3 samples, 0.07%)</title><rect x="3.4012%" y="549" width="0.0694%" height="15" fill="rgb(220,129,5)" fg:x="147" fg:w="3"/><text x="3.6512%" y="559.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="3.4706%" y="549" width="0.0231%" height="15" fill="rgb(242,17,10)" fg:x="150" fg:w="1"/><text x="3.7206%" y="559.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (2 samples, 0.05%)</title><rect x="3.4938%" y="549" width="0.0463%" height="15" fill="rgb(242,107,0)" fg:x="151" fg:w="2"/><text x="3.7438%" y="559.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (3 samples, 0.07%)</title><rect x="3.5400%" y="549" width="0.0694%" height="15" fill="rgb(251,28,31)" fg:x="153" fg:w="3"/><text x="3.7900%" y="559.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="3.6094%" y="549" width="0.0231%" height="15" fill="rgb(233,223,10)" fg:x="156" fg:w="1"/><text x="3.8594%" y="559.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="3.6326%" y="549" width="0.0231%" height="15" fill="rgb(215,21,27)" fg:x="157" fg:w="1"/><text x="3.8826%" y="559.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (1 samples, 0.02%)</title><rect x="3.6557%" y="549" width="0.0231%" height="15" fill="rgb(232,23,21)" fg:x="158" fg:w="1"/><text x="3.9057%" y="559.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="3.6789%" y="549" width="0.0231%" height="15" fill="rgb(244,5,23)" fg:x="159" fg:w="1"/><text x="3.9289%" y="559.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (1 samples, 0.02%)</title><rect x="3.7020%" y="549" width="0.0231%" height="15" fill="rgb(226,81,46)" fg:x="160" fg:w="1"/><text x="3.9520%" y="559.50"></text></g><g><title>pinocchio::impl::computeAllTerms&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="3.7251%" y="549" width="0.0231%" height="15" fill="rgb(247,70,30)" fg:x="161" fg:w="1"/><text x="3.9751%" y="559.50"></text></g><g><title>[unknown] (76 samples, 1.76%)</title><rect x="2.0130%" y="565" width="1.7584%" height="15" fill="rgb(212,68,19)" fg:x="87" fg:w="76"/><text x="2.2630%" y="575.50"></text></g><g><title>pinocchio::integrate&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="3.7483%" y="549" width="0.0231%" height="15" fill="rgb(240,187,13)" fg:x="162" fg:w="1"/><text x="3.9983%" y="559.50"></text></g><g><title>__GI___libc_free (2 samples, 0.05%)</title><rect x="3.7714%" y="357" width="0.0463%" height="15" fill="rgb(223,113,26)" fg:x="163" fg:w="2"/><text x="4.0214%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="3.7945%" y="341" width="0.0231%" height="15" fill="rgb(206,192,2)" fg:x="164" fg:w="1"/><text x="4.0445%" y="351.50"></text></g><g><title>boost::detail::sp_as_deleter&lt;crocoddyl::CostDataSumTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataSumTpl&lt;double&gt; &gt; &gt;::destroy (1 samples, 0.02%)</title><rect x="3.8177%" y="325" width="0.0231%" height="15" fill="rgb(241,108,4)" fg:x="165" fg:w="1"/><text x="4.0677%" y="335.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, boost::shared_ptr&lt;crocoddyl::CostDataAbstractTpl&lt;double&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="3.8177%" y="309" width="0.0231%" height="15" fill="rgb(247,173,49)" fg:x="165" fg:w="1"/><text x="4.0677%" y="319.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::CostDataResidualTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::CostDataResidualTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataResidualTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataResidualTpl&lt;double&gt; &gt; &gt;::dispose (1 samples, 0.02%)</title><rect x="3.8177%" y="293" width="0.0231%" height="15" fill="rgb(224,114,35)" fg:x="165" fg:w="1"/><text x="4.0677%" y="303.50"></text></g><g><title>crocoddyl::CostDataAbstractTpl&lt;double&gt;::~CostDataAbstractTpl (1 samples, 0.02%)</title><rect x="3.8177%" y="277" width="0.0231%" height="15" fill="rgb(245,159,27)" fg:x="165" fg:w="1"/><text x="4.0677%" y="287.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::ResidualDataFramePlacementTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::ResidualDataFramePlacementTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::ResidualDataFramePlacementTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::ResidualDataFramePlacementTpl&lt;double&gt; &gt; &gt;::dispose (1 samples, 0.02%)</title><rect x="3.8177%" y="261" width="0.0231%" height="15" fill="rgb(245,172,44)" fg:x="165" fg:w="1"/><text x="4.0677%" y="271.50"></text></g><g><title>crocoddyl::ResidualDataFramePlacementTpl&lt;double&gt;::~ResidualDataFramePlacementTpl (1 samples, 0.02%)</title><rect x="3.8177%" y="245" width="0.0231%" height="15" fill="rgb(236,23,11)" fg:x="165" fg:w="1"/><text x="4.0677%" y="255.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="3.8177%" y="229" width="0.0231%" height="15" fill="rgb(205,117,38)" fg:x="165" fg:w="1"/><text x="4.0677%" y="239.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="3.8177%" y="213" width="0.0231%" height="15" fill="rgb(237,72,25)" fg:x="165" fg:w="1"/><text x="4.0677%" y="223.50"></text></g><g><title>boost::detail::sp_counted_impl_pd&lt;crocoddyl::ShootingProblemTpl&lt;double&gt;*, boost::detail::sp_ms_deleter&lt;crocoddyl::ShootingProblemTpl&lt;double&gt; &gt; &gt;::dispose (6 samples, 0.14%)</title><rect x="3.7714%" y="421" width="0.1388%" height="15" fill="rgb(244,70,9)" fg:x="163" fg:w="6"/><text x="4.0214%" y="431.50"></text></g><g><title>crocoddyl::ShootingProblemTpl&lt;double&gt;::~ShootingProblemTpl (6 samples, 0.14%)</title><rect x="3.7714%" y="405" width="0.1388%" height="15" fill="rgb(217,125,39)" fg:x="163" fg:w="6"/><text x="4.0214%" y="415.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt; &gt; &gt;::dispose (6 samples, 0.14%)</title><rect x="3.7714%" y="389" width="0.1388%" height="15" fill="rgb(235,36,10)" fg:x="163" fg:w="6"/><text x="4.0214%" y="399.50"></text></g><g><title>crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;::~IntegratedActionDataEulerTpl (6 samples, 0.14%)</title><rect x="3.7714%" y="373" width="0.1388%" height="15" fill="rgb(251,123,47)" fg:x="163" fg:w="6"/><text x="4.0214%" y="383.50"></text></g><g><title>boost::detail::sp_counted_impl_pda&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;*, boost::detail::sp_as_deleter&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt; &gt; &gt;, Eigen::aligned_allocator&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt; &gt; &gt;::dispose (4 samples, 0.09%)</title><rect x="3.8177%" y="357" width="0.0925%" height="15" fill="rgb(221,13,13)" fg:x="165" fg:w="4"/><text x="4.0677%" y="367.50"></text></g><g><title>crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;::~DifferentialActionDataFreeFwdDynamicsTpl (4 samples, 0.09%)</title><rect x="3.8177%" y="341" width="0.0925%" height="15" fill="rgb(238,131,9)" fg:x="165" fg:w="4"/><text x="4.0677%" y="351.50"></text></g><g><title>pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::~DataTpl (3 samples, 0.07%)</title><rect x="3.8408%" y="325" width="0.0694%" height="15" fill="rgb(211,50,8)" fg:x="166" fg:w="3"/><text x="4.0908%" y="335.50"></text></g><g><title>__GI___libc_free (3 samples, 0.07%)</title><rect x="3.8408%" y="309" width="0.0694%" height="15" fill="rgb(245,182,24)" fg:x="166" fg:w="3"/><text x="4.0908%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="3.8871%" y="293" width="0.0231%" height="15" fill="rgb(242,14,37)" fg:x="168" fg:w="1"/><text x="4.1371%" y="303.50"></text></g><g><title>crocoddyl::SolverAbstract::setCandidate (5 samples, 0.12%)</title><rect x="3.9102%" y="405" width="0.1157%" height="15" fill="rgb(246,228,12)" fg:x="169" fg:w="5"/><text x="4.1602%" y="415.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (160 samples, 3.70%)</title><rect x="7.3577%" y="325" width="3.7020%" height="15" fill="rgb(213,55,15)" fg:x="318" fg:w="160"/><text x="7.6077%" y="335.50">Eige..</text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="11.0366%" y="309" width="0.0231%" height="15" fill="rgb(209,9,3)" fg:x="477" fg:w="1"/><text x="11.2866%" y="319.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (23 samples, 0.53%)</title><rect x="11.0597%" y="325" width="0.5322%" height="15" fill="rgb(230,59,30)" fg:x="478" fg:w="23"/><text x="11.3097%" y="335.50"></text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 1, false, double, 0, false, 0&gt;::run (222 samples, 5.14%)</title><rect x="7.2189%" y="341" width="5.1365%" height="15" fill="rgb(209,121,21)" fg:x="312" fg:w="222"/><text x="7.4689%" y="351.50">Eigen:..</text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (33 samples, 0.76%)</title><rect x="11.5919%" y="325" width="0.7635%" height="15" fill="rgb(220,109,13)" fg:x="501" fg:w="33"/><text x="11.8419%" y="335.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt; &gt; (224 samples, 5.18%)</title><rect x="7.1957%" y="357" width="5.1828%" height="15" fill="rgb(232,18,1)" fg:x="311" fg:w="224"/><text x="7.4457%" y="367.50">Eigen:..</text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="12.3554%" y="341" width="0.0231%" height="15" fill="rgb(215,41,42)" fg:x="534" fg:w="1"/><text x="12.6054%" y="351.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="12.3785%" y="357" width="0.0231%" height="15" fill="rgb(224,123,36)" fg:x="535" fg:w="1"/><text x="12.6285%" y="367.50"></text></g><g><title>Eigen::internal::Assignment&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0&gt;, Eigen::internal::assign_op&lt;double, double&gt;, Eigen::internal::Dense2Dense, void&gt;::run (244 samples, 5.65%)</title><rect x="7.1032%" y="373" width="5.6455%" height="15" fill="rgb(240,125,3)" fg:x="307" fg:w="244"/><text x="7.3532%" y="383.50">Eigen::..</text></g><g><title>__memset_avx2_unaligned_erms (15 samples, 0.35%)</title><rect x="12.4017%" y="357" width="0.3471%" height="15" fill="rgb(205,98,50)" fg:x="536" fg:w="15"/><text x="12.6517%" y="367.50"></text></g><g><title>Eigen::internal::Assignment&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0&gt;, Eigen::internal::assign_op&lt;double, double&gt;, Eigen::internal::Dense2Dense, void&gt;::run@plt (1 samples, 0.02%)</title><rect x="12.7487%" y="373" width="0.0231%" height="15" fill="rgb(205,185,37)" fg:x="551" fg:w="1"/><text x="12.9987%" y="383.50"></text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; (26 samples, 0.60%)</title><rect x="12.7719%" y="373" width="0.6016%" height="15" fill="rgb(238,207,15)" fg:x="552" fg:w="26"/><text x="13.0219%" y="383.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 1, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, false, 0&gt;::run (25 samples, 0.58%)</title><rect x="12.7950%" y="357" width="0.5784%" height="15" fill="rgb(213,199,42)" fg:x="553" fg:w="25"/><text x="13.0450%" y="367.50"></text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="13.3734%" y="373" width="0.0231%" height="15" fill="rgb(235,201,11)" fg:x="578" fg:w="1"/><text x="13.6234%" y="383.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (19 samples, 0.44%)</title><rect x="13.3966%" y="373" width="0.4396%" height="15" fill="rgb(207,46,11)" fg:x="579" fg:w="19"/><text x="13.6466%" y="383.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (69 samples, 1.60%)</title><rect x="13.9056%" y="341" width="1.5965%" height="15" fill="rgb(241,35,35)" fg:x="601" fg:w="69"/><text x="14.1556%" y="351.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 2, 0, false, false&gt;::operator (4 samples, 0.09%)</title><rect x="15.5021%" y="341" width="0.0925%" height="15" fill="rgb(243,32,47)" fg:x="670" fg:w="4"/><text x="15.7521%" y="351.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (86 samples, 1.99%)</title><rect x="13.8362%" y="373" width="1.9898%" height="15" fill="rgb(247,202,23)" fg:x="598" fg:w="86"/><text x="14.0862%" y="383.50">E..</text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 0, false, double, 1, false, 0&gt;::run (86 samples, 1.99%)</title><rect x="13.8362%" y="357" width="1.9898%" height="15" fill="rgb(219,102,11)" fg:x="598" fg:w="86"/><text x="14.0862%" y="367.50">E..</text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 1, false, false&gt;::operator (10 samples, 0.23%)</title><rect x="15.5946%" y="341" width="0.2314%" height="15" fill="rgb(243,110,44)" fg:x="674" fg:w="10"/><text x="15.8446%" y="351.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (199 samples, 4.60%)</title><rect x="16.2425%" y="341" width="4.6043%" height="15" fill="rgb(222,74,54)" fg:x="702" fg:w="199"/><text x="16.4925%" y="351.50">Eigen..</text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (31 samples, 0.72%)</title><rect x="20.8468%" y="341" width="0.7173%" height="15" fill="rgb(216,99,12)" fg:x="901" fg:w="31"/><text x="21.0968%" y="351.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (286 samples, 6.62%)</title><rect x="15.8260%" y="373" width="6.6173%" height="15" fill="rgb(226,22,26)" fg:x="684" fg:w="286"/><text x="16.0760%" y="383.50">Eigen::in..</text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 1, false, double, 0, false, 0&gt;::run (286 samples, 6.62%)</title><rect x="15.8260%" y="357" width="6.6173%" height="15" fill="rgb(217,163,10)" fg:x="684" fg:w="286"/><text x="16.0760%" y="367.50">Eigen::in..</text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (38 samples, 0.88%)</title><rect x="21.5641%" y="341" width="0.8792%" height="15" fill="rgb(213,25,53)" fg:x="932" fg:w="38"/><text x="21.8141%" y="351.50"></text></g><g><title>__memset_avx2_unaligned_erms (6 samples, 0.14%)</title><rect x="22.4433%" y="373" width="0.1388%" height="15" fill="rgb(252,105,26)" fg:x="970" fg:w="6"/><text x="22.6933%" y="383.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="22.5821%" y="373" width="0.0231%" height="15" fill="rgb(220,39,43)" fg:x="976" fg:w="1"/><text x="22.8321%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="22.5821%" y="357" width="0.0231%" height="15" fill="rgb(229,68,48)" fg:x="976" fg:w="1"/><text x="22.8321%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="22.5821%" y="341" width="0.0231%" height="15" fill="rgb(252,8,32)" fg:x="976" fg:w="1"/><text x="22.8321%" y="351.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="22.5821%" y="325" width="0.0231%" height="15" fill="rgb(223,20,43)" fg:x="976" fg:w="1"/><text x="22.8321%" y="335.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="22.5821%" y="309" width="0.0231%" height="15" fill="rgb(229,81,49)" fg:x="976" fg:w="1"/><text x="22.8321%" y="319.50"></text></g><g><title>__remove_hrtimer (1 samples, 0.02%)</title><rect x="22.5821%" y="293" width="0.0231%" height="15" fill="rgb(236,28,36)" fg:x="976" fg:w="1"/><text x="22.8321%" y="303.50"></text></g><g><title>rb_next (1 samples, 0.02%)</title><rect x="22.5821%" y="277" width="0.0231%" height="15" fill="rgb(249,185,26)" fg:x="976" fg:w="1"/><text x="22.8321%" y="287.50"></text></g><g><title>Eigen::LLT&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1&gt;::compute&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (57 samples, 1.32%)</title><rect x="22.7210%" y="357" width="1.3188%" height="15" fill="rgb(249,174,33)" fg:x="982" fg:w="57"/><text x="22.9710%" y="367.50"></text></g><g><title>Eigen::internal::llt_inplace&lt;double, 1&gt;::unblocked&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (40 samples, 0.93%)</title><rect x="23.1143%" y="341" width="0.9255%" height="15" fill="rgb(233,201,37)" fg:x="999" fg:w="40"/><text x="23.3643%" y="351.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (14 samples, 0.32%)</title><rect x="23.7159%" y="325" width="0.3239%" height="15" fill="rgb(221,78,26)" fg:x="1025" fg:w="14"/><text x="23.9659%" y="335.50"></text></g><g><title>Eigen::internal::evaluateProductBlockingSizesHeuristic&lt;double, double, 4, long&gt; (2 samples, 0.05%)</title><rect x="24.0398%" y="341" width="0.0463%" height="15" fill="rgb(250,127,30)" fg:x="1039" fg:w="2"/><text x="24.2898%" y="351.50"></text></g><g><title>Eigen::internal::evaluateProductBlockingSizesHeuristic&lt;double, double, 4, long&gt;@plt (1 samples, 0.02%)</title><rect x="24.0861%" y="341" width="0.0231%" height="15" fill="rgb(230,49,44)" fg:x="1041" fg:w="1"/><text x="24.3361%" y="351.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (14 samples, 0.32%)</title><rect x="25.1041%" y="325" width="0.3239%" height="15" fill="rgb(229,67,23)" fg:x="1085" fg:w="14"/><text x="25.3541%" y="335.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 2, 0, false, true&gt;::operator (9 samples, 0.21%)</title><rect x="25.4280%" y="325" width="0.2082%" height="15" fill="rgb(249,83,47)" fg:x="1099" fg:w="9"/><text x="25.6780%" y="335.50"></text></g><g><title>Eigen::internal::triangular_solver_selector&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 1, 1, 0, -1&gt;::run (74 samples, 1.71%)</title><rect x="24.0398%" y="357" width="1.7122%" height="15" fill="rgb(215,43,3)" fg:x="1039" fg:w="74"/><text x="24.2898%" y="367.50"></text></g><g><title>Eigen::internal::triangular_solve_matrix&lt;double, long, 2, 2, false, 1, 0&gt;::run (71 samples, 1.64%)</title><rect x="24.1092%" y="341" width="1.6428%" height="15" fill="rgb(238,154,13)" fg:x="1042" fg:w="71"/><text x="24.3592%" y="351.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 1, false, true&gt;::operator (5 samples, 0.12%)</title><rect x="25.6363%" y="325" width="0.1157%" height="15" fill="rgb(219,56,2)" fg:x="1108" fg:w="5"/><text x="25.8863%" y="335.50"></text></g><g><title>Eigen::internal::triangular_solver_selector&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 1, 1, 0, -1&gt;::run@plt (1 samples, 0.02%)</title><rect x="25.7520%" y="357" width="0.0231%" height="15" fill="rgb(233,0,4)" fg:x="1113" fg:w="1"/><text x="26.0020%" y="367.50"></text></g><g><title>Eigen::internal::triangular_solver_selector&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 1, 1, 0, 1&gt;::run (12 samples, 0.28%)</title><rect x="25.7751%" y="357" width="0.2776%" height="15" fill="rgb(235,30,7)" fg:x="1114" fg:w="12"/><text x="26.0251%" y="367.50"></text></g><g><title>Eigen::internal::triangular_solve_vector&lt;double, double, long, 1, 1, false, 0&gt;::run (12 samples, 0.28%)</title><rect x="25.7751%" y="341" width="0.2776%" height="15" fill="rgb(250,79,13)" fg:x="1114" fg:w="12"/><text x="26.0251%" y="351.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (22 samples, 0.51%)</title><rect x="26.8163%" y="325" width="0.5090%" height="15" fill="rgb(211,146,34)" fg:x="1159" fg:w="22"/><text x="27.0663%" y="335.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 2, 0, false, true&gt;::operator (1 samples, 0.02%)</title><rect x="27.3253%" y="325" width="0.0231%" height="15" fill="rgb(228,22,38)" fg:x="1181" fg:w="1"/><text x="27.5753%" y="335.50"></text></g><g><title>Eigen::internal::triangular_solver_selector&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const, Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 1, 2, 0, -1&gt;::run (62 samples, 1.43%)</title><rect x="26.0528%" y="357" width="1.4345%" height="15" fill="rgb(235,168,5)" fg:x="1126" fg:w="62"/><text x="26.3028%" y="367.50"></text></g><g><title>Eigen::internal::triangular_solve_matrix&lt;double, long, 2, 1, false, 0, 0&gt;::run (60 samples, 1.39%)</title><rect x="26.0990%" y="341" width="1.3882%" height="15" fill="rgb(221,155,16)" fg:x="1128" fg:w="60"/><text x="26.3490%" y="351.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, true&gt;::operator (6 samples, 0.14%)</title><rect x="27.3484%" y="325" width="0.1388%" height="15" fill="rgb(215,215,53)" fg:x="1182" fg:w="6"/><text x="27.5984%" y="335.50"></text></g><g><title>Eigen::internal::triangular_solver_selector&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 1, 2, 0, 1&gt;::run (16 samples, 0.37%)</title><rect x="27.4873%" y="357" width="0.3702%" height="15" fill="rgb(223,4,10)" fg:x="1188" fg:w="16"/><text x="27.7373%" y="367.50"></text></g><g><title>crocoddyl::SolverDDP::computeGains (228 samples, 5.28%)</title><rect x="22.6053%" y="373" width="5.2753%" height="15" fill="rgb(234,103,6)" fg:x="977" fg:w="228"/><text x="22.8553%" y="383.50">crocod..</text></g><g><title>crocoddyl::getProfiler@plt (1 samples, 0.02%)</title><rect x="27.8575%" y="357" width="0.0231%" height="15" fill="rgb(227,97,0)" fg:x="1204" fg:w="1"/><text x="28.1075%" y="367.50"></text></g><g><title>crocoddyl::Stopwatch::profiler_status@plt (1 samples, 0.02%)</title><rect x="27.8806%" y="373" width="0.0231%" height="15" fill="rgb(234,150,53)" fg:x="1205" fg:w="1"/><text x="28.1306%" y="383.50"></text></g><g><title>crocoddyl::SolverDDP::backwardPass (1,035 samples, 23.95%)</title><rect x="4.0259%" y="389" width="23.9472%" height="15" fill="rgb(228,201,54)" fg:x="174" fg:w="1035"/><text x="4.2759%" y="399.50">crocoddyl::SolverDDP::backwardPass</text></g><g><title>crocoddyl::getProfiler (3 samples, 0.07%)</title><rect x="27.9037%" y="373" width="0.0694%" height="15" fill="rgb(222,22,37)" fg:x="1206" fg:w="3"/><text x="28.1537%" y="383.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (2 samples, 0.05%)</title><rect x="27.9963%" y="325" width="0.0463%" height="15" fill="rgb(237,53,32)" fg:x="1210" fg:w="2"/><text x="28.2463%" y="335.50"></text></g><g><title>crocoddyl::ActuationModelFullTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="28.0426%" y="325" width="0.0231%" height="15" fill="rgb(233,25,53)" fg:x="1212" fg:w="1"/><text x="28.2926%" y="335.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calc (2 samples, 0.05%)</title><rect x="28.1120%" y="309" width="0.0463%" height="15" fill="rgb(210,40,34)" fg:x="1215" fg:w="2"/><text x="28.3620%" y="319.50"></text></g><g><title>crocoddyl::ActivationModelQuadTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="28.1351%" y="293" width="0.0231%" height="15" fill="rgb(241,220,44)" fg:x="1216" fg:w="1"/><text x="28.3851%" y="303.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calc (5 samples, 0.12%)</title><rect x="28.0657%" y="325" width="0.1157%" height="15" fill="rgb(235,28,35)" fg:x="1213" fg:w="5"/><text x="28.3157%" y="335.50"></text></g><g><title>local_Rb_tree_increment (1 samples, 0.02%)</title><rect x="28.1583%" y="309" width="0.0231%" height="15" fill="rgb(210,56,17)" fg:x="1217" fg:w="1"/><text x="28.4083%" y="319.50"></text></g><g><title>std::local_Rb_tree_increment (1 samples, 0.02%)</title><rect x="28.1583%" y="293" width="0.0231%" height="15" fill="rgb(224,130,29)" fg:x="1217" fg:w="1"/><text x="28.4083%" y="303.50"></text></g><g><title>pinocchio::cholesky::computeMinv&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (2 samples, 0.05%)</title><rect x="28.1814%" y="325" width="0.0463%" height="15" fill="rgb(235,212,8)" fg:x="1218" fg:w="2"/><text x="28.4314%" y="335.50"></text></g><g><title>pinocchio::cholesky::internal::Miunit&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt; &gt; (2 samples, 0.05%)</title><rect x="28.1814%" y="309" width="0.0463%" height="15" fill="rgb(223,33,50)" fg:x="1218" fg:w="2"/><text x="28.4314%" y="319.50"></text></g><g><title>pinocchio::cholesky::decompose&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; (3 samples, 0.07%)</title><rect x="28.2277%" y="325" width="0.0694%" height="15" fill="rgb(219,149,13)" fg:x="1220" fg:w="3"/><text x="28.4777%" y="335.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="28.2739%" y="309" width="0.0231%" height="15" fill="rgb(250,156,29)" fg:x="1222" fg:w="1"/><text x="28.5239%" y="319.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="28.2739%" y="293" width="0.0231%" height="15" fill="rgb(216,193,19)" fg:x="1222" fg:w="1"/><text x="28.5239%" y="303.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="28.2739%" y="277" width="0.0231%" height="15" fill="rgb(216,135,14)" fg:x="1222" fg:w="1"/><text x="28.5239%" y="287.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_28KineticEnergyAlgoForwardStepIdLi0ES16_EEvE27InternalVisitorModelAndDataINS1_13JointModelTplIdLi0ES16_EENS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES16_EERNS1_7DataTplIdLi0ES16_EEEEEEEEENT_11result_typeERS1U_ (1 samples, 0.02%)</title><rect x="28.3434%" y="293" width="0.0231%" height="15" fill="rgb(241,47,5)" fg:x="1225" fg:w="1"/><text x="28.5934%" y="303.50"></text></g><g><title>pinocchio::computeMechanicalEnergy&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; (3 samples, 0.07%)</title><rect x="28.3434%" y="309" width="0.0694%" height="15" fill="rgb(233,42,35)" fg:x="1225" fg:w="3"/><text x="28.5934%" y="319.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::KineticEnergyAlgoForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (2 samples, 0.05%)</title><rect x="28.3665%" y="293" width="0.0463%" height="15" fill="rgb(231,13,6)" fg:x="1226" fg:w="2"/><text x="28.6165%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::vtiv_impl&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (2 samples, 0.05%)</title><rect x="28.3665%" y="277" width="0.0463%" height="15" fill="rgb(207,181,40)" fg:x="1226" fg:w="2"/><text x="28.6165%" y="287.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="28.4359%" y="277" width="0.0231%" height="15" fill="rgb(254,173,49)" fg:x="1229" fg:w="1"/><text x="28.6859%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="28.4590%" y="277" width="0.0231%" height="15" fill="rgb(221,1,38)" fg:x="1230" fg:w="1"/><text x="28.7090%" y="287.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (5 samples, 0.12%)</title><rect x="28.4128%" y="309" width="0.1157%" height="15" fill="rgb(206,124,46)" fg:x="1228" fg:w="5"/><text x="28.6628%" y="319.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (5 samples, 0.12%)</title><rect x="28.4128%" y="293" width="0.1157%" height="15" fill="rgb(249,21,11)" fg:x="1228" fg:w="5"/><text x="28.6628%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (2 samples, 0.05%)</title><rect x="28.4822%" y="277" width="0.0463%" height="15" fill="rgb(222,201,40)" fg:x="1231" fg:w="2"/><text x="28.7322%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (1 samples, 0.02%)</title><rect x="28.5979%" y="277" width="0.0231%" height="15" fill="rgb(235,61,29)" fg:x="1236" fg:w="1"/><text x="28.8479%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (4 samples, 0.09%)</title><rect x="28.6210%" y="277" width="0.0925%" height="15" fill="rgb(219,207,3)" fg:x="1237" fg:w="4"/><text x="28.8710%" y="287.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;&gt; &gt;::operator (9 samples, 0.21%)</title><rect x="28.5285%" y="309" width="0.2082%" height="15" fill="rgb(222,56,46)" fg:x="1233" fg:w="9"/><text x="28.7785%" y="319.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (8 samples, 0.19%)</title><rect x="28.5516%" y="293" width="0.1851%" height="15" fill="rgb(239,76,54)" fg:x="1234" fg:w="8"/><text x="28.8016%" y="303.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="28.7136%" y="277" width="0.0231%" height="15" fill="rgb(231,124,27)" fg:x="1241" fg:w="1"/><text x="28.9636%" y="287.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (4 samples, 0.09%)</title><rect x="28.7367%" y="309" width="0.0925%" height="15" fill="rgb(249,195,6)" fg:x="1242" fg:w="4"/><text x="28.9867%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (3 samples, 0.07%)</title><rect x="28.7598%" y="293" width="0.0694%" height="15" fill="rgb(237,174,47)" fg:x="1243" fg:w="3"/><text x="29.0098%" y="303.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (1 samples, 0.02%)</title><rect x="28.8292%" y="309" width="0.0231%" height="15" fill="rgb(206,201,31)" fg:x="1246" fg:w="1"/><text x="29.0792%" y="319.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (1 samples, 0.02%)</title><rect x="28.8987%" y="293" width="0.0231%" height="15" fill="rgb(231,57,52)" fg:x="1249" fg:w="1"/><text x="29.1487%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (2 samples, 0.05%)</title><rect x="28.9218%" y="293" width="0.0463%" height="15" fill="rgb(248,177,22)" fg:x="1250" fg:w="2"/><text x="29.1718%" y="303.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (6 samples, 0.14%)</title><rect x="28.8524%" y="309" width="0.1388%" height="15" fill="rgb(215,211,37)" fg:x="1247" fg:w="6"/><text x="29.1024%" y="319.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="28.9681%" y="293" width="0.0231%" height="15" fill="rgb(241,128,51)" fg:x="1252" fg:w="1"/><text x="29.2181%" y="303.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="28.9681%" y="277" width="0.0231%" height="15" fill="rgb(227,165,31)" fg:x="1252" fg:w="1"/><text x="29.2181%" y="287.50"></text></g><g><title>__sincos_fma (1 samples, 0.02%)</title><rect x="28.9681%" y="261" width="0.0231%" height="15" fill="rgb(228,167,24)" fg:x="1252" fg:w="1"/><text x="29.2181%" y="271.50"></text></g><g><title>do_sin (1 samples, 0.02%)</title><rect x="28.9681%" y="245" width="0.0231%" height="15" fill="rgb(228,143,12)" fg:x="1252" fg:w="1"/><text x="29.2181%" y="255.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (3 samples, 0.07%)</title><rect x="29.0375%" y="293" width="0.0694%" height="15" fill="rgb(249,149,8)" fg:x="1255" fg:w="3"/><text x="29.2875%" y="303.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::calc (49 samples, 1.13%)</title><rect x="27.9963%" y="341" width="1.1337%" height="15" fill="rgb(243,35,44)" fg:x="1210" fg:w="49"/><text x="28.2463%" y="351.50"></text></g><g><title>pinocchio::impl::computeAllTerms&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (36 samples, 0.83%)</title><rect x="28.2971%" y="325" width="0.8329%" height="15" fill="rgb(246,89,9)" fg:x="1223" fg:w="36"/><text x="28.5471%" y="335.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (6 samples, 0.14%)</title><rect x="28.9912%" y="309" width="0.1388%" height="15" fill="rgb(233,213,13)" fg:x="1253" fg:w="6"/><text x="29.2412%" y="319.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="29.1069%" y="293" width="0.0231%" height="15" fill="rgb(233,141,41)" fg:x="1258" fg:w="1"/><text x="29.3569%" y="303.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="29.1069%" y="277" width="0.0231%" height="15" fill="rgb(239,167,4)" fg:x="1258" fg:w="1"/><text x="29.3569%" y="287.50"></text></g><g><title>__sincos_fma (1 samples, 0.02%)</title><rect x="29.1069%" y="261" width="0.0231%" height="15" fill="rgb(209,217,16)" fg:x="1258" fg:w="1"/><text x="29.3569%" y="271.50"></text></g><g><title>do_cos (1 samples, 0.02%)</title><rect x="29.1069%" y="245" width="0.0231%" height="15" fill="rgb(219,88,35)" fg:x="1258" fg:w="1"/><text x="29.3569%" y="255.50"></text></g><g><title>crocoddyl::ShootingProblemTpl&lt;double&gt;::calc (51 samples, 1.18%)</title><rect x="27.9732%" y="373" width="1.1800%" height="15" fill="rgb(220,193,23)" fg:x="1209" fg:w="51"/><text x="28.2232%" y="383.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calc (50 samples, 1.16%)</title><rect x="27.9963%" y="357" width="1.1569%" height="15" fill="rgb(230,90,52)" fg:x="1210" fg:w="50"/><text x="28.2463%" y="367.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::integrate (1 samples, 0.02%)</title><rect x="29.1300%" y="341" width="0.0231%" height="15" fill="rgb(252,106,19)" fg:x="1259" fg:w="1"/><text x="29.3800%" y="351.50"></text></g><g><title>pinocchio::integrate&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="29.1300%" y="325" width="0.0231%" height="15" fill="rgb(206,74,20)" fg:x="1259" fg:w="1"/><text x="29.3800%" y="335.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;double, double&gt;, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (23 samples, 0.53%)</title><rect x="30.4026%" y="341" width="0.5322%" height="15" fill="rgb(230,138,44)" fg:x="1314" fg:w="23"/><text x="30.6526%" y="351.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;double, double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;double&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt; const&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (39 samples, 0.90%)</title><rect x="30.9348%" y="341" width="0.9024%" height="15" fill="rgb(235,182,43)" fg:x="1337" fg:w="39"/><text x="31.1848%" y="351.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="31.8371%" y="341" width="0.0231%" height="15" fill="rgb(242,16,51)" fg:x="1376" fg:w="1"/><text x="32.0871%" y="351.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::calc (6 samples, 0.14%)</title><rect x="31.8602%" y="341" width="0.1388%" height="15" fill="rgb(248,9,4)" fg:x="1377" fg:w="6"/><text x="32.1102%" y="351.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::multiplyByJacobian (36 samples, 0.83%)</title><rect x="31.9991%" y="341" width="0.8329%" height="15" fill="rgb(210,31,22)" fg:x="1383" fg:w="36"/><text x="32.2491%" y="351.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (32 samples, 0.74%)</title><rect x="32.0916%" y="325" width="0.7404%" height="15" fill="rgb(239,54,39)" fg:x="1387" fg:w="32"/><text x="32.3416%" y="335.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::multiplyJacobianTransposeBy (9 samples, 0.21%)</title><rect x="32.8320%" y="341" width="0.2082%" height="15" fill="rgb(230,99,41)" fg:x="1419" fg:w="9"/><text x="33.0820%" y="351.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (9 samples, 0.21%)</title><rect x="32.8320%" y="325" width="0.2082%" height="15" fill="rgb(253,106,12)" fg:x="1419" fg:w="9"/><text x="33.0820%" y="335.50"></text></g><g><title>pinocchio::Jlog6_impl&lt;double&gt;::run&lt;double, 0, Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (2 samples, 0.05%)</title><rect x="33.1097%" y="277" width="0.0463%" height="15" fill="rgb(213,46,41)" fg:x="1431" fg:w="2"/><text x="33.3597%" y="287.50"></text></g><g><title>pinocchio::log3_impl&lt;double&gt;::run&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; &gt; (2 samples, 0.05%)</title><rect x="33.1097%" y="261" width="0.0463%" height="15" fill="rgb(215,133,35)" fg:x="1431" fg:w="2"/><text x="33.3597%" y="271.50"></text></g><g><title>__atan2 (2 samples, 0.05%)</title><rect x="33.1097%" y="245" width="0.0463%" height="15" fill="rgb(213,28,5)" fg:x="1431" fg:w="2"/><text x="33.3597%" y="255.50"></text></g><g><title>__ieee754_atan2_fma (2 samples, 0.05%)</title><rect x="33.1097%" y="229" width="0.0463%" height="15" fill="rgb(215,77,49)" fg:x="1431" fg:w="2"/><text x="33.3597%" y="239.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calcDiff (6 samples, 0.14%)</title><rect x="33.0403%" y="341" width="0.1388%" height="15" fill="rgb(248,100,22)" fg:x="1428" fg:w="6"/><text x="33.2903%" y="351.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calcDiff (4 samples, 0.09%)</title><rect x="33.0865%" y="325" width="0.0925%" height="15" fill="rgb(208,67,9)" fg:x="1430" fg:w="4"/><text x="33.3365%" y="335.50"></text></g><g><title>crocoddyl::ResidualModelAbstractTpl&lt;double&gt;::calcDiff (4 samples, 0.09%)</title><rect x="33.0865%" y="309" width="0.0925%" height="15" fill="rgb(219,133,21)" fg:x="1430" fg:w="4"/><text x="33.3365%" y="319.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::calcDiff (3 samples, 0.07%)</title><rect x="33.1097%" y="293" width="0.0694%" height="15" fill="rgb(246,46,29)" fg:x="1431" fg:w="3"/><text x="33.3597%" y="303.50"></text></g><g><title>pinocchio::getFrameJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="33.1559%" y="277" width="0.0231%" height="15" fill="rgb(246,185,52)" fg:x="1433" fg:w="1"/><text x="33.4059%" y="287.50"></text></g><g><title>pinocchio::getFrameJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="33.1559%" y="261" width="0.0231%" height="15" fill="rgb(252,136,11)" fg:x="1433" fg:w="1"/><text x="33.4059%" y="271.50"></text></g><g><title>pinocchio::details::translateJointJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="33.1559%" y="245" width="0.0231%" height="15" fill="rgb(219,138,53)" fg:x="1433" fg:w="1"/><text x="33.4059%" y="255.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; const, 6, 1, true&gt; const&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="33.1559%" y="229" width="0.0231%" height="15" fill="rgb(211,51,23)" fg:x="1433" fg:w="1"/><text x="33.4059%" y="239.50"></text></g><g><title>Eigen::internal::evaluateProductBlockingSizesHeuristic&lt;double, double, 1, long&gt; (4 samples, 0.09%)</title><rect x="33.8038%" y="293" width="0.0925%" height="15" fill="rgb(247,221,28)" fg:x="1461" fg:w="4"/><text x="34.0538%" y="303.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (90 samples, 2.08%)</title><rect x="34.0352%" y="277" width="2.0824%" height="15" fill="rgb(251,222,45)" fg:x="1471" fg:w="90"/><text x="34.2852%" y="287.50">E..</text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 2, 0, false, false&gt;::operator (8 samples, 0.19%)</title><rect x="36.1175%" y="277" width="0.1851%" height="15" fill="rgb(217,162,53)" fg:x="1561" fg:w="8"/><text x="36.3675%" y="287.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (123 samples, 2.85%)</title><rect x="33.7575%" y="309" width="2.8459%" height="15" fill="rgb(229,93,14)" fg:x="1459" fg:w="123"/><text x="34.0075%" y="319.50">Ei..</text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 0, false, double, 0, false, 0&gt;::run (117 samples, 2.71%)</title><rect x="33.8963%" y="293" width="2.7071%" height="15" fill="rgb(209,67,49)" fg:x="1465" fg:w="117"/><text x="34.1463%" y="303.50">Ei..</text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (13 samples, 0.30%)</title><rect x="36.3026%" y="277" width="0.3008%" height="15" fill="rgb(213,87,29)" fg:x="1569" fg:w="13"/><text x="36.5526%" y="287.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (140 samples, 3.24%)</title><rect x="33.6881%" y="325" width="3.2392%" height="15" fill="rgb(205,151,52)" fg:x="1456" fg:w="140"/><text x="33.9381%" y="335.50">Eig..</text></g><g><title>__memset_avx2_unaligned_erms (14 samples, 0.32%)</title><rect x="36.6034%" y="309" width="0.3239%" height="15" fill="rgb(253,215,39)" fg:x="1582" fg:w="14"/><text x="36.8534%" y="319.50"></text></g><g><title>__memset_avx2_unaligned_erms (17 samples, 0.39%)</title><rect x="40.0972%" y="309" width="0.3933%" height="15" fill="rgb(221,220,41)" fg:x="1733" fg:w="17"/><text x="40.3472%" y="319.50"></text></g><g><title>Eigen::internal::evaluateProductBlockingSizesHeuristic&lt;double, double, 1, long&gt; (1 samples, 0.02%)</title><rect x="40.9533%" y="261" width="0.0231%" height="15" fill="rgb(218,133,21)" fg:x="1770" fg:w="1"/><text x="41.2033%" y="271.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (169 samples, 3.91%)</title><rect x="41.3697%" y="245" width="3.9102%" height="15" fill="rgb(221,193,43)" fg:x="1788" fg:w="169"/><text x="41.6197%" y="255.50">Eige..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="45.2568%" y="229" width="0.0231%" height="15" fill="rgb(240,128,52)" fg:x="1956" fg:w="1"/><text x="45.5068%" y="239.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="45.2568%" y="213" width="0.0231%" height="15" fill="rgb(253,114,12)" fg:x="1956" fg:w="1"/><text x="45.5068%" y="223.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="45.2568%" y="197" width="0.0231%" height="15" fill="rgb(215,223,47)" fg:x="1956" fg:w="1"/><text x="45.5068%" y="207.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="45.2568%" y="181" width="0.0231%" height="15" fill="rgb(248,225,23)" fg:x="1956" fg:w="1"/><text x="45.5068%" y="191.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="45.2568%" y="165" width="0.0231%" height="15" fill="rgb(250,108,0)" fg:x="1956" fg:w="1"/><text x="45.5068%" y="175.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="45.2568%" y="149" width="0.0231%" height="15" fill="rgb(228,208,7)" fg:x="1956" fg:w="1"/><text x="45.5068%" y="159.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="45.2568%" y="133" width="0.0231%" height="15" fill="rgb(244,45,10)" fg:x="1956" fg:w="1"/><text x="45.5068%" y="143.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="45.2568%" y="117" width="0.0231%" height="15" fill="rgb(207,125,25)" fg:x="1956" fg:w="1"/><text x="45.5068%" y="127.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="45.2568%" y="101" width="0.0231%" height="15" fill="rgb(210,195,18)" fg:x="1956" fg:w="1"/><text x="45.5068%" y="111.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.02%)</title><rect x="45.2568%" y="85" width="0.0231%" height="15" fill="rgb(249,80,12)" fg:x="1956" fg:w="1"/><text x="45.5068%" y="95.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (16 samples, 0.37%)</title><rect x="45.2800%" y="245" width="0.3702%" height="15" fill="rgb(221,65,9)" fg:x="1957" fg:w="16"/><text x="45.5300%" y="255.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (221 samples, 5.11%)</title><rect x="40.9533%" y="277" width="5.1134%" height="15" fill="rgb(235,49,36)" fg:x="1770" fg:w="221"/><text x="41.2033%" y="287.50">Eigen:..</text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 1, false, double, 0, false, 0&gt;::run (220 samples, 5.09%)</title><rect x="40.9764%" y="261" width="5.0902%" height="15" fill="rgb(225,32,20)" fg:x="1771" fg:w="220"/><text x="41.2264%" y="271.50">Eigen:..</text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (18 samples, 0.42%)</title><rect x="45.6502%" y="245" width="0.4165%" height="15" fill="rgb(215,141,46)" fg:x="1973" fg:w="18"/><text x="45.9002%" y="255.50"></text></g><g><title>Eigen::internal::Assignment&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0&gt;, Eigen::internal::assign_op&lt;double, double&gt;, Eigen::internal::Dense2Dense, void&gt;::run (232 samples, 5.37%)</title><rect x="40.8839%" y="293" width="5.3679%" height="15" fill="rgb(250,160,47)" fg:x="1767" fg:w="232"/><text x="41.1339%" y="303.50">Eigen::..</text></g><g><title>__memset_avx2_unaligned_erms (8 samples, 0.19%)</title><rect x="46.0666%" y="277" width="0.1851%" height="15" fill="rgb(216,222,40)" fg:x="1991" fg:w="8"/><text x="46.3166%" y="287.50"></text></g><g><title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, Eigen::Product&lt;Eigen::DiagonalWrapper&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const&gt;, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 1&gt;, Eigen::internal::assign_op&lt;double, double&gt; &gt; (28 samples, 0.65%)</title><rect x="46.2517%" y="293" width="0.6478%" height="15" fill="rgb(234,217,39)" fg:x="1999" fg:w="28"/><text x="46.5017%" y="303.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Product&lt;Eigen::DiagonalWrapper&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, 1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (11 samples, 0.25%)</title><rect x="46.8996%" y="293" width="0.2545%" height="15" fill="rgb(207,178,40)" fg:x="2027" fg:w="11"/><text x="47.1496%" y="303.50"></text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, -1, 1, false&gt; &gt; (7 samples, 0.16%)</title><rect x="47.1541%" y="293" width="0.1620%" height="15" fill="rgb(221,136,13)" fg:x="2038" fg:w="7"/><text x="47.4041%" y="303.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 1, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, false, 0&gt;::run (7 samples, 0.16%)</title><rect x="47.1541%" y="277" width="0.1620%" height="15" fill="rgb(249,199,10)" fg:x="2038" fg:w="7"/><text x="47.4041%" y="287.50"></text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; (40 samples, 0.93%)</title><rect x="47.3161%" y="293" width="0.9255%" height="15" fill="rgb(249,222,13)" fg:x="2045" fg:w="40"/><text x="47.5661%" y="303.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 1, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, false, 0&gt;::run (37 samples, 0.86%)</title><rect x="47.3855%" y="277" width="0.8561%" height="15" fill="rgb(244,185,38)" fg:x="2048" fg:w="37"/><text x="47.6355%" y="287.50"></text></g><g><title>Eigen::internal::evaluateProductBlockingSizesHeuristic&lt;double, double, 1, long&gt; (1 samples, 0.02%)</title><rect x="48.3804%" y="261" width="0.0231%" height="15" fill="rgb(236,202,9)" fg:x="2091" fg:w="1"/><text x="48.6304%" y="271.50"></text></g><g><title>Eigen::internal::gebp_kernel&lt;double, double, long, Eigen::internal::blas_data_mapper&lt;double, long, 0, 0&gt;, 4, 4, false, false&gt;::operator (23 samples, 0.53%)</title><rect x="48.4498%" y="245" width="0.5322%" height="15" fill="rgb(250,229,37)" fg:x="2094" fg:w="23"/><text x="48.6998%" y="255.50"></text></g><g><title>Eigen::internal::gemm_pack_lhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 4, 2, 1, false, false&gt;::operator (3 samples, 0.07%)</title><rect x="48.9820%" y="245" width="0.0694%" height="15" fill="rgb(206,174,23)" fg:x="2117" fg:w="3"/><text x="49.2320%" y="255.50"></text></g><g><title>Eigen::internal::general_matrix_matrix_product&lt;long, double, 1, false, double, 0, false, 0&gt;::run (39 samples, 0.90%)</title><rect x="48.4035%" y="261" width="0.9024%" height="15" fill="rgb(211,33,43)" fg:x="2092" fg:w="39"/><text x="48.6535%" y="271.50"></text></g><g><title>Eigen::internal::gemm_pack_rhs&lt;double, long, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 4, 0, false, false&gt;::operator (11 samples, 0.25%)</title><rect x="49.0514%" y="245" width="0.2545%" height="15" fill="rgb(245,58,50)" fg:x="2120" fg:w="11"/><text x="49.3014%" y="255.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt; (41 samples, 0.95%)</title><rect x="48.3804%" y="277" width="0.9486%" height="15" fill="rgb(244,68,36)" fg:x="2091" fg:w="41"/><text x="48.6304%" y="287.50"></text></g><g><title>free@plt (1 samples, 0.02%)</title><rect x="49.3059%" y="261" width="0.0231%" height="15" fill="rgb(232,229,15)" fg:x="2131" fg:w="1"/><text x="49.5559%" y="271.50"></text></g><g><title>Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, false&gt; &gt; (50 samples, 1.16%)</title><rect x="48.2416%" y="293" width="1.1569%" height="15" fill="rgb(254,30,23)" fg:x="2085" fg:w="50"/><text x="48.4916%" y="303.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.07%)</title><rect x="49.3290%" y="277" width="0.0694%" height="15" fill="rgb(235,160,14)" fg:x="2132" fg:w="3"/><text x="49.5790%" y="287.50"></text></g><g><title>__memset_avx2_unaligned_erms (4 samples, 0.09%)</title><rect x="49.3984%" y="293" width="0.0925%" height="15" fill="rgb(212,155,44)" fg:x="2135" fg:w="4"/><text x="49.6484%" y="303.50"></text></g><g><title>crocoddyl::ActivationModelQuadTpl&lt;double&gt;::calcDiff (6 samples, 0.14%)</title><rect x="49.4910%" y="293" width="0.1388%" height="15" fill="rgb(226,2,50)" fg:x="2139" fg:w="6"/><text x="49.7410%" y="303.50"></text></g><g><title>Eigen::internal::dense_assignment_loop&lt;Eigen::internal::generic_dense_assignment_kernel&lt;Eigen::internal::evaluator&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, -1, true&gt; &gt;, Eigen::internal::evaluator&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt;, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 1&gt; &gt;, Eigen::internal::assign_op&lt;double, double&gt;, 0&gt;, 4, 0&gt;::run (12 samples, 0.28%)</title><rect x="49.6761%" y="277" width="0.2776%" height="15" fill="rgb(234,177,6)" fg:x="2147" fg:w="12"/><text x="49.9261%" y="287.50"></text></g><g><title>__sincos_fma (1 samples, 0.02%)</title><rect x="50.3239%" y="261" width="0.0231%" height="15" fill="rgb(217,24,9)" fg:x="2175" fg:w="1"/><text x="50.5739%" y="271.50"></text></g><g><title>do_sin (1 samples, 0.02%)</title><rect x="50.3239%" y="245" width="0.0231%" height="15" fill="rgb(220,13,46)" fg:x="2175" fg:w="1"/><text x="50.5739%" y="255.50"></text></g><g><title>do_sin (2 samples, 0.05%)</title><rect x="50.3933%" y="229" width="0.0463%" height="15" fill="rgb(239,221,27)" fg:x="2178" fg:w="2"/><text x="50.6433%" y="239.50"></text></g><g><title>pinocchio::Jlog3_impl&lt;double&gt;::run&lt;double, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt;, 3, 3, false&gt; &gt; (5 samples, 0.12%)</title><rect x="50.3471%" y="261" width="0.1157%" height="15" fill="rgb(222,198,25)" fg:x="2176" fg:w="5"/><text x="50.5971%" y="271.50"></text></g><g><title>__sincos_fma (3 samples, 0.07%)</title><rect x="50.3933%" y="245" width="0.0694%" height="15" fill="rgb(211,99,13)" fg:x="2178" fg:w="3"/><text x="50.6433%" y="255.50"></text></g><g><title>libc_feresetround_sse_ctx (1 samples, 0.02%)</title><rect x="50.4396%" y="229" width="0.0231%" height="15" fill="rgb(232,111,31)" fg:x="2180" fg:w="1"/><text x="50.6896%" y="239.50"></text></g><g><title>__atan2 (16 samples, 0.37%)</title><rect x="50.7404%" y="245" width="0.3702%" height="15" fill="rgb(245,82,37)" fg:x="2193" fg:w="16"/><text x="50.9904%" y="255.50"></text></g><g><title>__ieee754_atan2_fma (14 samples, 0.32%)</title><rect x="50.7867%" y="229" width="0.3239%" height="15" fill="rgb(227,149,46)" fg:x="2195" fg:w="14"/><text x="51.0367%" y="239.50"></text></g><g><title>libc_feholdsetround_sse_ctx (1 samples, 0.02%)</title><rect x="51.0875%" y="213" width="0.0231%" height="15" fill="rgb(218,36,50)" fg:x="2208" fg:w="1"/><text x="51.3375%" y="223.50"></text></g><g><title>__ieee754_acos_fma (3 samples, 0.07%)</title><rect x="51.1106%" y="245" width="0.0694%" height="15" fill="rgb(226,80,48)" fg:x="2209" fg:w="3"/><text x="51.3606%" y="255.50"></text></g><g><title>do_cos (5 samples, 0.12%)</title><rect x="51.1800%" y="229" width="0.1157%" height="15" fill="rgb(238,224,15)" fg:x="2212" fg:w="5"/><text x="51.4300%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="51.2726%" y="213" width="0.0231%" height="15" fill="rgb(241,136,10)" fg:x="2216" fg:w="1"/><text x="51.5226%" y="223.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="51.2726%" y="197" width="0.0231%" height="15" fill="rgb(208,32,45)" fg:x="2216" fg:w="1"/><text x="51.5226%" y="207.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="51.2726%" y="181" width="0.0231%" height="15" fill="rgb(207,135,9)" fg:x="2216" fg:w="1"/><text x="51.5226%" y="191.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="51.2726%" y="165" width="0.0231%" height="15" fill="rgb(206,86,44)" fg:x="2216" fg:w="1"/><text x="51.5226%" y="175.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="51.2726%" y="149" width="0.0231%" height="15" fill="rgb(245,177,15)" fg:x="2216" fg:w="1"/><text x="51.5226%" y="159.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="51.2726%" y="133" width="0.0231%" height="15" fill="rgb(206,64,50)" fg:x="2216" fg:w="1"/><text x="51.5226%" y="143.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="51.2726%" y="117" width="0.0231%" height="15" fill="rgb(234,36,40)" fg:x="2216" fg:w="1"/><text x="51.5226%" y="127.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="51.2726%" y="101" width="0.0231%" height="15" fill="rgb(213,64,8)" fg:x="2216" fg:w="1"/><text x="51.5226%" y="111.50"></text></g><g><title>account_process_tick (1 samples, 0.02%)</title><rect x="51.2726%" y="85" width="0.0231%" height="15" fill="rgb(210,75,36)" fg:x="2216" fg:w="1"/><text x="51.5226%" y="95.50"></text></g><g><title>account_user_time (1 samples, 0.02%)</title><rect x="51.2726%" y="69" width="0.0231%" height="15" fill="rgb(229,88,21)" fg:x="2216" fg:w="1"/><text x="51.5226%" y="79.50"></text></g><g><title>pinocchio::Jlog6_impl&lt;double&gt;::run&lt;double, 0, Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (59 samples, 1.37%)</title><rect x="49.9537%" y="277" width="1.3651%" height="15" fill="rgb(252,204,47)" fg:x="2159" fg:w="59"/><text x="50.2037%" y="287.50"></text></g><g><title>pinocchio::log3_impl&lt;double&gt;::run&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; &gt; (37 samples, 0.86%)</title><rect x="50.4627%" y="261" width="0.8561%" height="15" fill="rgb(208,77,27)" fg:x="2181" fg:w="37"/><text x="50.7127%" y="271.50"></text></g><g><title>__sin_fma (6 samples, 0.14%)</title><rect x="51.1800%" y="245" width="0.1388%" height="15" fill="rgb(221,76,26)" fg:x="2212" fg:w="6"/><text x="51.4300%" y="255.50"></text></g><g><title>do_sin (1 samples, 0.02%)</title><rect x="51.2957%" y="229" width="0.0231%" height="15" fill="rgb(225,139,18)" fg:x="2217" fg:w="1"/><text x="51.5457%" y="239.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (4 samples, 0.09%)</title><rect x="51.4577%" y="261" width="0.0925%" height="15" fill="rgb(230,137,11)" fg:x="2224" fg:w="4"/><text x="51.7077%" y="271.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (3 samples, 0.07%)</title><rect x="51.5502%" y="245" width="0.0694%" height="15" fill="rgb(212,28,1)" fg:x="2228" fg:w="3"/><text x="51.8002%" y="255.50"></text></g><g><title>boost::variant&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointModelMimic&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointModelMimic&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointModelMimic&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointModelFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointModelPlanarTpl&lt;double, 0&gt;, pinocchio::JointModelRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointModelSphericalTpl&lt;double, 0&gt;, pinocchio::JointModelSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointModelPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointModelPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointModelPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointModelPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointModelTranslationTpl&lt;double, 0&gt;, pinocchio::JointModelRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointModelRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointModelRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointModelRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointModelHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointModelHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointModelHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointModelHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointModelCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;pinocchio::JointIdxVVisitor const&gt; (1 samples, 0.02%)</title><rect x="51.8279%" y="229" width="0.0231%" height="15" fill="rgb(248,164,17)" fg:x="2240" fg:w="1"/><text x="52.0779%" y="239.50"></text></g><g><title>boost::variant&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointModelMimic&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointModelMimic&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointModelMimic&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointModelFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointModelPlanarTpl&lt;double, 0&gt;, pinocchio::JointModelRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointModelSphericalTpl&lt;double, 0&gt;, pinocchio::JointModelSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointModelPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointModelPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointModelPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointModelPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointModelTranslationTpl&lt;double, 0&gt;, pinocchio::JointModelRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointModelRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointModelRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointModelRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointModelHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointModelHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointModelHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointModelHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointModelCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;pinocchio::JointNvVisitor const&gt; (1 samples, 0.02%)</title><rect x="51.8510%" y="229" width="0.0231%" height="15" fill="rgb(222,171,42)" fg:x="2241" fg:w="1"/><text x="52.1010%" y="239.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; const, 6, 1, true&gt; const&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (7 samples, 0.16%)</title><rect x="51.8741%" y="229" width="0.1620%" height="15" fill="rgb(243,84,45)" fg:x="2242" fg:w="7"/><text x="52.1241%" y="239.50"></text></g><g><title>pinocchio::getFrameJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; (22 samples, 0.51%)</title><rect x="51.5502%" y="261" width="0.5090%" height="15" fill="rgb(252,49,23)" fg:x="2228" fg:w="22"/><text x="51.8002%" y="271.50"></text></g><g><title>pinocchio::details::translateJointJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; (19 samples, 0.44%)</title><rect x="51.6196%" y="245" width="0.4396%" height="15" fill="rgb(215,19,7)" fg:x="2231" fg:w="19"/><text x="51.8696%" y="255.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; const, 6, 1, true&gt; const&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="52.0361%" y="229" width="0.0231%" height="15" fill="rgb(238,81,41)" fg:x="2249" fg:w="1"/><text x="52.2861%" y="239.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::calcDiff (106 samples, 2.45%)</title><rect x="49.6298%" y="293" width="2.4526%" height="15" fill="rgb(210,199,37)" fg:x="2145" fg:w="106"/><text x="49.8798%" y="303.50">cr..</text></g><g><title>pinocchio::getFrameJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt; (33 samples, 0.76%)</title><rect x="51.3188%" y="277" width="0.7635%" height="15" fill="rgb(244,192,49)" fg:x="2218" fg:w="33"/><text x="51.5688%" y="287.50"></text></g><g><title>pinocchio::getFrameJacobian&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="52.0592%" y="261" width="0.0231%" height="15" fill="rgb(226,211,11)" fg:x="2250" fg:w="1"/><text x="52.3092%" y="271.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="52.1055%" y="277" width="0.0231%" height="15" fill="rgb(236,162,54)" fg:x="2252" fg:w="1"/><text x="52.3555%" y="287.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calcDiff (505 samples, 11.68%)</title><rect x="40.4905%" y="309" width="11.6844%" height="15" fill="rgb(220,229,9)" fg:x="1750" fg:w="505"/><text x="40.7405%" y="319.50">crocoddyl::CostMo..</text></g><g><title>crocoddyl::ResidualModelStateTpl&lt;double&gt;::calcDiff (4 samples, 0.09%)</title><rect x="52.0824%" y="293" width="0.0925%" height="15" fill="rgb(250,87,22)" fg:x="2251" fg:w="4"/><text x="52.3324%" y="303.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::Jdiff (2 samples, 0.05%)</title><rect x="52.1286%" y="277" width="0.0463%" height="15" fill="rgb(239,43,17)" fg:x="2253" fg:w="2"/><text x="52.3786%" y="287.50"></text></g><g><title>pinocchio::dDifference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (2 samples, 0.05%)</title><rect x="52.1286%" y="261" width="0.0463%" height="15" fill="rgb(231,177,25)" fg:x="2253" fg:w="2"/><text x="52.3786%" y="271.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calcDiff (666 samples, 15.41%)</title><rect x="36.9273%" y="325" width="15.4095%" height="15" fill="rgb(219,179,1)" fg:x="1596" fg:w="666"/><text x="37.1773%" y="335.50">crocoddyl::CostModelSumT..</text></g><g><title>std::local_Rb_tree_increment (7 samples, 0.16%)</title><rect x="52.1749%" y="309" width="0.1620%" height="15" fill="rgb(238,219,53)" fg:x="2255" fg:w="7"/><text x="52.4249%" y="319.50"></text></g><g><title>local_Rb_tree_increment (6 samples, 0.14%)</title><rect x="52.1981%" y="293" width="0.1388%" height="15" fill="rgb(232,167,36)" fg:x="2256" fg:w="6"/><text x="52.4481%" y="303.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl33ComputeRNEADerivativesForwardStepIdLi0ES16_N5Eigen3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEES1M_S1 (1 samples, 0.02%)</title><rect x="52.9847%" y="293" width="0.0231%" height="15" fill="rgb(244,19,51)" fg:x="2290" fg:w="1"/><text x="53.2347%" y="303.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl33ComputeRNEADerivativesForwardStepIdLi0ES16_N5Eigen3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEES1M_S1M_EEvE27InternalVisitorModelAndDataINS1_13JointModelTplIdLi0ES16_EENS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES16_EERNS1_7DataTplIdLi0ES16_EERKS1M_S22_S22_EEEEEEENT_11result_typeERS25_ (12 samples, 0.28%)</title><rect x="53.0079%" y="293" width="0.2776%" height="15" fill="rgb(224,6,22)" fg:x="2291" fg:w="12"/><text x="53.2579%" y="303.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl34ComputeRNEADerivativesBackwardStepIdLi0ES16_N5Eigen3RefINS1F_6MatrixIdLin1ELin1ELi1ELin1ELin1EEELi0ENS1F_11OuterStrideILin1EEEEES1L (1 samples, 0.02%)</title><rect x="53.2855%" y="293" width="0.0231%" height="15" fill="rgb(224,145,5)" fg:x="2303" fg:w="1"/><text x="53.5355%" y="303.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl34ComputeRNEADerivativesBackwardStepIdLi0ES16_N5Eigen3RefINS1F_6MatrixIdLin1ELin1ELi1ELin1ELin1EEELi0ENS1F_11OuterStrideILin1EEEEES1L_NS1G_INS1H_IdLin1ELin1ELi0ELin1ELin1EEELi0ES1K_EEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES16_EERNS1_7DataTplIdLi0ES16_EERKS1L_S21_RKS1N_EEEvEEEENT_11result_typeERS26_ (3 samples, 0.07%)</title><rect x="53.3087%" y="293" width="0.0694%" height="15" fill="rgb(234,130,49)" fg:x="2304" fg:w="3"/><text x="53.5587%" y="303.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointDataRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointDataHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointDataCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;boost::detail::variant::get_visitor&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="53.5863%" y="277" width="0.0231%" height="15" fill="rgb(254,6,2)" fg:x="2316" fg:w="1"/><text x="53.8363%" y="287.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (9 samples, 0.21%)</title><rect x="55.2753%" y="261" width="0.2082%" height="15" fill="rgb(208,96,46)" fg:x="2389" fg:w="9"/><text x="55.5253%" y="271.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="55.4836%" y="261" width="0.0231%" height="15" fill="rgb(239,3,39)" fg:x="2398" fg:w="1"/><text x="55.7336%" y="271.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (17 samples, 0.39%)</title><rect x="55.5067%" y="261" width="0.3933%" height="15" fill="rgb(233,210,1)" fg:x="2399" fg:w="17"/><text x="55.7567%" y="271.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (3 samples, 0.07%)</title><rect x="55.8306%" y="245" width="0.0694%" height="15" fill="rgb(244,137,37)" fg:x="2413" fg:w="3"/><text x="56.0806%" y="255.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (6 samples, 0.14%)</title><rect x="55.9000%" y="261" width="0.1388%" height="15" fill="rgb(240,136,2)" fg:x="2416" fg:w="6"/><text x="56.1500%" y="271.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt; (4 samples, 0.09%)</title><rect x="55.9463%" y="245" width="0.0925%" height="15" fill="rgb(239,18,37)" fg:x="2418" fg:w="4"/><text x="56.1963%" y="255.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator- (3 samples, 0.07%)</title><rect x="56.9181%" y="245" width="0.0694%" height="15" fill="rgb(218,185,22)" fg:x="2460" fg:w="3"/><text x="57.1681%" y="255.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (42 samples, 0.97%)</title><rect x="56.0389%" y="261" width="0.9718%" height="15" fill="rgb(225,218,4)" fg:x="2422" fg:w="42"/><text x="56.2889%" y="271.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-@plt (1 samples, 0.02%)</title><rect x="56.9875%" y="245" width="0.0231%" height="15" fill="rgb(230,182,32)" fg:x="2463" fg:w="1"/><text x="57.2375%" y="255.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="57.0106%" y="261" width="0.0231%" height="15" fill="rgb(242,56,43)" fg:x="2464" fg:w="1"/><text x="57.2606%" y="271.50"></text></g><g><title>do_cos (1 samples, 0.02%)</title><rect x="57.0801%" y="213" width="0.0231%" height="15" fill="rgb(233,99,24)" fg:x="2467" fg:w="1"/><text x="57.3301%" y="223.50"></text></g><g><title>do_sin (4 samples, 0.09%)</title><rect x="57.1032%" y="213" width="0.0925%" height="15" fill="rgb(234,209,42)" fg:x="2468" fg:w="4"/><text x="57.3532%" y="223.50"></text></g><g><title>libc_feholdsetround_sse_ctx (2 samples, 0.05%)</title><rect x="57.1957%" y="213" width="0.0463%" height="15" fill="rgb(227,7,12)" fg:x="2472" fg:w="2"/><text x="57.4457%" y="223.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (10 samples, 0.23%)</title><rect x="57.0338%" y="261" width="0.2314%" height="15" fill="rgb(245,203,43)" fg:x="2465" fg:w="10"/><text x="57.2838%" y="271.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (9 samples, 0.21%)</title><rect x="57.0569%" y="245" width="0.2082%" height="15" fill="rgb(238,205,33)" fg:x="2466" fg:w="9"/><text x="57.3069%" y="255.50"></text></g><g><title>__sincos_fma (8 samples, 0.19%)</title><rect x="57.0801%" y="229" width="0.1851%" height="15" fill="rgb(231,56,7)" fg:x="2467" fg:w="8"/><text x="57.3301%" y="239.50"></text></g><g><title>reduce_sincos (1 samples, 0.02%)</title><rect x="57.2420%" y="213" width="0.0231%" height="15" fill="rgb(244,186,29)" fg:x="2474" fg:w="1"/><text x="57.4920%" y="223.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (4 samples, 0.09%)</title><rect x="57.2652%" y="261" width="0.0925%" height="15" fill="rgb(234,111,31)" fg:x="2475" fg:w="4"/><text x="57.5152%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt;@plt (1 samples, 0.02%)</title><rect x="57.3577%" y="261" width="0.0231%" height="15" fill="rgb(241,149,10)" fg:x="2479" fg:w="1"/><text x="57.6077%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (4 samples, 0.09%)</title><rect x="57.3808%" y="261" width="0.0925%" height="15" fill="rgb(249,206,44)" fg:x="2480" fg:w="4"/><text x="57.6308%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="57.4734%" y="261" width="0.0231%" height="15" fill="rgb(251,153,30)" fg:x="2484" fg:w="1"/><text x="57.7234%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (5 samples, 0.12%)</title><rect x="57.4965%" y="261" width="0.1157%" height="15" fill="rgb(239,152,38)" fg:x="2485" fg:w="5"/><text x="57.7465%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (5 samples, 0.12%)</title><rect x="57.6122%" y="261" width="0.1157%" height="15" fill="rgb(249,139,47)" fg:x="2490" fg:w="5"/><text x="57.8622%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="57.7279%" y="261" width="0.0231%" height="15" fill="rgb(244,64,35)" fg:x="2495" fg:w="1"/><text x="57.9779%" y="271.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (14 samples, 0.32%)</title><rect x="57.7510%" y="261" width="0.3239%" height="15" fill="rgb(216,46,15)" fg:x="2496" fg:w="14"/><text x="58.0010%" y="271.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::addForceCrossMatrix&lt;pinocchio::ForceTpl&lt;double, 0&gt;, Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (1 samples, 0.02%)</title><rect x="58.0750%" y="261" width="0.0231%" height="15" fill="rgb(250,74,19)" fg:x="2510" fg:w="1"/><text x="58.3250%" y="271.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (195 samples, 4.51%)</title><rect x="53.6094%" y="277" width="4.5118%" height="15" fill="rgb(249,42,33)" fg:x="2317" fg:w="195"/><text x="53.8594%" y="287.50">pinoc..</text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::addForceCrossMatrix&lt;pinocchio::ForceTpl&lt;double, 0&gt;, Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="58.0981%" y="261" width="0.0231%" height="15" fill="rgb(242,149,17)" fg:x="2511" fg:w="1"/><text x="58.3481%" y="271.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (3 samples, 0.07%)</title><rect x="58.9079%" y="261" width="0.0694%" height="15" fill="rgb(244,29,21)" fg:x="2546" fg:w="3"/><text x="59.1579%" y="271.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="58.9773%" y="261" width="0.0231%" height="15" fill="rgb(220,130,37)" fg:x="2549" fg:w="1"/><text x="59.2273%" y="271.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (2 samples, 0.05%)</title><rect x="59.0005%" y="261" width="0.0463%" height="15" fill="rgb(211,67,2)" fg:x="2550" fg:w="2"/><text x="59.2505%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="59.1161%" y="245" width="0.0231%" height="15" fill="rgb(235,68,52)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="255.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="59.1161%" y="229" width="0.0231%" height="15" fill="rgb(246,142,3)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="239.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="59.1161%" y="213" width="0.0231%" height="15" fill="rgb(241,25,7)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="223.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="59.1161%" y="197" width="0.0231%" height="15" fill="rgb(242,119,39)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="207.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="59.1161%" y="181" width="0.0231%" height="15" fill="rgb(241,98,45)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="191.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="59.1161%" y="165" width="0.0231%" height="15" fill="rgb(254,28,30)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="175.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="59.1161%" y="149" width="0.0231%" height="15" fill="rgb(241,142,54)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="159.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="59.1161%" y="133" width="0.0231%" height="15" fill="rgb(222,85,15)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="143.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="59.1161%" y="117" width="0.0231%" height="15" fill="rgb(210,85,47)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="127.50"></text></g><g><title>task_tick_fair (1 samples, 0.02%)</title><rect x="59.1161%" y="101" width="0.0231%" height="15" fill="rgb(224,206,25)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="111.50"></text></g><g><title>update_load_avg (1 samples, 0.02%)</title><rect x="59.1161%" y="85" width="0.0231%" height="15" fill="rgb(243,201,19)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="95.50"></text></g><g><title>__update_load_avg_cfs_rq (1 samples, 0.02%)</title><rect x="59.1161%" y="69" width="0.0231%" height="15" fill="rgb(236,59,4)" fg:x="2555" fg:w="1"/><text x="59.3661%" y="79.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (8 samples, 0.19%)</title><rect x="59.0467%" y="261" width="0.1851%" height="15" fill="rgb(254,179,45)" fg:x="2552" fg:w="8"/><text x="59.2967%" y="271.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (4 samples, 0.09%)</title><rect x="59.1393%" y="245" width="0.0925%" height="15" fill="rgb(226,14,10)" fg:x="2556" fg:w="4"/><text x="59.3893%" y="255.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (1 samples, 0.02%)</title><rect x="59.2318%" y="261" width="0.0231%" height="15" fill="rgb(244,27,41)" fg:x="2560" fg:w="1"/><text x="59.4818%" y="271.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt; (1 samples, 0.02%)</title><rect x="59.2318%" y="245" width="0.0231%" height="15" fill="rgb(235,35,32)" fg:x="2560" fg:w="1"/><text x="59.4818%" y="255.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (29 samples, 0.67%)</title><rect x="59.2550%" y="261" width="0.6710%" height="15" fill="rgb(218,68,31)" fg:x="2561" fg:w="29"/><text x="59.5050%" y="271.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator- (1 samples, 0.02%)</title><rect x="59.9028%" y="245" width="0.0231%" height="15" fill="rgb(207,120,37)" fg:x="2589" fg:w="1"/><text x="60.1528%" y="255.50"></text></g><g><title>do_cos (3 samples, 0.07%)</title><rect x="59.9491%" y="213" width="0.0694%" height="15" fill="rgb(227,98,0)" fg:x="2591" fg:w="3"/><text x="60.1991%" y="223.50"></text></g><g><title>do_sin (4 samples, 0.09%)</title><rect x="60.0185%" y="213" width="0.0925%" height="15" fill="rgb(207,7,3)" fg:x="2594" fg:w="4"/><text x="60.2685%" y="223.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (9 samples, 0.21%)</title><rect x="59.9260%" y="261" width="0.2082%" height="15" fill="rgb(206,98,19)" fg:x="2590" fg:w="9"/><text x="60.1760%" y="271.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (9 samples, 0.21%)</title><rect x="59.9260%" y="245" width="0.2082%" height="15" fill="rgb(217,5,26)" fg:x="2590" fg:w="9"/><text x="60.1760%" y="255.50"></text></g><g><title>__sincos_fma (8 samples, 0.19%)</title><rect x="59.9491%" y="229" width="0.1851%" height="15" fill="rgb(235,190,38)" fg:x="2591" fg:w="8"/><text x="60.1991%" y="239.50"></text></g><g><title>libc_feholdsetround_sse_ctx (1 samples, 0.02%)</title><rect x="60.1111%" y="213" width="0.0231%" height="15" fill="rgb(247,86,24)" fg:x="2598" fg:w="1"/><text x="60.3611%" y="223.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (6 samples, 0.14%)</title><rect x="60.1342%" y="261" width="0.1388%" height="15" fill="rgb(205,101,16)" fg:x="2599" fg:w="6"/><text x="60.3842%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (4 samples, 0.09%)</title><rect x="60.2730%" y="261" width="0.0925%" height="15" fill="rgb(246,168,33)" fg:x="2605" fg:w="4"/><text x="60.5230%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (6 samples, 0.14%)</title><rect x="60.3656%" y="261" width="0.1388%" height="15" fill="rgb(231,114,1)" fg:x="2609" fg:w="6"/><text x="60.6156%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (4 samples, 0.09%)</title><rect x="60.5044%" y="261" width="0.0925%" height="15" fill="rgb(207,184,53)" fg:x="2615" fg:w="4"/><text x="60.7544%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="60.5969%" y="261" width="0.0231%" height="15" fill="rgb(224,95,51)" fg:x="2619" fg:w="1"/><text x="60.8469%" y="271.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (3 samples, 0.07%)</title><rect x="60.6201%" y="261" width="0.0694%" height="15" fill="rgb(212,188,45)" fg:x="2620" fg:w="3"/><text x="60.8701%" y="271.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (112 samples, 2.59%)</title><rect x="58.1212%" y="277" width="2.5914%" height="15" fill="rgb(223,154,38)" fg:x="2512" fg:w="112"/><text x="58.3712%" y="287.50">pi..</text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="60.6895%" y="261" width="0.0231%" height="15" fill="rgb(251,22,52)" fg:x="2623" fg:w="1"/><text x="60.9395%" y="271.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (2 samples, 0.05%)</title><rect x="61.7075%" y="261" width="0.0463%" height="15" fill="rgb(229,209,22)" fg:x="2667" fg:w="2"/><text x="61.9575%" y="271.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (3 samples, 0.07%)</title><rect x="61.7538%" y="261" width="0.0694%" height="15" fill="rgb(234,138,34)" fg:x="2669" fg:w="3"/><text x="62.0038%" y="271.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (3 samples, 0.07%)</title><rect x="61.8232%" y="261" width="0.0694%" height="15" fill="rgb(212,95,11)" fg:x="2672" fg:w="3"/><text x="62.0732%" y="271.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt; (3 samples, 0.07%)</title><rect x="61.8232%" y="245" width="0.0694%" height="15" fill="rgb(240,179,47)" fg:x="2672" fg:w="3"/><text x="62.0732%" y="255.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (18 samples, 0.42%)</title><rect x="61.8926%" y="261" width="0.4165%" height="15" fill="rgb(240,163,11)" fg:x="2675" fg:w="18"/><text x="62.1426%" y="271.50"></text></g><g><title>do_cos (2 samples, 0.05%)</title><rect x="62.3323%" y="213" width="0.0463%" height="15" fill="rgb(236,37,12)" fg:x="2694" fg:w="2"/><text x="62.5823%" y="223.50"></text></g><g><title>__sincos_fma (4 samples, 0.09%)</title><rect x="62.3091%" y="229" width="0.0925%" height="15" fill="rgb(232,164,16)" fg:x="2693" fg:w="4"/><text x="62.5591%" y="239.50"></text></g><g><title>do_sin (1 samples, 0.02%)</title><rect x="62.3785%" y="213" width="0.0231%" height="15" fill="rgb(244,205,15)" fg:x="2696" fg:w="1"/><text x="62.6285%" y="223.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (5 samples, 0.12%)</title><rect x="62.3091%" y="261" width="0.1157%" height="15" fill="rgb(223,117,47)" fg:x="2693" fg:w="5"/><text x="62.5591%" y="271.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (5 samples, 0.12%)</title><rect x="62.3091%" y="245" width="0.1157%" height="15" fill="rgb(244,107,35)" fg:x="2693" fg:w="5"/><text x="62.5591%" y="255.50"></text></g><g><title>sincos@plt (1 samples, 0.02%)</title><rect x="62.4017%" y="229" width="0.0231%" height="15" fill="rgb(205,140,8)" fg:x="2697" fg:w="1"/><text x="62.6517%" y="239.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (10 samples, 0.23%)</title><rect x="62.4248%" y="261" width="0.2314%" height="15" fill="rgb(228,84,46)" fg:x="2698" fg:w="10"/><text x="62.6748%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (6 samples, 0.14%)</title><rect x="62.6562%" y="261" width="0.1388%" height="15" fill="rgb(254,188,9)" fg:x="2708" fg:w="6"/><text x="62.9062%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (6 samples, 0.14%)</title><rect x="62.7950%" y="261" width="0.1388%" height="15" fill="rgb(206,112,54)" fg:x="2714" fg:w="6"/><text x="63.0450%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (7 samples, 0.16%)</title><rect x="62.9338%" y="261" width="0.1620%" height="15" fill="rgb(216,84,49)" fg:x="2720" fg:w="7"/><text x="63.1838%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (2 samples, 0.05%)</title><rect x="63.0958%" y="261" width="0.0463%" height="15" fill="rgb(214,194,35)" fg:x="2727" fg:w="2"/><text x="63.3458%" y="271.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (5 samples, 0.12%)</title><rect x="63.1421%" y="261" width="0.1157%" height="15" fill="rgb(249,28,3)" fg:x="2729" fg:w="5"/><text x="63.3921%" y="271.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="63.2578%" y="261" width="0.0231%" height="15" fill="rgb(222,56,52)" fg:x="2734" fg:w="1"/><text x="63.5078%" y="271.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;&gt; &gt;::operator (430 samples, 9.95%)</title><rect x="53.3781%" y="293" width="9.9491%" height="15" fill="rgb(245,217,50)" fg:x="2307" fg:w="430"/><text x="53.6281%" y="303.50">pinocchio::fus..</text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (113 samples, 2.61%)</title><rect x="60.7126%" y="277" width="2.6145%" height="15" fill="rgb(213,201,24)" fg:x="2624" fg:w="113"/><text x="60.9626%" y="287.50">pi..</text></g><g><title>pinocchio::impl::ComputeRNEADerivativesForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::addForceCrossMatrix&lt;pinocchio::ForceTpl&lt;double, 0&gt;, Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (2 samples, 0.05%)</title><rect x="63.2809%" y="261" width="0.0463%" height="15" fill="rgb(248,116,28)" fg:x="2735" fg:w="2"/><text x="63.5309%" y="271.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="64.5072%" y="277" width="0.0231%" height="15" fill="rgb(219,72,43)" fg:x="2788" fg:w="1"/><text x="64.7572%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (18 samples, 0.42%)</title><rect x="64.5303%" y="277" width="0.4165%" height="15" fill="rgb(209,138,14)" fg:x="2789" fg:w="18"/><text x="64.7803%" y="287.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt;, 3, 1, false&gt; &gt; (3 samples, 0.07%)</title><rect x="64.8774%" y="261" width="0.0694%" height="15" fill="rgb(222,18,33)" fg:x="2804" fg:w="3"/><text x="65.1274%" y="271.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (16 samples, 0.37%)</title><rect x="64.9468%" y="277" width="0.3702%" height="15" fill="rgb(213,199,7)" fg:x="2807" fg:w="16"/><text x="65.1968%" y="287.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (88 samples, 2.04%)</title><rect x="63.3272%" y="293" width="2.0361%" height="15" fill="rgb(250,110,10)" fg:x="2737" fg:w="88"/><text x="63.5772%" y="303.50">p..</text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (2 samples, 0.05%)</title><rect x="65.3170%" y="277" width="0.0463%" height="15" fill="rgb(248,123,6)" fg:x="2823" fg:w="2"/><text x="65.5670%" y="287.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-= (1 samples, 0.02%)</title><rect x="65.3401%" y="261" width="0.0231%" height="15" fill="rgb(206,91,31)" fg:x="2824" fg:w="1"/><text x="65.5901%" y="271.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (2 samples, 0.05%)</title><rect x="66.1268%" y="277" width="0.0463%" height="15" fill="rgb(211,154,13)" fg:x="2858" fg:w="2"/><text x="66.3768%" y="287.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="66.1731%" y="277" width="0.0231%" height="15" fill="rgb(225,148,7)" fg:x="2860" fg:w="1"/><text x="66.4231%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (5 samples, 0.12%)</title><rect x="66.1962%" y="277" width="0.1157%" height="15" fill="rgb(220,160,43)" fg:x="2861" fg:w="5"/><text x="66.4462%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (10 samples, 0.23%)</title><rect x="66.3119%" y="277" width="0.2314%" height="15" fill="rgb(213,52,39)" fg:x="2866" fg:w="10"/><text x="66.5619%" y="287.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (2 samples, 0.05%)</title><rect x="66.4970%" y="261" width="0.0463%" height="15" fill="rgb(243,137,7)" fg:x="2874" fg:w="2"/><text x="66.7470%" y="271.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (55 samples, 1.27%)</title><rect x="65.3633%" y="293" width="1.2726%" height="15" fill="rgb(230,79,13)" fg:x="2825" fg:w="55"/><text x="65.6133%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (4 samples, 0.09%)</title><rect x="66.5433%" y="277" width="0.0925%" height="15" fill="rgb(247,105,23)" fg:x="2876" fg:w="4"/><text x="66.7933%" y="287.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-= (2 samples, 0.05%)</title><rect x="66.5895%" y="261" width="0.0463%" height="15" fill="rgb(223,179,41)" fg:x="2878" fg:w="2"/><text x="66.8395%" y="271.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="67.4225%" y="277" width="0.0231%" height="15" fill="rgb(218,9,34)" fg:x="2914" fg:w="1"/><text x="67.6725%" y="287.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="67.4456%" y="277" width="0.0231%" height="15" fill="rgb(222,106,8)" fg:x="2915" fg:w="1"/><text x="67.6956%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (9 samples, 0.21%)</title><rect x="67.4688%" y="277" width="0.2082%" height="15" fill="rgb(211,220,0)" fg:x="2916" fg:w="9"/><text x="67.7188%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (12 samples, 0.28%)</title><rect x="67.6770%" y="277" width="0.2776%" height="15" fill="rgb(229,52,16)" fg:x="2925" fg:w="12"/><text x="67.9270%" y="287.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="67.9315%" y="261" width="0.0231%" height="15" fill="rgb(212,155,18)" fg:x="2936" fg:w="1"/><text x="68.1815%" y="271.50"></text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (58 samples, 1.34%)</title><rect x="66.6358%" y="293" width="1.3420%" height="15" fill="rgb(242,21,14)" fg:x="2880" fg:w="58"/><text x="66.8858%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (1 samples, 0.02%)</title><rect x="67.9547%" y="277" width="0.0231%" height="15" fill="rgb(222,19,48)" fg:x="2937" fg:w="1"/><text x="68.2047%" y="287.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::calcDiff (1,506 samples, 34.84%)</title><rect x="33.1791%" y="341" width="34.8450%" height="15" fill="rgb(232,45,27)" fg:x="1434" fg:w="1506"/><text x="33.4291%" y="351.50">crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;doub..</text></g><g><title>pinocchio::computeRNEADerivatives&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; (678 samples, 15.69%)</title><rect x="52.3369%" y="325" width="15.6872%" height="15" fill="rgb(249,103,42)" fg:x="2262" fg:w="678"/><text x="52.5869%" y="335.50">pinocchio::computeRNEADe..</text></g><g><title>pinocchio::impl::computeRNEADerivatives&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt; (667 samples, 15.43%)</title><rect x="52.5914%" y="309" width="15.4327%" height="15" fill="rgb(246,81,33)" fg:x="2273" fg:w="667"/><text x="52.8414%" y="319.50">pinocchio::impl::compute..</text></g><g><title>pinocchio::impl::ComputeRNEADerivativesBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt;@plt (2 samples, 0.05%)</title><rect x="67.9778%" y="293" width="0.0463%" height="15" fill="rgb(252,33,42)" fg:x="2938" fg:w="2"/><text x="68.2278%" y="303.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::Jintegrate (10 samples, 0.23%)</title><rect x="68.0241%" y="341" width="0.2314%" height="15" fill="rgb(209,212,41)" fg:x="2940" fg:w="10"/><text x="68.2741%" y="351.50"></text></g><g><title>pinocchio::dIntegrate&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (8 samples, 0.19%)</title><rect x="68.0703%" y="325" width="0.1851%" height="15" fill="rgb(207,154,6)" fg:x="2942" fg:w="8"/><text x="68.3203%" y="335.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14dIntegrateStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_INS1I_IdLin1ELin1ELi0ELin1ELin1EEELi0ENS1F_11OuterStrideILin1EEEEELin1ELin1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S21_RS1U_RKNS1_16ArgumentPositionERKNS1_22AssignmentOperatorTypeEEEEvEEEENT_11result_typeERS2B_ (4 samples, 0.09%)</title><rect x="68.1629%" y="309" width="0.0925%" height="15" fill="rgb(223,64,47)" fg:x="2946" fg:w="4"/><text x="68.4129%" y="319.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calcDiff (1,688 samples, 39.06%)</title><rect x="29.2920%" y="357" width="39.0560%" height="15" fill="rgb(211,161,38)" fg:x="1266" fg:w="1688"/><text x="29.5420%" y="367.50">crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calcDiff</text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::JintegrateTransport (4 samples, 0.09%)</title><rect x="68.2554%" y="341" width="0.0925%" height="15" fill="rgb(219,138,40)" fg:x="2950" fg:w="4"/><text x="68.5054%" y="351.50"></text></g><g><title>pinocchio::dIntegrateTransport&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 0, Eigen::OuterStride&lt;-1&gt; &gt;, -1, -1, false&gt; &gt; (4 samples, 0.09%)</title><rect x="68.2554%" y="325" width="0.0925%" height="15" fill="rgb(241,228,46)" fg:x="2950" fg:w="4"/><text x="68.5054%" y="335.50"></text></g><g><title>crocoddyl::ShootingProblemTpl&lt;double&gt;::calcDiff (1,696 samples, 39.24%)</title><rect x="29.1532%" y="373" width="39.2411%" height="15" fill="rgb(223,209,38)" fg:x="1260" fg:w="1696"/><text x="29.4032%" y="383.50">crocoddyl::ShootingProblemTpl&lt;double&gt;::calcDiff</text></g><g><title>free@plt (2 samples, 0.05%)</title><rect x="68.3480%" y="357" width="0.0463%" height="15" fill="rgb(236,164,45)" fg:x="2954" fg:w="2"/><text x="68.5980%" y="367.50"></text></g><g><title>crocoddyl::SolverDDP::computeDirection (2,783 samples, 64.39%)</title><rect x="4.0259%" y="405" width="64.3915%" height="15" fill="rgb(231,15,5)" fg:x="174" fg:w="2783"/><text x="4.2759%" y="415.50">crocoddyl::SolverDDP::computeDirection</text></g><g><title>crocoddyl::SolverDDP::calcDiff (1,748 samples, 40.44%)</title><rect x="27.9732%" y="389" width="40.4442%" height="15" fill="rgb(252,35,15)" fg:x="1209" fg:w="1748"/><text x="28.2232%" y="399.50">crocoddyl::SolverDDP::calcDiff</text></g><g><title>crocoddyl::SolverAbstract::computeDynamicFeasibility (1 samples, 0.02%)</title><rect x="68.3943%" y="373" width="0.0231%" height="15" fill="rgb(248,181,18)" fg:x="2956" fg:w="1"/><text x="68.6443%" y="383.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::diff (1 samples, 0.02%)</title><rect x="68.3943%" y="357" width="0.0231%" height="15" fill="rgb(233,39,42)" fg:x="2956" fg:w="1"/><text x="68.6443%" y="367.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="68.3943%" y="341" width="0.0231%" height="15" fill="rgb(238,110,33)" fg:x="2956" fg:w="1"/><text x="68.6443%" y="351.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14DifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (1 samples, 0.02%)</title><rect x="68.3943%" y="325" width="0.0231%" height="15" fill="rgb(233,195,10)" fg:x="2956" fg:w="1"/><text x="68.6443%" y="335.50"></text></g><g><title>crocoddyl::SolverDDP::stoppingCriteria (2 samples, 0.05%)</title><rect x="68.4174%" y="405" width="0.0463%" height="15" fill="rgb(254,105,3)" fg:x="2957" fg:w="2"/><text x="68.6674%" y="415.50"></text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt; (12 samples, 0.28%)</title><rect x="68.6950%" y="373" width="0.2776%" height="15" fill="rgb(221,225,9)" fg:x="2969" fg:w="12"/><text x="68.9450%" y="383.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, 1, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, false, 0&gt;::run (11 samples, 0.25%)</title><rect x="68.7182%" y="357" width="0.2545%" height="15" fill="rgb(224,227,45)" fg:x="2970" fg:w="11"/><text x="68.9682%" y="367.50"></text></g><g><title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Matrix&lt;double, -1, -1, 1, -1, -1&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="68.9727%" y="373" width="0.0231%" height="15" fill="rgb(229,198,43)" fg:x="2981" fg:w="1"/><text x="69.2227%" y="383.50"></text></g><g><title>crocoddyl::ControlParametrizationModelPolyZeroTpl&lt;double&gt;::calc (8 samples, 0.19%)</title><rect x="69.2966%" y="357" width="0.1851%" height="15" fill="rgb(206,209,35)" fg:x="2995" fg:w="8"/><text x="69.5466%" y="367.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (11 samples, 0.25%)</title><rect x="69.8288%" y="341" width="0.2545%" height="15" fill="rgb(245,195,53)" fg:x="3018" fg:w="11"/><text x="70.0788%" y="351.50"></text></g><g><title>__memset_avx2_unaligned_erms (19 samples, 0.44%)</title><rect x="70.0833%" y="341" width="0.4396%" height="15" fill="rgb(240,92,26)" fg:x="3029" fg:w="19"/><text x="70.3333%" y="351.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="70.5229%" y="341" width="0.0231%" height="15" fill="rgb(207,40,23)" fg:x="3048" fg:w="1"/><text x="70.7729%" y="351.50"></text></g><g><title>crocoddyl::ActuationModelFullTpl&lt;double&gt;::calc (17 samples, 0.39%)</title><rect x="70.5460%" y="341" width="0.3933%" height="15" fill="rgb(223,111,35)" fg:x="3049" fg:w="17"/><text x="70.7960%" y="351.50"></text></g><g><title>crocoddyl::ActivationModelQuadTpl&lt;double&gt;::calc (7 samples, 0.16%)</title><rect x="71.3327%" y="309" width="0.1620%" height="15" fill="rgb(229,147,28)" fg:x="3083" fg:w="7"/><text x="71.5827%" y="319.50"></text></g><g><title>crocoddyl::ResidualModelAbstractTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="71.4947%" y="309" width="0.0231%" height="15" fill="rgb(211,29,28)" fg:x="3090" fg:w="1"/><text x="71.7447%" y="319.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::calc (1 samples, 0.02%)</title><rect x="71.4947%" y="293" width="0.0231%" height="15" fill="rgb(228,72,33)" fg:x="3090" fg:w="1"/><text x="71.7447%" y="303.50"></text></g><g><title>pinocchio::log6_impl&lt;double&gt;::run&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="71.4947%" y="277" width="0.0231%" height="15" fill="rgb(205,214,31)" fg:x="3090" fg:w="1"/><text x="71.7447%" y="287.50"></text></g><g><title>pinocchio::log3_impl&lt;double&gt;::run&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="71.4947%" y="261" width="0.0231%" height="15" fill="rgb(224,111,15)" fg:x="3090" fg:w="1"/><text x="71.7447%" y="271.50"></text></g><g><title>__atan2 (1 samples, 0.02%)</title><rect x="71.4947%" y="245" width="0.0231%" height="15" fill="rgb(253,21,26)" fg:x="3090" fg:w="1"/><text x="71.7447%" y="255.50"></text></g><g><title>__ieee754_atan2_fma (1 samples, 0.02%)</title><rect x="71.4947%" y="229" width="0.0231%" height="15" fill="rgb(245,139,43)" fg:x="3090" fg:w="1"/><text x="71.7447%" y="239.50"></text></g><g><title>crocoddyl::ResidualModelControlTpl&lt;double&gt;::calc (12 samples, 0.28%)</title><rect x="71.5178%" y="309" width="0.2776%" height="15" fill="rgb(252,170,7)" fg:x="3091" fg:w="12"/><text x="71.7678%" y="319.50"></text></g><g><title>do_sin (2 samples, 0.05%)</title><rect x="72.3970%" y="261" width="0.0463%" height="15" fill="rgb(231,118,14)" fg:x="3129" fg:w="2"/><text x="72.6470%" y="271.50"></text></g><g><title>__sincos_fma (4 samples, 0.09%)</title><rect x="72.3739%" y="277" width="0.0925%" height="15" fill="rgb(238,83,0)" fg:x="3128" fg:w="4"/><text x="72.6239%" y="287.50"></text></g><g><title>libc_feholdsetround_sse_ctx (1 samples, 0.02%)</title><rect x="72.4433%" y="261" width="0.0231%" height="15" fill="rgb(221,39,39)" fg:x="3131" fg:w="1"/><text x="72.6933%" y="271.50"></text></g><g><title>__acos (1 samples, 0.02%)</title><rect x="72.7904%" y="261" width="0.0231%" height="15" fill="rgb(222,119,46)" fg:x="3146" fg:w="1"/><text x="73.0404%" y="271.50"></text></g><g><title>[libm.so.6] (2 samples, 0.05%)</title><rect x="72.8366%" y="245" width="0.0463%" height="15" fill="rgb(222,165,49)" fg:x="3148" fg:w="2"/><text x="73.0866%" y="255.50"></text></g><g><title>__atan2 (31 samples, 0.72%)</title><rect x="72.8135%" y="261" width="0.7173%" height="15" fill="rgb(219,113,52)" fg:x="3147" fg:w="31"/><text x="73.0635%" y="271.50"></text></g><g><title>__ieee754_atan2_fma (28 samples, 0.65%)</title><rect x="72.8829%" y="245" width="0.6478%" height="15" fill="rgb(214,7,15)" fg:x="3150" fg:w="28"/><text x="73.1329%" y="255.50"></text></g><g><title>libc_feresetround_sse_ctx (1 samples, 0.02%)</title><rect x="73.5076%" y="229" width="0.0231%" height="15" fill="rgb(235,32,4)" fg:x="3177" fg:w="1"/><text x="73.7576%" y="239.50"></text></g><g><title>__ieee754_acos_fma (6 samples, 0.14%)</title><rect x="73.5308%" y="261" width="0.1388%" height="15" fill="rgb(238,90,54)" fg:x="3178" fg:w="6"/><text x="73.7808%" y="271.50"></text></g><g><title>do_cos (2 samples, 0.05%)</title><rect x="73.6696%" y="245" width="0.0463%" height="15" fill="rgb(213,208,19)" fg:x="3184" fg:w="2"/><text x="73.9196%" y="255.50"></text></g><g><title>__sin_fma (5 samples, 0.12%)</title><rect x="73.6696%" y="261" width="0.1157%" height="15" fill="rgb(233,156,4)" fg:x="3184" fg:w="5"/><text x="73.9196%" y="271.50"></text></g><g><title>do_sin (3 samples, 0.07%)</title><rect x="73.7159%" y="245" width="0.0694%" height="15" fill="rgb(207,194,5)" fg:x="3186" fg:w="3"/><text x="73.9659%" y="255.50"></text></g><g><title>crocoddyl::ResidualModelFramePlacementTpl&lt;double&gt;::calc (87 samples, 2.01%)</title><rect x="71.7955%" y="309" width="2.0130%" height="15" fill="rgb(206,111,30)" fg:x="3103" fg:w="87"/><text x="72.0455%" y="319.50">c..</text></g><g><title>pinocchio::log6_impl&lt;double&gt;::run&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (67 samples, 1.55%)</title><rect x="72.2582%" y="293" width="1.5502%" height="15" fill="rgb(243,70,54)" fg:x="3123" fg:w="67"/><text x="72.5082%" y="303.50"></text></g><g><title>pinocchio::log3_impl&lt;double&gt;::run&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; &gt; (58 samples, 1.34%)</title><rect x="72.4665%" y="277" width="1.3420%" height="15" fill="rgb(242,28,8)" fg:x="3132" fg:w="58"/><text x="72.7165%" y="287.50"></text></g><g><title>atan2@plt (1 samples, 0.02%)</title><rect x="73.7853%" y="261" width="0.0231%" height="15" fill="rgb(219,106,18)" fg:x="3189" fg:w="1"/><text x="74.0353%" y="271.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::calc (122 samples, 2.82%)</title><rect x="71.2402%" y="325" width="2.8228%" height="15" fill="rgb(244,222,10)" fg:x="3079" fg:w="122"/><text x="71.4902%" y="335.50">cr..</text></g><g><title>crocoddyl::ResidualModelStateTpl&lt;double&gt;::calc (11 samples, 0.25%)</title><rect x="73.8084%" y="309" width="0.2545%" height="15" fill="rgb(236,179,52)" fg:x="3190" fg:w="11"/><text x="74.0584%" y="319.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::diff (9 samples, 0.21%)</title><rect x="73.8547%" y="293" width="0.2082%" height="15" fill="rgb(213,23,39)" fg:x="3192" fg:w="9"/><text x="74.1047%" y="303.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (5 samples, 0.12%)</title><rect x="73.9472%" y="277" width="0.1157%" height="15" fill="rgb(238,48,10)" fg:x="3196" fg:w="5"/><text x="74.1972%" y="287.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14DifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (4 samples, 0.09%)</title><rect x="73.9704%" y="261" width="0.0925%" height="15" fill="rgb(251,196,23)" fg:x="3197" fg:w="4"/><text x="74.2204%" y="271.50"></text></g><g><title>crocoddyl::CostModelSumTpl&lt;double&gt;::calc (138 samples, 3.19%)</title><rect x="70.9394%" y="341" width="3.1930%" height="15" fill="rgb(250,152,24)" fg:x="3066" fg:w="138"/><text x="71.1894%" y="351.50">cro..</text></g><g><title>std::local_Rb_tree_increment (3 samples, 0.07%)</title><rect x="74.0629%" y="325" width="0.0694%" height="15" fill="rgb(209,150,17)" fg:x="3201" fg:w="3"/><text x="74.3129%" y="335.50"></text></g><g><title>local_Rb_tree_increment (2 samples, 0.05%)</title><rect x="74.0861%" y="309" width="0.0463%" height="15" fill="rgb(234,202,34)" fg:x="3202" fg:w="2"/><text x="74.3361%" y="319.50"></text></g><g><title>Eigen::internal::Assignment&lt;Eigen::TriangularView&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, 9u&gt;, Eigen::TriangularView&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;, 9u&gt;, Eigen::internal::assign_op&lt;double, double&gt;, Eigen::internal::Triangular2Triangular, void&gt;::run (4 samples, 0.09%)</title><rect x="74.2249%" y="325" width="0.0925%" height="15" fill="rgb(253,148,53)" fg:x="3208" fg:w="4"/><text x="74.4749%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.07%)</title><rect x="75.9371%" y="309" width="0.0694%" height="15" fill="rgb(218,129,16)" fg:x="3282" fg:w="3"/><text x="76.1871%" y="319.50"></text></g><g><title>pinocchio::cholesky::internal::Miunit&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt; &gt; (74 samples, 1.71%)</title><rect x="74.3174%" y="325" width="1.7122%" height="15" fill="rgb(216,85,19)" fg:x="3212" fg:w="74"/><text x="74.5674%" y="335.50"></text></g><g><title>memset@plt (1 samples, 0.02%)</title><rect x="76.0065%" y="309" width="0.0231%" height="15" fill="rgb(235,228,7)" fg:x="3285" fg:w="1"/><text x="76.2565%" y="319.50"></text></g><g><title>pinocchio::cholesky::computeMinv&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt; (83 samples, 1.92%)</title><rect x="74.1323%" y="341" width="1.9204%" height="15" fill="rgb(245,175,0)" fg:x="3204" fg:w="83"/><text x="74.3823%" y="351.50">p..</text></g><g><title>pinocchio::cholesky::internal::Miunit&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;, -1, 1, true&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="76.0296%" y="325" width="0.0231%" height="15" fill="rgb(208,168,36)" fg:x="3286" fg:w="1"/><text x="76.2796%" y="335.50"></text></g><g><title>pinocchio::cholesky::decompose&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; (47 samples, 1.09%)</title><rect x="76.0528%" y="341" width="1.0875%" height="15" fill="rgb(246,171,24)" fg:x="3287" fg:w="47"/><text x="76.3028%" y="351.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl14CATForwardStepIdLi0ES16_N5Eigen3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEES1M_EEvE27InternalVisitor (1 samples, 0.02%)</title><rect x="78.3665%" y="325" width="0.0231%" height="15" fill="rgb(215,142,24)" fg:x="3387" fg:w="1"/><text x="78.6165%" y="335.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl14CATForwardStepIdLi0ES16_N5Eigen3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEES1M_EEvE27InternalVisitorModelAndDataINS1_13JointModelTplIdLi0ES16_EENS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES16_EERNS1_7DataTplIdLi0ES16_EERKS1M_S22_EEEEEEENT_11result_typeERS25_ (5 samples, 0.12%)</title><rect x="78.3896%" y="325" width="0.1157%" height="15" fill="rgb(250,187,7)" fg:x="3388" fg:w="5"/><text x="78.6396%" y="335.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl15CATBackwardStepIdLi0ES16_EEvE27InternalVisitorModelAndDataINS1_13JointModelTplIdLi0ES16_EENS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES (1 samples, 0.02%)</title><rect x="78.5053%" y="325" width="0.0231%" height="15" fill="rgb(228,66,33)" fg:x="3393" fg:w="1"/><text x="78.7553%" y="335.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_4impl15CATBackwardStepIdLi0ES16_EEvE27InternalVisitorModelAndDataINS1_13JointModelTplIdLi0ES16_EENS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES16_EERNS1_7DataTplIdLi0ES16_EEEEEEEEENT_11result_typeERS1V_ (1 samples, 0.02%)</title><rect x="78.5285%" y="325" width="0.0231%" height="15" fill="rgb(234,215,21)" fg:x="3394" fg:w="1"/><text x="78.7785%" y="335.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_28KineticEnergyAlgoForwardStepIdLi0ES16_EEvE27InternalVisitorModelAndDataINS1_13JointModelTplIdLi0ES16_EENS_6fusion6vectorIJRKNS1_8ModelTplIdLi0ES16_EERNS1_7DataTplIdLi0ES16_EEEEEEEEENT_11result_typeERS1U_ (2 samples, 0.05%)</title><rect x="78.7598%" y="309" width="0.0463%" height="15" fill="rgb(222,191,20)" fg:x="3404" fg:w="2"/><text x="79.0098%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::vtiv_impl&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (19 samples, 0.44%)</title><rect x="79.0375%" y="293" width="0.4396%" height="15" fill="rgb(245,79,54)" fg:x="3416" fg:w="19"/><text x="79.2875%" y="303.50"></text></g><g><title>pinocchio::computeMechanicalEnergy&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; (41 samples, 0.95%)</title><rect x="78.5516%" y="325" width="0.9486%" height="15" fill="rgb(240,10,37)" fg:x="3395" fg:w="41"/><text x="78.8016%" y="335.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::KineticEnergyAlgoForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (30 samples, 0.69%)</title><rect x="78.8061%" y="309" width="0.6941%" height="15" fill="rgb(214,192,32)" fg:x="3406" fg:w="30"/><text x="79.0561%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::vtiv_impl&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="79.4771%" y="293" width="0.0231%" height="15" fill="rgb(209,36,54)" fg:x="3435" fg:w="1"/><text x="79.7271%" y="303.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointDataRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointDataHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointDataCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;boost::detail::variant::get_visitor&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="79.6159%" y="309" width="0.0231%" height="15" fill="rgb(220,10,11)" fg:x="3441" fg:w="1"/><text x="79.8659%" y="319.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (5 samples, 0.12%)</title><rect x="80.6802%" y="293" width="0.1157%" height="15" fill="rgb(221,106,17)" fg:x="3487" fg:w="5"/><text x="80.9302%" y="303.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="80.7959%" y="293" width="0.0231%" height="15" fill="rgb(251,142,44)" fg:x="3492" fg:w="1"/><text x="81.0459%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (17 samples, 0.39%)</title><rect x="80.8191%" y="293" width="0.3933%" height="15" fill="rgb(238,13,15)" fg:x="3493" fg:w="17"/><text x="81.0691%" y="303.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt;, 3, 1, false&gt; &gt; (2 samples, 0.05%)</title><rect x="81.1661%" y="277" width="0.0463%" height="15" fill="rgb(208,107,27)" fg:x="3508" fg:w="2"/><text x="81.4161%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (13 samples, 0.30%)</title><rect x="81.2124%" y="293" width="0.3008%" height="15" fill="rgb(205,136,37)" fg:x="3510" fg:w="13"/><text x="81.4624%" y="303.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="81.4901%" y="277" width="0.0231%" height="15" fill="rgb(250,205,27)" fg:x="3522" fg:w="1"/><text x="81.7401%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="81.5132%" y="293" width="0.0231%" height="15" fill="rgb(210,80,43)" fg:x="3523" fg:w="1"/><text x="81.7632%" y="303.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;&gt; &gt;::operator (98 samples, 2.27%)</title><rect x="79.5002%" y="325" width="2.2675%" height="15" fill="rgb(247,160,36)" fg:x="3436" fg:w="98"/><text x="79.7502%" y="335.50">p..</text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (92 samples, 2.13%)</title><rect x="79.6391%" y="309" width="2.1286%" height="15" fill="rgb(234,13,49)" fg:x="3442" fg:w="92"/><text x="79.8891%" y="319.50">p..</text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (10 samples, 0.23%)</title><rect x="81.5363%" y="293" width="0.2314%" height="15" fill="rgb(234,122,0)" fg:x="3524" fg:w="10"/><text x="81.7863%" y="303.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-= (2 samples, 0.05%)</title><rect x="81.7214%" y="277" width="0.0463%" height="15" fill="rgb(207,146,38)" fg:x="3532" fg:w="2"/><text x="81.9714%" y="287.50"></text></g><g><title>boost::variant&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 1&gt; &gt;, pinocchio::JointDataMimic&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 2&gt; &gt;, pinocchio::JointDataFreeFlyerTpl&lt;double, 0&gt;, pinocchio::JointDataPlanarTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalTpl&lt;double, 0&gt;, pinocchio::JointDataSphericalZYXTpl&lt;double, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 0&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 1&gt;, pinocchio::JointDataPrismaticTpl&lt;double, 0, 2&gt;, pinocchio::JointDataPrismaticUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataTranslationTpl&lt;double, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 0&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 1&gt;, pinocchio::JointDataRevoluteUnboundedTpl&lt;double, 0, 2&gt;, pinocchio::JointDataRevoluteUnboundedUnalignedTpl&lt;double, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 0&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 1&gt;, pinocchio::JointDataHelicalTpl&lt;double, 0, 2&gt;, pinocchio::JointDataHelicalUnalignedTpl&lt;double, 0&gt;, boost::recursive_wrapper&lt;pinocchio::JointDataCompositeTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::apply_visitor&lt;boost::detail::variant::get_visitor&lt;pinocchio::JointDataRevoluteTpl&lt;double, 0, 0&gt; &gt; &gt; (11 samples, 0.25%)</title><rect x="81.9759%" y="309" width="0.2545%" height="15" fill="rgb(207,177,25)" fg:x="3543" fg:w="11"/><text x="82.2259%" y="319.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (11 samples, 0.25%)</title><rect x="83.8501%" y="293" width="0.2545%" height="15" fill="rgb(211,178,42)" fg:x="3624" fg:w="11"/><text x="84.1001%" y="303.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (2 samples, 0.05%)</title><rect x="84.1046%" y="293" width="0.0463%" height="15" fill="rgb(230,69,54)" fg:x="3635" fg:w="2"/><text x="84.3546%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (19 samples, 0.44%)</title><rect x="84.1509%" y="293" width="0.4396%" height="15" fill="rgb(214,135,41)" fg:x="3637" fg:w="19"/><text x="84.4009%" y="303.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (3 samples, 0.07%)</title><rect x="84.5211%" y="277" width="0.0694%" height="15" fill="rgb(237,67,25)" fg:x="3653" fg:w="3"/><text x="84.7711%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (6 samples, 0.14%)</title><rect x="84.5905%" y="293" width="0.1388%" height="15" fill="rgb(222,189,50)" fg:x="3656" fg:w="6"/><text x="84.8405%" y="303.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt; (5 samples, 0.12%)</title><rect x="84.6136%" y="277" width="0.1157%" height="15" fill="rgb(245,148,34)" fg:x="3657" fg:w="5"/><text x="84.8636%" y="287.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (54 samples, 1.25%)</title><rect x="84.7293%" y="293" width="1.2494%" height="15" fill="rgb(222,29,6)" fg:x="3662" fg:w="54"/><text x="84.9793%" y="303.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator- (4 samples, 0.09%)</title><rect x="85.8862%" y="277" width="0.0925%" height="15" fill="rgb(221,189,43)" fg:x="3712" fg:w="4"/><text x="86.1362%" y="287.50"></text></g><g><title>do_cos (3 samples, 0.07%)</title><rect x="86.0713%" y="245" width="0.0694%" height="15" fill="rgb(207,36,27)" fg:x="3720" fg:w="3"/><text x="86.3213%" y="255.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (13 samples, 0.30%)</title><rect x="85.9787%" y="293" width="0.3008%" height="15" fill="rgb(217,90,24)" fg:x="3716" fg:w="13"/><text x="86.2287%" y="303.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (12 samples, 0.28%)</title><rect x="86.0019%" y="277" width="0.2776%" height="15" fill="rgb(224,66,35)" fg:x="3717" fg:w="12"/><text x="86.2519%" y="287.50"></text></g><g><title>__sincos_fma (10 samples, 0.23%)</title><rect x="86.0481%" y="261" width="0.2314%" height="15" fill="rgb(221,13,50)" fg:x="3719" fg:w="10"/><text x="86.2981%" y="271.50"></text></g><g><title>do_sin (6 samples, 0.14%)</title><rect x="86.1407%" y="245" width="0.1388%" height="15" fill="rgb(236,68,49)" fg:x="3723" fg:w="6"/><text x="86.3907%" y="255.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (12 samples, 0.28%)</title><rect x="86.2795%" y="293" width="0.2776%" height="15" fill="rgb(229,146,28)" fg:x="3729" fg:w="12"/><text x="86.5295%" y="303.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (13 samples, 0.30%)</title><rect x="86.5571%" y="293" width="0.3008%" height="15" fill="rgb(225,31,38)" fg:x="3741" fg:w="13"/><text x="86.8071%" y="303.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="86.8579%" y="293" width="0.0231%" height="15" fill="rgb(250,208,3)" fg:x="3754" fg:w="1"/><text x="87.1079%" y="303.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (19 samples, 0.44%)</title><rect x="86.8811%" y="293" width="0.4396%" height="15" fill="rgb(246,54,23)" fg:x="3755" fg:w="19"/><text x="87.1311%" y="303.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="87.3207%" y="293" width="0.0231%" height="15" fill="rgb(243,76,11)" fg:x="3774" fg:w="1"/><text x="87.5707%" y="303.50"></text></g><g><title>pinocchio::fusion::JointUnaryVisitorBase&lt;pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;, void&gt;::InternalVisitorModelAndData&lt;pinocchio::JointModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, boost::fusion::vector&lt;pinocchio::ModelTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; const&amp;, pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const&amp;&gt; &gt;::operator (263 samples, 6.09%)</title><rect x="81.7677%" y="325" width="6.0851%" height="15" fill="rgb(245,21,50)" fg:x="3534" fg:w="263"/><text x="82.0177%" y="335.50">pinocchi..</text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 0&gt; &gt; (243 samples, 5.62%)</title><rect x="82.2304%" y="309" width="5.6224%" height="15" fill="rgb(228,9,43)" fg:x="3554" fg:w="243"/><text x="82.4804%" y="319.50">pinocch..</text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (22 samples, 0.51%)</title><rect x="87.3438%" y="293" width="0.5090%" height="15" fill="rgb(208,100,47)" fg:x="3775" fg:w="22"/><text x="87.5938%" y="303.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (11 samples, 0.25%)</title><rect x="88.3387%" y="309" width="0.2545%" height="15" fill="rgb(232,26,8)" fg:x="3818" fg:w="11"/><text x="88.5887%" y="319.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="88.5932%" y="309" width="0.0231%" height="15" fill="rgb(216,166,38)" fg:x="3829" fg:w="1"/><text x="88.8432%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (19 samples, 0.44%)</title><rect x="88.6164%" y="309" width="0.4396%" height="15" fill="rgb(251,202,51)" fg:x="3830" fg:w="19"/><text x="88.8664%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt;, 3, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="89.0329%" y="293" width="0.0231%" height="15" fill="rgb(254,216,34)" fg:x="3848" fg:w="1"/><text x="89.2829%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (8 samples, 0.19%)</title><rect x="89.0560%" y="309" width="0.1851%" height="15" fill="rgb(251,32,27)" fg:x="3849" fg:w="8"/><text x="89.3060%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="89.2180%" y="293" width="0.0231%" height="15" fill="rgb(208,127,28)" fg:x="3856" fg:w="1"/><text x="89.4680%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="89.2411%" y="309" width="0.0231%" height="15" fill="rgb(224,137,22)" fg:x="3857" fg:w="1"/><text x="89.4911%" y="319.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (68 samples, 1.57%)</title><rect x="87.8528%" y="325" width="1.5733%" height="15" fill="rgb(254,70,32)" fg:x="3797" fg:w="68"/><text x="88.1028%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (7 samples, 0.16%)</title><rect x="89.2642%" y="309" width="0.1620%" height="15" fill="rgb(229,75,37)" fg:x="3858" fg:w="7"/><text x="89.5142%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-= (5 samples, 0.12%)</title><rect x="89.3105%" y="293" width="0.1157%" height="15" fill="rgb(252,64,23)" fg:x="3860" fg:w="5"/><text x="89.5605%" y="303.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (4 samples, 0.09%)</title><rect x="89.8195%" y="309" width="0.0925%" height="15" fill="rgb(232,162,48)" fg:x="3882" fg:w="4"/><text x="90.0695%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (15 samples, 0.35%)</title><rect x="89.9121%" y="309" width="0.3471%" height="15" fill="rgb(246,160,12)" fg:x="3886" fg:w="15"/><text x="90.1621%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt;, 3, 1, false&gt; &gt; (1 samples, 0.02%)</title><rect x="90.2360%" y="293" width="0.0231%" height="15" fill="rgb(247,166,0)" fg:x="3900" fg:w="1"/><text x="90.4860%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt;@plt (1 samples, 0.02%)</title><rect x="90.2591%" y="309" width="0.0231%" height="15" fill="rgb(249,219,21)" fg:x="3901" fg:w="1"/><text x="90.5091%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (11 samples, 0.25%)</title><rect x="90.2823%" y="309" width="0.2545%" height="15" fill="rgb(205,209,3)" fg:x="3902" fg:w="11"/><text x="90.5323%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="90.5137%" y="293" width="0.0231%" height="15" fill="rgb(243,44,1)" fg:x="3912" fg:w="1"/><text x="90.7637%" y="303.50"></text></g><g><title>pinocchio::impl::CATBackwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (52 samples, 1.20%)</title><rect x="89.4262%" y="325" width="1.2031%" height="15" fill="rgb(206,159,16)" fg:x="3865" fg:w="52"/><text x="89.6762%" y="335.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__pequ__ (4 samples, 0.09%)</title><rect x="90.5368%" y="309" width="0.0925%" height="15" fill="rgb(244,77,30)" fg:x="3913" fg:w="4"/><text x="90.7868%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator-= (2 samples, 0.05%)</title><rect x="90.5831%" y="293" width="0.0463%" height="15" fill="rgb(218,69,12)" fg:x="3915" fg:w="2"/><text x="90.8331%" y="303.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (2 samples, 0.05%)</title><rect x="91.6474%" y="309" width="0.0463%" height="15" fill="rgb(212,87,7)" fg:x="3961" fg:w="2"/><text x="91.8974%" y="319.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="91.6937%" y="309" width="0.0231%" height="15" fill="rgb(245,114,25)" fg:x="3963" fg:w="1"/><text x="91.9437%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (8 samples, 0.19%)</title><rect x="91.7168%" y="309" width="0.1851%" height="15" fill="rgb(210,61,42)" fg:x="3964" fg:w="8"/><text x="91.9668%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (2 samples, 0.05%)</title><rect x="91.8556%" y="293" width="0.0463%" height="15" fill="rgb(211,52,33)" fg:x="3970" fg:w="2"/><text x="92.1056%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="91.9019%" y="309" width="0.0231%" height="15" fill="rgb(234,58,33)" fg:x="3972" fg:w="1"/><text x="92.1519%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (1 samples, 0.02%)</title><rect x="91.9250%" y="309" width="0.0231%" height="15" fill="rgb(220,115,36)" fg:x="3973" fg:w="1"/><text x="92.1750%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (44 samples, 1.02%)</title><rect x="91.9482%" y="309" width="1.0180%" height="15" fill="rgb(243,153,54)" fg:x="3974" fg:w="44"/><text x="92.1982%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator- (3 samples, 0.07%)</title><rect x="92.8968%" y="293" width="0.0694%" height="15" fill="rgb(251,47,18)" fg:x="4015" fg:w="3"/><text x="93.1468%" y="303.50"></text></g><g><title>do_cos (2 samples, 0.05%)</title><rect x="93.0125%" y="261" width="0.0463%" height="15" fill="rgb(242,102,42)" fg:x="4020" fg:w="2"/><text x="93.2625%" y="271.50"></text></g><g><title>do_sin (2 samples, 0.05%)</title><rect x="93.0588%" y="261" width="0.0463%" height="15" fill="rgb(234,31,38)" fg:x="4022" fg:w="2"/><text x="93.3088%" y="271.50"></text></g><g><title>__sincos_fma (7 samples, 0.16%)</title><rect x="92.9894%" y="277" width="0.1620%" height="15" fill="rgb(221,117,51)" fg:x="4019" fg:w="7"/><text x="93.2394%" y="287.50"></text></g><g><title>libc_feholdsetround_sse_ctx (2 samples, 0.05%)</title><rect x="93.1050%" y="261" width="0.0463%" height="15" fill="rgb(212,20,18)" fg:x="4024" fg:w="2"/><text x="93.3550%" y="271.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (9 samples, 0.21%)</title><rect x="92.9662%" y="309" width="0.2082%" height="15" fill="rgb(245,133,36)" fg:x="4018" fg:w="9"/><text x="93.2162%" y="319.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (8 samples, 0.19%)</title><rect x="92.9894%" y="293" width="0.1851%" height="15" fill="rgb(212,6,19)" fg:x="4019" fg:w="8"/><text x="93.2394%" y="303.50"></text></g><g><title>sincos@plt (1 samples, 0.02%)</title><rect x="93.1513%" y="277" width="0.0231%" height="15" fill="rgb(218,1,36)" fg:x="4026" fg:w="1"/><text x="93.4013%" y="287.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;@plt (1 samples, 0.02%)</title><rect x="93.1745%" y="309" width="0.0231%" height="15" fill="rgb(246,84,54)" fg:x="4027" fg:w="1"/><text x="93.4245%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (3 samples, 0.07%)</title><rect x="93.1976%" y="309" width="0.0694%" height="15" fill="rgb(242,110,6)" fg:x="4028" fg:w="3"/><text x="93.4476%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt;@plt (1 samples, 0.02%)</title><rect x="93.2670%" y="309" width="0.0231%" height="15" fill="rgb(214,47,5)" fg:x="4031" fg:w="1"/><text x="93.5170%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (14 samples, 0.32%)</title><rect x="93.2901%" y="309" width="0.3239%" height="15" fill="rgb(218,159,25)" fg:x="4032" fg:w="14"/><text x="93.5401%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="93.6141%" y="309" width="0.0231%" height="15" fill="rgb(215,211,28)" fg:x="4046" fg:w="1"/><text x="93.8641%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (3 samples, 0.07%)</title><rect x="93.6372%" y="309" width="0.0694%" height="15" fill="rgb(238,59,32)" fg:x="4047" fg:w="3"/><text x="93.8872%" y="319.50"></text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 1&gt; &gt; (142 samples, 3.29%)</title><rect x="90.6293%" y="325" width="3.2855%" height="15" fill="rgb(226,82,3)" fg:x="3917" fg:w="142"/><text x="90.8793%" y="335.50">pin..</text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (9 samples, 0.21%)</title><rect x="93.7066%" y="309" width="0.2082%" height="15" fill="rgb(240,164,32)" fg:x="4050" fg:w="9"/><text x="93.9566%" y="319.50"></text></g><g><title>Eigen::DenseBase&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::swap&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; (3 samples, 0.07%)</title><rect x="95.0255%" y="309" width="0.0694%" height="15" fill="rgb(232,46,7)" fg:x="4107" fg:w="3"/><text x="95.2755%" y="319.50"></text></g><g><title>pinocchio::ForceDense&lt;pinocchio::ForceTpl&lt;double, 0&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (3 samples, 0.07%)</title><rect x="95.0949%" y="309" width="0.0694%" height="15" fill="rgb(229,129,53)" fg:x="4110" fg:w="3"/><text x="95.3449%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::ForceTpl&lt;double, 0&gt; &gt; (15 samples, 0.35%)</title><rect x="95.1643%" y="309" width="0.3471%" height="15" fill="rgb(234,188,29)" fg:x="4113" fg:w="15"/><text x="95.4143%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rhsMult&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt; const, 3, 1, false&gt;, Eigen::Block&lt;Eigen::Matrix&lt;double, 6, 1, 0, 6, 1&gt;, 3, 1, false&gt; &gt; (3 samples, 0.07%)</title><rect x="95.4419%" y="293" width="0.0694%" height="15" fill="rgb(246,141,4)" fg:x="4125" fg:w="3"/><text x="95.6919%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt; (5 samples, 0.12%)</title><rect x="95.5113%" y="309" width="0.1157%" height="15" fill="rgb(229,23,39)" fg:x="4128" fg:w="5"/><text x="95.7613%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::rotate&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt; &gt; (2 samples, 0.05%)</title><rect x="95.5807%" y="293" width="0.0463%" height="15" fill="rgb(206,12,3)" fg:x="4131" fg:w="2"/><text x="95.8307%" y="303.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::se3Action_impl&lt;double, 0&gt;@plt (2 samples, 0.05%)</title><rect x="95.6270%" y="309" width="0.0463%" height="15" fill="rgb(252,226,20)" fg:x="4133" fg:w="2"/><text x="95.8770%" y="319.50"></text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::variation&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt; (39 samples, 0.90%)</title><rect x="95.6733%" y="309" width="0.9024%" height="15" fill="rgb(216,123,35)" fg:x="4135" fg:w="39"/><text x="95.9233%" y="319.50"></text></g><g><title>pinocchio::Symmetric3Tpl&lt;double, 0&gt;::operator- (2 samples, 0.05%)</title><rect x="96.5294%" y="293" width="0.0463%" height="15" fill="rgb(212,68,40)" fg:x="4172" fg:w="2"/><text x="96.7794%" y="303.50"></text></g><g><title>do_cos (6 samples, 0.14%)</title><rect x="96.6219%" y="261" width="0.1388%" height="15" fill="rgb(254,125,32)" fg:x="4176" fg:w="6"/><text x="96.8719%" y="271.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (12 samples, 0.28%)</title><rect x="96.5757%" y="309" width="0.2776%" height="15" fill="rgb(253,97,22)" fg:x="4174" fg:w="12"/><text x="96.8257%" y="319.50"></text></g><g><title>pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt;::calc&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (12 samples, 0.28%)</title><rect x="96.5757%" y="293" width="0.2776%" height="15" fill="rgb(241,101,14)" fg:x="4174" fg:w="12"/><text x="96.8257%" y="303.50"></text></g><g><title>__sincos_fma (12 samples, 0.28%)</title><rect x="96.5757%" y="277" width="0.2776%" height="15" fill="rgb(238,103,29)" fg:x="4174" fg:w="12"/><text x="96.8257%" y="287.50"></text></g><g><title>do_sin (4 samples, 0.09%)</title><rect x="96.7608%" y="261" width="0.0925%" height="15" fill="rgb(233,195,47)" fg:x="4182" fg:w="4"/><text x="97.0108%" y="271.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt; &gt;::motionAction&lt;pinocchio::MotionTpl&lt;double, 0&gt;, pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (6 samples, 0.14%)</title><rect x="96.8533%" y="309" width="0.1388%" height="15" fill="rgb(246,218,30)" fg:x="4186" fg:w="6"/><text x="97.1033%" y="319.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3ActionInverse_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (13 samples, 0.30%)</title><rect x="96.9921%" y="309" width="0.3008%" height="15" fill="rgb(219,145,47)" fg:x="4192" fg:w="13"/><text x="97.2421%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="97.2698%" y="293" width="0.0231%" height="15" fill="rgb(243,12,26)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="303.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="97.2698%" y="277" width="0.0231%" height="15" fill="rgb(214,87,16)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="287.50"></text></g><g><title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="97.2698%" y="261" width="0.0231%" height="15" fill="rgb(208,99,42)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="271.50"></text></g><g><title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="97.2698%" y="245" width="0.0231%" height="15" fill="rgb(253,99,2)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="255.50"></text></g><g><title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="97.2698%" y="229" width="0.0231%" height="15" fill="rgb(220,168,23)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="239.50"></text></g><g><title>tick_sched_timer (1 samples, 0.02%)</title><rect x="97.2698%" y="213" width="0.0231%" height="15" fill="rgb(242,38,24)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="223.50"></text></g><g><title>tick_sched_handle (1 samples, 0.02%)</title><rect x="97.2698%" y="197" width="0.0231%" height="15" fill="rgb(225,182,9)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="207.50"></text></g><g><title>update_process_times (1 samples, 0.02%)</title><rect x="97.2698%" y="181" width="0.0231%" height="15" fill="rgb(243,178,37)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="191.50"></text></g><g><title>scheduler_tick (1 samples, 0.02%)</title><rect x="97.2698%" y="165" width="0.0231%" height="15" fill="rgb(232,139,19)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="175.50"></text></g><g><title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="97.2698%" y="149" width="0.0231%" height="15" fill="rgb(225,201,24)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="159.50"></text></g><g><title>perf_adjust_freq_unthr_context (1 samples, 0.02%)</title><rect x="97.2698%" y="133" width="0.0231%" height="15" fill="rgb(221,47,46)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="143.50"></text></g><g><title>_raw_spin_unlock (1 samples, 0.02%)</title><rect x="97.2698%" y="117" width="0.0231%" height="15" fill="rgb(249,23,13)" fg:x="4204" fg:w="1"/><text x="97.5198%" y="127.50"></text></g><g><title>pinocchio::MotionDense&lt;pinocchio::MotionTpl&lt;double, 0&gt; &gt;::se3Action_impl&lt;double, 0, pinocchio::MotionTpl&lt;double, 0&gt; &gt; (11 samples, 0.25%)</title><rect x="97.2929%" y="309" width="0.2545%" height="15" fill="rgb(219,9,5)" fg:x="4205" fg:w="11"/><text x="97.5429%" y="319.50"></text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt; (8 samples, 0.19%)</title><rect x="97.5474%" y="309" width="0.1851%" height="15" fill="rgb(254,171,16)" fg:x="4216" fg:w="8"/><text x="97.7974%" y="319.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::calc (1,223 samples, 28.30%)</title><rect x="69.4817%" y="357" width="28.2971%" height="15" fill="rgb(230,171,20)" fg:x="3003" fg:w="1223"/><text x="69.7317%" y="367.50">crocoddyl::DifferentialActionModelFreeFwdDyna..</text></g><g><title>pinocchio::impl::computeAllTerms&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt; (892 samples, 20.64%)</title><rect x="77.1402%" y="341" width="20.6386%" height="15" fill="rgb(210,71,41)" fg:x="3334" fg:w="892"/><text x="77.3902%" y="351.50">pinocchio::impl::computeAllTerms..</text></g><g><title>pinocchio::impl::CATForwardStep&lt;double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt;, Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; &gt;::algo&lt;pinocchio::JointModelRevoluteTpl&lt;double, 0, 2&gt; &gt; (167 samples, 3.86%)</title><rect x="93.9149%" y="325" width="3.8640%" height="15" fill="rgb(206,173,20)" fg:x="4059" fg:w="167"/><text x="94.1649%" y="335.50">pino..</text></g><g><title>pinocchio::SE3Tpl&lt;double, 0&gt;::SE3Tpl&lt;Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, 0&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;double, double&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt; const, Eigen::Product&lt;Eigen::Matrix&lt;double, 3, 3, 0, 3, 3&gt;, Eigen::Matrix&lt;double, 3, 1, 0, 3, 1&gt;, 0&gt; const&gt; &gt;@plt (2 samples, 0.05%)</title><rect x="97.7325%" y="309" width="0.0463%" height="15" fill="rgb(233,88,34)" fg:x="4224" fg:w="2"/><text x="97.9825%" y="319.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::calc (1,254 samples, 29.01%)</title><rect x="68.9958%" y="373" width="29.0143%" height="15" fill="rgb(223,209,46)" fg:x="2982" fg:w="1254"/><text x="69.2458%" y="383.50">crocoddyl::IntegratedActionModelEulerTpl&lt;double..</text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::integrate (10 samples, 0.23%)</title><rect x="97.7788%" y="357" width="0.2314%" height="15" fill="rgb(250,43,18)" fg:x="4226" fg:w="10"/><text x="98.0288%" y="367.50"></text></g><g><title>pinocchio::integrate&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (7 samples, 0.16%)</title><rect x="97.8482%" y="341" width="0.1620%" height="15" fill="rgb(208,13,10)" fg:x="4229" fg:w="7"/><text x="98.0982%" y="351.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_13IntegrateStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (6 samples, 0.14%)</title><rect x="97.8714%" y="325" width="0.1388%" height="15" fill="rgb(212,200,36)" fg:x="4230" fg:w="6"/><text x="98.1214%" y="335.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::diff (8 samples, 0.19%)</title><rect x="98.0102%" y="373" width="0.1851%" height="15" fill="rgb(225,90,30)" fg:x="4236" fg:w="8"/><text x="98.2602%" y="383.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (6 samples, 0.14%)</title><rect x="98.0565%" y="357" width="0.1388%" height="15" fill="rgb(236,182,39)" fg:x="4238" fg:w="6"/><text x="98.3065%" y="367.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14DifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (5 samples, 0.12%)</title><rect x="98.0796%" y="341" width="0.1157%" height="15" fill="rgb(212,144,35)" fg:x="4239" fg:w="5"/><text x="98.3296%" y="351.50"></text></g><g><title>crocoddyl::SolverDDP::tryStep (1,286 samples, 29.75%)</title><rect x="68.4637%" y="405" width="29.7547%" height="15" fill="rgb(228,63,44)" fg:x="2959" fg:w="1286"/><text x="68.7137%" y="415.50">crocoddyl::SolverDDP::tryStep</text></g><g><title>crocoddyl::SolverFDDP::forwardPass (1,286 samples, 29.75%)</title><rect x="68.4637%" y="389" width="29.7547%" height="15" fill="rgb(228,109,6)" fg:x="2959" fg:w="1286"/><text x="68.7137%" y="399.50">crocoddyl::SolverFDDP::forwardPass</text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::integrate (1 samples, 0.02%)</title><rect x="98.1953%" y="373" width="0.0231%" height="15" fill="rgb(238,117,24)" fg:x="4244" fg:w="1"/><text x="98.4453%" y="383.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (16 samples, 0.37%)</title><rect x="98.2878%" y="389" width="0.3702%" height="15" fill="rgb(242,26,26)" fg:x="4248" fg:w="16"/><text x="98.5378%" y="399.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="98.6580%" y="389" width="0.0231%" height="15" fill="rgb(221,92,48)" fg:x="4264" fg:w="1"/><text x="98.9080%" y="399.50"></text></g><g><title>crocoddyl::SolverFDDP::expectedImprovement (24 samples, 0.56%)</title><rect x="98.2184%" y="405" width="0.5553%" height="15" fill="rgb(209,209,32)" fg:x="4245" fg:w="24"/><text x="98.4684%" y="415.50"></text></g><g><title>crocoddyl::StateMultibodyTpl&lt;double&gt;::diff (4 samples, 0.09%)</title><rect x="98.6812%" y="389" width="0.0925%" height="15" fill="rgb(221,70,22)" fg:x="4265" fg:w="4"/><text x="98.9312%" y="399.50"></text></g><g><title>pinocchio::difference&lt;pinocchio::LieGroupMap, double, 0, pinocchio::JointCollectionDefaultTpl, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; const, 0, Eigen::InnerStride&lt;1&gt; &gt; const, -1, 1, false&gt;, Eigen::Block&lt;Eigen::Ref&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;, 0, Eigen::InnerStride&lt;1&gt; &gt;, -1, 1, false&gt; &gt; (3 samples, 0.07%)</title><rect x="98.7043%" y="373" width="0.0694%" height="15" fill="rgb(248,145,5)" fg:x="4266" fg:w="3"/><text x="98.9543%" y="383.50"></text></g><g><title>_ZNKR5boost7variantIN9pinocchio21JointModelRevoluteTplIdLi0ELi0EEEJNS2_IdLi0ELi1EEENS2_IdLi0ELi2EEENS1_15JointModelMimicIS3_EENS6_IS4_EENS6_IS5_EENS1_22JointModelFreeFlyerTplIdLi0EEENS1_19JointModelPlanarTplIdLi0EEENS1_30JointModelRevoluteUnalignedTplIdLi0EEENS1_22JointModelSphericalTplIdLi0EEENS1_25JointModelSphericalZYXTplIdLi0EEENS1_22JointModelPrismaticTplIdLi0ELi0EEENSK_IdLi0ELi1EEENSK_IdLi0ELi2EEENS1_31JointModelPrismaticUnalignedTplIdLi0EEENS1_24JointModelTranslationTplIdLi0EEENS1_30JointModelRevoluteUnboundedTplIdLi0ELi0EEENSS_IdLi0ELi1EEENSS_IdLi0ELi2EEENS1_39JointModelRevoluteUnboundedUnalignedTplIdLi0EEENS1_20JointModelHelicalTplIdLi0ELi0EEENSY_IdLi0ELi1EEENSY_IdLi0ELi2EEENS1_29JointModelHelicalUnalignedTplIdLi0EEENS_17recursive_wrapperINS1_22JointModelCompositeTplIdLi0ENS1_25JointCollectionDefaultTplEEEEEEE13apply_visitorINS1_6fusion21JointUnaryVisitorBaseINS1_14DifferenceStepINS1_11LieGroupMapEN5Eigen5BlockIKNS1F_3RefIKNS1F_6MatrixIdLin1ELi1ELi0ELin1ELi1EEELi0ENS1F_11InnerStrideILi1EEEEELin1ELi1ELb0EEES1P_NS1G_INS1H_IS1J_Li0ES1M_EELin1ELi1ELb0EEEEEvE20InternalVisitorModelINS_6fusion6vectorIJRKS1P_S1Y_RS1R_EEEvEEEENT_11result_typeERS22_ (3 samples, 0.07%)</title><rect x="98.7043%" y="357" width="0.0694%" height="15" fill="rgb(226,116,26)" fg:x="4266" fg:w="3"/><text x="98.9543%" y="367.50"></text></g><g><title>crocoddyl::SolverFDDP::solve (4,107 samples, 95.03%)</title><rect x="3.9102%" y="421" width="95.0255%" height="15" fill="rgb(244,5,17)" fg:x="169" fg:w="4107"/><text x="4.1602%" y="431.50">crocoddyl::SolverFDDP::solve</text></g><g><title>crocoddyl::SolverFDDP::updateExpectedImprovement (7 samples, 0.16%)</title><rect x="98.7737%" y="405" width="0.1620%" height="15" fill="rgb(252,159,33)" fg:x="4269" fg:w="7"/><text x="99.0237%" y="415.50"></text></g><g><title>Eigen::internal::general_matrix_vector_product&lt;long, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 0&gt;, 0, false, double, Eigen::internal::const_blas_data_mapper&lt;double, long, 1&gt;, false, 0&gt;::run (6 samples, 0.14%)</title><rect x="98.7969%" y="389" width="0.1388%" height="15" fill="rgb(206,71,0)" fg:x="4270" fg:w="6"/><text x="99.0469%" y="399.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::CostDataSumTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataSumTpl&lt;double&gt; &gt;, crocoddyl::CostModelSumTpl&lt;double&gt;*, crocoddyl::DataCollectorAbstractTpl&lt;double&gt;* const&amp;&gt; (2 samples, 0.05%)</title><rect x="98.9357%" y="261" width="0.0463%" height="15" fill="rgb(233,118,54)" fg:x="4276" fg:w="2"/><text x="99.1857%" y="271.50"></text></g><g><title>crocoddyl::CostDataSumTpl&lt;double&gt;::CostDataSumTpl&lt;crocoddyl::CostModelSumTpl&gt; (2 samples, 0.05%)</title><rect x="98.9357%" y="245" width="0.0463%" height="15" fill="rgb(234,83,48)" fg:x="4276" fg:w="2"/><text x="99.1857%" y="255.50"></text></g><g><title>crocoddyl::CostModelResidualTpl&lt;double&gt;::createData (2 samples, 0.05%)</title><rect x="98.9357%" y="229" width="0.0463%" height="15" fill="rgb(228,3,54)" fg:x="4276" fg:w="2"/><text x="99.1857%" y="239.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::CostDataResidualTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::CostDataResidualTpl&lt;double&gt; &gt;, crocoddyl::CostModelResidualTpl&lt;double&gt;*, crocoddyl::DataCollectorAbstractTpl&lt;double&gt;* const&amp;&gt; (1 samples, 0.02%)</title><rect x="98.9588%" y="213" width="0.0231%" height="15" fill="rgb(226,155,13)" fg:x="4277" fg:w="1"/><text x="99.2088%" y="223.50"></text></g><g><title>crocoddyl::CostDataResidualTpl&lt;double&gt;::CostDataResidualTpl&lt;crocoddyl::CostModelResidualTpl&gt; (1 samples, 0.02%)</title><rect x="98.9588%" y="197" width="0.0231%" height="15" fill="rgb(241,28,37)" fg:x="4277" fg:w="1"/><text x="99.2088%" y="207.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="98.9588%" y="181" width="0.0231%" height="15" fill="rgb(233,93,10)" fg:x="4277" fg:w="1"/><text x="99.2088%" y="191.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.9588%" y="165" width="0.0231%" height="15" fill="rgb(225,113,19)" fg:x="4277" fg:w="1"/><text x="99.2088%" y="175.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="98.9588%" y="149" width="0.0231%" height="15" fill="rgb(241,2,18)" fg:x="4277" fg:w="1"/><text x="99.2088%" y="159.50"></text></g><g><title>Eigen::DenseStorage&lt;double, -1, -1, -1, 0&gt;::resize (1 samples, 0.02%)</title><rect x="98.9820%" y="213" width="0.0231%" height="15" fill="rgb(228,207,21)" fg:x="4278" fg:w="1"/><text x="99.2320%" y="223.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="98.9820%" y="197" width="0.0231%" height="15" fill="rgb(213,211,35)" fg:x="4278" fg:w="1"/><text x="99.2320%" y="207.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="99.0051%" y="213" width="0.0231%" height="15" fill="rgb(209,83,10)" fg:x="4279" fg:w="1"/><text x="99.2551%" y="223.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="99.0051%" y="197" width="0.0231%" height="15" fill="rgb(209,164,1)" fg:x="4279" fg:w="1"/><text x="99.2551%" y="207.50"></text></g><g><title>crocoddyl::ActuationModelFullTpl&lt;double&gt;::createData (3 samples, 0.07%)</title><rect x="98.9820%" y="261" width="0.0694%" height="15" fill="rgb(213,184,43)" fg:x="4278" fg:w="3"/><text x="99.2320%" y="271.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::ActuationDataAbstractTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::ActuationDataAbstractTpl&lt;double&gt; &gt;, crocoddyl::ActuationModelFullTpl&lt;double&gt;*&gt; (3 samples, 0.07%)</title><rect x="98.9820%" y="245" width="0.0694%" height="15" fill="rgb(231,61,34)" fg:x="4278" fg:w="3"/><text x="99.2320%" y="255.50"></text></g><g><title>crocoddyl::ActuationDataAbstractTpl&lt;double&gt;::ActuationDataAbstractTpl&lt;crocoddyl::ActuationModelFullTpl&gt; (3 samples, 0.07%)</title><rect x="98.9820%" y="229" width="0.0694%" height="15" fill="rgb(235,75,3)" fg:x="4278" fg:w="3"/><text x="99.2320%" y="239.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="99.0282%" y="213" width="0.0231%" height="15" fill="rgb(220,106,47)" fg:x="4280" fg:w="1"/><text x="99.2782%" y="223.50"></text></g><g><title>crocoddyl::DifferentialActionDataAbstractTpl&lt;double&gt;::DifferentialActionDataAbstractTpl&lt;crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&gt; (1 samples, 0.02%)</title><rect x="99.0514%" y="261" width="0.0231%" height="15" fill="rgb(210,196,33)" fg:x="4281" fg:w="1"/><text x="99.3014%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="99.0514%" y="245" width="0.0231%" height="15" fill="rgb(229,154,42)" fg:x="4281" fg:w="1"/><text x="99.3014%" y="255.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="99.0514%" y="229" width="0.0231%" height="15" fill="rgb(228,114,26)" fg:x="4281" fg:w="1"/><text x="99.3014%" y="239.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="99.0514%" y="213" width="0.0231%" height="15" fill="rgb(208,144,1)" fg:x="4281" fg:w="1"/><text x="99.3014%" y="223.50"></text></g><g><title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt; &gt;::resize (1 samples, 0.02%)</title><rect x="99.0976%" y="245" width="0.0231%" height="15" fill="rgb(239,112,37)" fg:x="4283" fg:w="1"/><text x="99.3476%" y="255.50"></text></g><g><title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;double, 3, -1, 0, 3, -1&gt; &gt;::resize (1 samples, 0.02%)</title><rect x="99.1208%" y="245" width="0.0231%" height="15" fill="rgb(210,96,50)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="255.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="99.1208%" y="229" width="0.0231%" height="15" fill="rgb(222,178,2)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="239.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="99.1208%" y="213" width="0.0231%" height="15" fill="rgb(226,74,18)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="223.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="99.1208%" y="197" width="0.0231%" height="15" fill="rgb(225,67,54)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="207.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="99.1208%" y="181" width="0.0231%" height="15" fill="rgb(251,92,32)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="191.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="99.1208%" y="165" width="0.0231%" height="15" fill="rgb(228,149,22)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="175.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="99.1208%" y="149" width="0.0231%" height="15" fill="rgb(243,54,13)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="159.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="99.1208%" y="133" width="0.0231%" height="15" fill="rgb(243,180,28)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="143.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="99.1208%" y="117" width="0.0231%" height="15" fill="rgb(208,167,24)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="127.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="99.1208%" y="101" width="0.0231%" height="15" fill="rgb(245,73,45)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="111.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.02%)</title><rect x="99.1208%" y="85" width="0.0231%" height="15" fill="rgb(237,203,48)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="95.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="99.1208%" y="69" width="0.0231%" height="15" fill="rgb(211,197,16)" fg:x="4284" fg:w="1"/><text x="99.3708%" y="79.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="99.1439%" y="181" width="0.0231%" height="15" fill="rgb(243,99,51)" fg:x="4285" fg:w="1"/><text x="99.3939%" y="191.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="99.1671%" y="181" width="0.0231%" height="15" fill="rgb(215,123,29)" fg:x="4286" fg:w="1"/><text x="99.4171%" y="191.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="99.1671%" y="165" width="0.0231%" height="15" fill="rgb(239,186,37)" fg:x="4286" fg:w="1"/><text x="99.4171%" y="175.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="99.1671%" y="149" width="0.0231%" height="15" fill="rgb(252,136,39)" fg:x="4286" fg:w="1"/><text x="99.4171%" y="159.50"></text></g><g><title>handle_mm_fault (1 samples, 0.02%)</title><rect x="99.1671%" y="133" width="0.0231%" height="15" fill="rgb(223,213,32)" fg:x="4286" fg:w="1"/><text x="99.4171%" y="143.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="99.1671%" y="117" width="0.0231%" height="15" fill="rgb(233,115,5)" fg:x="4286" fg:w="1"/><text x="99.4171%" y="127.50"></text></g><g><title>handle_pte_fault (1 samples, 0.02%)</title><rect x="99.1671%" y="101" width="0.0231%" height="15" fill="rgb(207,226,44)" fg:x="4286" fg:w="1"/><text x="99.4171%" y="111.50"></text></g><g><title>do_anonymous_page (1 samples, 0.02%)</title><rect x="99.1671%" y="85" width="0.0231%" height="15" fill="rgb(208,126,0)" fg:x="4286" fg:w="1"/><text x="99.4171%" y="95.50"></text></g><g><title>vma_alloc_folio (1 samples, 0.02%)</title><rect x="99.1671%" y="69" width="0.0231%" height="15" fill="rgb(244,66,21)" fg:x="4286" fg:w="1"/><text x="99.4171%" y="79.50"></text></g><g><title>__folio_alloc (1 samples, 0.02%)</title><rect x="99.1671%" y="53" width="0.0231%" height="15" fill="rgb(222,97,12)" fg:x="4286" fg:w="1"/><text x="99.4171%" y="63.50"></text></g><g><title>__alloc_pages (1 samples, 0.02%)</title><rect x="99.1671%" y="37" width="0.0231%" height="15" fill="rgb(219,213,19)" fg:x="4286" fg:w="1"/><text x="99.4171%" y="47.50"></text></g><g><title>Eigen::aligned_allocator&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt;::allocate (3 samples, 0.07%)</title><rect x="99.1439%" y="229" width="0.0694%" height="15" fill="rgb(252,169,30)" fg:x="4285" fg:w="3"/><text x="99.3939%" y="239.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.07%)</title><rect x="99.1439%" y="213" width="0.0694%" height="15" fill="rgb(206,32,51)" fg:x="4285" fg:w="3"/><text x="99.3939%" y="223.50"></text></g><g><title>_int_malloc (3 samples, 0.07%)</title><rect x="99.1439%" y="197" width="0.0694%" height="15" fill="rgb(250,172,42)" fg:x="4285" fg:w="3"/><text x="99.3939%" y="207.50"></text></g><g><title>sync_regs (1 samples, 0.02%)</title><rect x="99.1902%" y="181" width="0.0231%" height="15" fill="rgb(209,34,43)" fg:x="4287" fg:w="1"/><text x="99.4402%" y="191.50"></text></g><g><title>std::vector&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt;, Eigen::aligned_allocator&lt;Eigen::Matrix&lt;double, 6, 6, 0, 6, 6&gt; &gt; &gt;::vector (5 samples, 0.12%)</title><rect x="99.1439%" y="245" width="0.1157%" height="15" fill="rgb(223,11,35)" fg:x="4285" fg:w="5"/><text x="99.3939%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="99.2133%" y="229" width="0.0463%" height="15" fill="rgb(251,219,26)" fg:x="4288" fg:w="2"/><text x="99.4633%" y="239.50"></text></g><g><title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (1 samples, 0.02%)</title><rect x="99.2596%" y="245" width="0.0231%" height="15" fill="rgb(231,119,3)" fg:x="4290" fg:w="1"/><text x="99.5096%" y="255.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.02%)</title><rect x="99.3059%" y="181" width="0.0231%" height="15" fill="rgb(216,97,11)" fg:x="4292" fg:w="1"/><text x="99.5559%" y="191.50"></text></g><g><title>std::vector&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;, Eigen::aligned_allocator&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; &gt;::_M_realloc_insert&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt; (3 samples, 0.07%)</title><rect x="99.2827%" y="245" width="0.0694%" height="15" fill="rgb(223,59,9)" fg:x="4291" fg:w="3"/><text x="99.5327%" y="255.50"></text></g><g><title>Eigen::aligned_allocator&lt;pinocchio::JointDataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt; &gt;::allocate (3 samples, 0.07%)</title><rect x="99.2827%" y="229" width="0.0694%" height="15" fill="rgb(233,93,31)" fg:x="4291" fg:w="3"/><text x="99.5327%" y="239.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.07%)</title><rect x="99.2827%" y="213" width="0.0694%" height="15" fill="rgb(239,81,33)" fg:x="4291" fg:w="3"/><text x="99.5327%" y="223.50"></text></g><g><title>_int_malloc (3 samples, 0.07%)</title><rect x="99.2827%" y="197" width="0.0694%" height="15" fill="rgb(213,120,34)" fg:x="4291" fg:w="3"/><text x="99.5327%" y="207.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.02%)</title><rect x="99.3290%" y="181" width="0.0231%" height="15" fill="rgb(243,49,53)" fg:x="4293" fg:w="1"/><text x="99.5790%" y="191.50"></text></g><g><title>exc_page_fault (1 samples, 0.02%)</title><rect x="99.3290%" y="165" width="0.0231%" height="15" fill="rgb(247,216,33)" fg:x="4293" fg:w="1"/><text x="99.5790%" y="175.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.02%)</title><rect x="99.3290%" y="149" width="0.0231%" height="15" fill="rgb(226,26,14)" fg:x="4293" fg:w="1"/><text x="99.5790%" y="159.50"></text></g><g><title>boost::make_shared&lt;crocoddyl::ShootingProblemTpl&lt;double&gt;, Eigen::Matrix&lt;double, -1, 1, 0, -1, 1&gt;&amp;, std::vector&lt;boost::shared_ptr&lt;crocoddyl::ActionModelAbstractTpl&lt;double&gt; &gt;, std::allocator&lt;boost::shared_ptr&lt;crocoddyl::ActionModelAbstractTpl&lt;double&gt; &gt; &gt; &gt;&amp;, boost::shared_ptr&lt;crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt; &gt;&amp;&gt; (19 samples, 0.44%)</title><rect x="98.9357%" y="405" width="0.4396%" height="15" fill="rgb(215,49,53)" fg:x="4276" fg:w="19"/><text x="99.1857%" y="415.50"></text></g><g><title>crocoddyl::ShootingProblemTpl&lt;double&gt;::ShootingProblemTpl (19 samples, 0.44%)</title><rect x="98.9357%" y="389" width="0.4396%" height="15" fill="rgb(245,162,40)" fg:x="4276" fg:w="19"/><text x="99.1857%" y="399.50"></text></g><g><title>crocoddyl::ShootingProblemTpl&lt;double&gt;::allocateData (19 samples, 0.44%)</title><rect x="98.9357%" y="373" width="0.4396%" height="15" fill="rgb(229,68,17)" fg:x="4276" fg:w="19"/><text x="99.1857%" y="383.50"></text></g><g><title>crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;::createData (19 samples, 0.44%)</title><rect x="98.9357%" y="357" width="0.4396%" height="15" fill="rgb(213,182,10)" fg:x="4276" fg:w="19"/><text x="99.1857%" y="367.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt; &gt;, crocoddyl::IntegratedActionModelEulerTpl&lt;double&gt;*&gt; (19 samples, 0.44%)</title><rect x="98.9357%" y="341" width="0.4396%" height="15" fill="rgb(245,125,30)" fg:x="4276" fg:w="19"/><text x="99.1857%" y="351.50"></text></g><g><title>crocoddyl::IntegratedActionDataEulerTpl&lt;double&gt;::IntegratedActionDataEulerTpl&lt;crocoddyl::IntegratedActionModelEulerTpl&gt; (19 samples, 0.44%)</title><rect x="98.9357%" y="325" width="0.4396%" height="15" fill="rgb(232,202,2)" fg:x="4276" fg:w="19"/><text x="99.1857%" y="335.50"></text></g><g><title>crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;::createData (19 samples, 0.44%)</title><rect x="98.9357%" y="309" width="0.4396%" height="15" fill="rgb(237,140,51)" fg:x="4276" fg:w="19"/><text x="99.1857%" y="319.50"></text></g><g><title>boost::allocate_shared&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;, Eigen::aligned_allocator&lt;crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt; &gt;, crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&lt;double&gt;*&gt; (19 samples, 0.44%)</title><rect x="98.9357%" y="293" width="0.4396%" height="15" fill="rgb(236,157,25)" fg:x="4276" fg:w="19"/><text x="99.1857%" y="303.50"></text></g><g><title>crocoddyl::DifferentialActionDataFreeFwdDynamicsTpl&lt;double&gt;::DifferentialActionDataFreeFwdDynamicsTpl&lt;crocoddyl::DifferentialActionModelFreeFwdDynamicsTpl&gt; (19 samples, 0.44%)</title><rect x="98.9357%" y="277" width="0.4396%" height="15" fill="rgb(219,209,0)" fg:x="4276" fg:w="19"/><text x="99.1857%" y="287.50"></text></g><g><title>pinocchio::DataTpl&lt;double, 0, pinocchio::JointCollectionDefaultTpl&gt;::DataTpl (13 samples, 0.30%)</title><rect x="99.0745%" y="261" width="0.3008%" height="15" fill="rgb(240,116,54)" fg:x="4282" fg:w="13"/><text x="99.3245%" y="271.50"></text></g><g><title>std::vector&lt;pinocchio::SE3Tpl&lt;double, 0&gt;, Eigen::aligned_allocator&lt;pinocchio::SE3Tpl&lt;double, 0&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="99.3522%" y="245" width="0.0231%" height="15" fill="rgb(216,10,36)" fg:x="4294" fg:w="1"/><text x="99.6022%" y="255.50"></text></g><g><title>pinocchio::urdf::details::parseRootTree (1 samples, 0.02%)</title><rect x="99.3753%" y="389" width="0.0231%" height="15" fill="rgb(222,72,44)" fg:x="4295" fg:w="1"/><text x="99.6253%" y="399.50"></text></g><g><title>pinocchio::urdf::details::parseTree (1 samples, 0.02%)</title><rect x="99.3753%" y="373" width="0.0231%" height="15" fill="rgb(232,159,9)" fg:x="4295" fg:w="1"/><text x="99.6253%" y="383.50"></text></g><g><title>pinocchio::urdf::details::parseTree (1 samples, 0.02%)</title><rect x="99.3753%" y="357" width="0.0231%" height="15" fill="rgb(210,39,32)" fg:x="4295" fg:w="1"/><text x="99.6253%" y="367.50"></text></g><g><title>pinocchio::urdf::details::parseTree (1 samples, 0.02%)</title><rect x="99.3753%" y="341" width="0.0231%" height="15" fill="rgb(216,194,45)" fg:x="4295" fg:w="1"/><text x="99.6253%" y="351.50"></text></g><g><title>pinocchio::urdf::details::parseTree (1 samples, 0.02%)</title><rect x="99.3753%" y="325" width="0.0231%" height="15" fill="rgb(218,18,35)" fg:x="4295" fg:w="1"/><text x="99.6253%" y="335.50"></text></g><g><title>pinocchio::urdf::details::parseTree (1 samples, 0.02%)</title><rect x="99.3753%" y="309" width="0.0231%" height="15" fill="rgb(207,83,51)" fg:x="4295" fg:w="1"/><text x="99.6253%" y="319.50"></text></g><g><title>pinocchio::urdf::details::parseTree (1 samples, 0.02%)</title><rect x="99.3753%" y="293" width="0.0231%" height="15" fill="rgb(225,63,43)" fg:x="4295" fg:w="1"/><text x="99.6253%" y="303.50"></text></g><g><title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="99.3753%" y="277" width="0.0231%" height="15" fill="rgb(207,57,36)" fg:x="4295" fg:w="1"/><text x="99.6253%" y="287.50"></text></g><g><title>std::__ostream_write&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="99.3753%" y="261" width="0.0231%" height="15" fill="rgb(216,99,33)" fg:x="4295" fg:w="1"/><text x="99.6253%" y="271.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.02%)</title><rect x="99.3753%" y="245" width="0.0231%" height="15" fill="rgb(225,42,16)" fg:x="4295" fg:w="1"/><text x="99.6253%" y="255.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (4 samples, 0.09%)</title><rect x="99.3984%" y="373" width="0.0925%" height="15" fill="rgb(220,201,45)" fg:x="4296" fg:w="4"/><text x="99.6484%" y="383.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (4 samples, 0.09%)</title><rect x="99.3984%" y="357" width="0.0925%" height="15" fill="rgb(225,33,4)" fg:x="4296" fg:w="4"/><text x="99.6484%" y="367.50"></text></g><g><title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (4 samples, 0.09%)</title><rect x="99.3984%" y="341" width="0.0925%" height="15" fill="rgb(224,33,50)" fg:x="4296" fg:w="4"/><text x="99.6484%" y="351.50"></text></g><g><title>operator new (4 samples, 0.09%)</title><rect x="99.3984%" y="325" width="0.0925%" height="15" fill="rgb(246,198,51)" fg:x="4296" fg:w="4"/><text x="99.6484%" y="335.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.09%)</title><rect x="99.3984%" y="309" width="0.0925%" height="15" fill="rgb(205,22,4)" fg:x="4296" fg:w="4"/><text x="99.6484%" y="319.50"></text></g><g><title>_int_malloc (4 samples, 0.09%)</title><rect x="99.3984%" y="293" width="0.0925%" height="15" fill="rgb(206,3,8)" fg:x="4296" fg:w="4"/><text x="99.6484%" y="303.50"></text></g><g><title>malloc_consolidate (4 samples, 0.09%)</title><rect x="99.3984%" y="277" width="0.0925%" height="15" fill="rgb(251,23,15)" fg:x="4296" fg:w="4"/><text x="99.6484%" y="287.50"></text></g><g><title>unlink_chunk (1 samples, 0.02%)</title><rect x="99.4678%" y="261" width="0.0231%" height="15" fill="rgb(252,88,28)" fg:x="4299" fg:w="1"/><text x="99.7178%" y="271.50"></text></g><g><title>TiXmlComment::Parse (1 samples, 0.02%)</title><rect x="99.4910%" y="277" width="0.0231%" height="15" fill="rgb(212,127,14)" fg:x="4300" fg:w="1"/><text x="99.7410%" y="287.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.02%)</title><rect x="99.4910%" y="261" width="0.0231%" height="15" fill="rgb(247,145,37)" fg:x="4300" fg:w="1"/><text x="99.7410%" y="271.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.02%)</title><rect x="99.4910%" y="245" width="0.0231%" height="15" fill="rgb(209,117,53)" fg:x="4300" fg:w="1"/><text x="99.7410%" y="255.50"></text></g><g><title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="99.4910%" y="229" width="0.0231%" height="15" fill="rgb(212,90,42)" fg:x="4300" fg:w="1"/><text x="99.7410%" y="239.50"></text></g><g><title>TiXmlElement::Parse (1 samples, 0.02%)</title><rect x="99.5141%" y="245" width="0.0231%" height="15" fill="rgb(218,164,37)" fg:x="4301" fg:w="1"/><text x="99.7641%" y="255.50"></text></g><g><title>TiXmlDocument::Parse (3 samples, 0.07%)</title><rect x="99.4910%" y="357" width="0.0694%" height="15" fill="rgb(246,65,34)" fg:x="4300" fg:w="3"/><text x="99.7410%" y="367.50"></text></g><g><title>TiXmlElement::Parse (3 samples, 0.07%)</title><rect x="99.4910%" y="341" width="0.0694%" height="15" fill="rgb(231,100,33)" fg:x="4300" fg:w="3"/><text x="99.7410%" y="351.50"></text></g><g><title>TiXmlElement::ReadValue (3 samples, 0.07%)</title><rect x="99.4910%" y="325" width="0.0694%" height="15" fill="rgb(228,126,14)" fg:x="4300" fg:w="3"/><text x="99.7410%" y="335.50"></text></g><g><title>TiXmlElement::Parse (3 samples, 0.07%)</title><rect x="99.4910%" y="309" width="0.0694%" height="15" fill="rgb(215,173,21)" fg:x="4300" fg:w="3"/><text x="99.7410%" y="319.50"></text></g><g><title>TiXmlElement::ReadValue (3 samples, 0.07%)</title><rect x="99.4910%" y="293" width="0.0694%" height="15" fill="rgb(210,6,40)" fg:x="4300" fg:w="3"/><text x="99.7410%" y="303.50"></text></g><g><title>TiXmlElement::Parse (2 samples, 0.05%)</title><rect x="99.5141%" y="277" width="0.0463%" height="15" fill="rgb(212,48,18)" fg:x="4301" fg:w="2"/><text x="99.7641%" y="287.50"></text></g><g><title>TiXmlElement::ReadValue (2 samples, 0.05%)</title><rect x="99.5141%" y="261" width="0.0463%" height="15" fill="rgb(230,214,11)" fg:x="4301" fg:w="2"/><text x="99.7641%" y="271.50"></text></g><g><title>TiXmlNode::Identify (1 samples, 0.02%)</title><rect x="99.5373%" y="245" width="0.0231%" height="15" fill="rgb(254,105,39)" fg:x="4302" fg:w="1"/><text x="99.7873%" y="255.50"></text></g><g><title>TiXmlElement::TiXmlElement (1 samples, 0.02%)</title><rect x="99.5373%" y="229" width="0.0231%" height="15" fill="rgb(245,158,5)" fg:x="4302" fg:w="1"/><text x="99.7873%" y="239.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.02%)</title><rect x="99.5373%" y="213" width="0.0231%" height="15" fill="rgb(249,208,11)" fg:x="4302" fg:w="1"/><text x="99.7873%" y="223.50"></text></g><g><title>urdf::parseJoint (1 samples, 0.02%)</title><rect x="99.5604%" y="357" width="0.0231%" height="15" fill="rgb(210,39,28)" fg:x="4303" fg:w="1"/><text x="99.8104%" y="367.50"></text></g><g><title>urdf::parseJointDynamics (1 samples, 0.02%)</title><rect x="99.5604%" y="341" width="0.0231%" height="15" fill="rgb(211,56,53)" fg:x="4303" fg:w="1"/><text x="99.8104%" y="351.50"></text></g><g><title>urdf::strToDouble (1 samples, 0.02%)</title><rect x="99.5604%" y="325" width="0.0231%" height="15" fill="rgb(226,201,30)" fg:x="4303" fg:w="1"/><text x="99.8104%" y="335.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="99.5604%" y="309" width="0.0231%" height="15" fill="rgb(239,101,34)" fg:x="4303" fg:w="1"/><text x="99.8104%" y="319.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="99.5604%" y="293" width="0.0231%" height="15" fill="rgb(226,209,5)" fg:x="4303" fg:w="1"/><text x="99.8104%" y="303.50"></text></g><g><title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="99.5604%" y="277" width="0.0231%" height="15" fill="rgb(250,105,47)" fg:x="4303" fg:w="1"/><text x="99.8104%" y="287.50"></text></g><g><title>__dynamic_cast (1 samples, 0.02%)</title><rect x="99.5604%" y="261" width="0.0231%" height="15" fill="rgb(230,72,3)" fg:x="4303" fg:w="1"/><text x="99.8104%" y="271.50"></text></g><g><title>urdf::parseCollision (1 samples, 0.02%)</title><rect x="99.5835%" y="341" width="0.0231%" height="15" fill="rgb(232,218,39)" fg:x="4304" fg:w="1"/><text x="99.8335%" y="351.50"></text></g><g><title>urdf::parsePose (1 samples, 0.02%)</title><rect x="99.5835%" y="325" width="0.0231%" height="15" fill="rgb(248,166,6)" fg:x="4304" fg:w="1"/><text x="99.8335%" y="335.50"></text></g><g><title>urdf::Vector3::init (1 samples, 0.02%)</title><rect x="99.5835%" y="309" width="0.0231%" height="15" fill="rgb(247,89,20)" fg:x="4304" fg:w="1"/><text x="99.8335%" y="319.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="99.5835%" y="293" width="0.0231%" height="15" fill="rgb(248,130,54)" fg:x="4304" fg:w="1"/><text x="99.8335%" y="303.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="99.5835%" y="277" width="0.0231%" height="15" fill="rgb(234,196,4)" fg:x="4304" fg:w="1"/><text x="99.8335%" y="287.50"></text></g><g><title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="99.5835%" y="261" width="0.0231%" height="15" fill="rgb(250,143,31)" fg:x="4304" fg:w="1"/><text x="99.8335%" y="271.50"></text></g><g><title>urdf::parseCylinder (1 samples, 0.02%)</title><rect x="99.6067%" y="309" width="0.0231%" height="15" fill="rgb(211,110,34)" fg:x="4305" fg:w="1"/><text x="99.8567%" y="319.50"></text></g><g><title>TiXmlElement::Attribute (1 samples, 0.02%)</title><rect x="99.6067%" y="293" width="0.0231%" height="15" fill="rgb(215,124,48)" fg:x="4305" fg:w="1"/><text x="99.8567%" y="303.50"></text></g><g><title>TiXmlAttributeSet::Find (1 samples, 0.02%)</title><rect x="99.6067%" y="277" width="0.0231%" height="15" fill="rgb(216,46,13)" fg:x="4305" fg:w="1"/><text x="99.8567%" y="287.50"></text></g><g><title>urdf::parseGeometry (2 samples, 0.05%)</title><rect x="99.6067%" y="325" width="0.0463%" height="15" fill="rgb(205,184,25)" fg:x="4305" fg:w="2"/><text x="99.8567%" y="335.50"></text></g><g><title>urdf::parseMesh (1 samples, 0.02%)</title><rect x="99.6298%" y="309" width="0.0231%" height="15" fill="rgb(228,1,10)" fg:x="4306" fg:w="1"/><text x="99.8798%" y="319.50"></text></g><g><title>urdf::Vector3::init (1 samples, 0.02%)</title><rect x="99.6298%" y="293" width="0.0231%" height="15" fill="rgb(213,116,27)" fg:x="4306" fg:w="1"/><text x="99.8798%" y="303.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="99.6298%" y="277" width="0.0231%" height="15" fill="rgb(241,95,50)" fg:x="4306" fg:w="1"/><text x="99.8798%" y="287.50"></text></g><g><title>operator new (1 samples, 0.02%)</title><rect x="99.6298%" y="261" width="0.0231%" height="15" fill="rgb(238,48,32)" fg:x="4306" fg:w="1"/><text x="99.8798%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="99.6298%" y="245" width="0.0231%" height="15" fill="rgb(235,113,49)" fg:x="4306" fg:w="1"/><text x="99.8798%" y="255.50"></text></g><g><title>[libc.so.6] (4,145 samples, 95.90%)</title><rect x="3.7714%" y="549" width="95.9047%" height="15" fill="rgb(205,127,43)" fg:x="163" fg:w="4145"/><text x="4.0214%" y="559.50">[libc.so.6]</text></g><g><title>[libc.so.6] (4,145 samples, 95.90%)</title><rect x="3.7714%" y="533" width="95.9047%" height="15" fill="rgb(250,162,2)" fg:x="163" fg:w="4145"/><text x="4.0214%" y="543.50">[libc.so.6]</text></g><g><title>main (4,145 samples, 95.90%)</title><rect x="3.7714%" y="517" width="95.9047%" height="15" fill="rgb(220,13,41)" fg:x="163" fg:w="4145"/><text x="4.0214%" y="527.50">main</text></g><g><title>benchmark::RunSpecifiedBenchmarks (4,145 samples, 95.90%)</title><rect x="3.7714%" y="501" width="95.9047%" height="15" fill="rgb(249,221,25)" fg:x="163" fg:w="4145"/><text x="4.0214%" y="511.50">benchmark::RunSpecifiedBenchmarks</text></g><g><title>benchmark::internal::RunBenchmark (4,145 samples, 95.90%)</title><rect x="3.7714%" y="485" width="95.9047%" height="15" fill="rgb(215,208,19)" fg:x="163" fg:w="4145"/><text x="4.0214%" y="495.50">benchmark::internal::RunBenchmark</text></g><g><title>benchmark::internal::(anonymous namespace)::RunInThread (4,145 samples, 95.90%)</title><rect x="3.7714%" y="469" width="95.9047%" height="15" fill="rgb(236,175,2)" fg:x="163" fg:w="4145"/><text x="4.0214%" y="479.50">benchmark::internal::(anonymous namespace)::RunInThread</text></g><g><title>benchmark::internal::BenchmarkInstance::Run (4,145 samples, 95.90%)</title><rect x="3.7714%" y="453" width="95.9047%" height="15" fill="rgb(241,52,2)" fg:x="163" fg:w="4145"/><text x="4.0214%" y="463.50">benchmark::internal::BenchmarkInstance::Run</text></g><g><title>BM_croc_fddp (4,145 samples, 95.90%)</title><rect x="3.7714%" y="437" width="95.9047%" height="15" fill="rgb(248,140,14)" fg:x="163" fg:w="4145"/><text x="4.0214%" y="447.50">BM_croc_fddp</text></g><g><title>defineCrocoddylProblem (32 samples, 0.74%)</title><rect x="98.9357%" y="421" width="0.7404%" height="15" fill="rgb(253,22,42)" fg:x="4276" fg:w="32"/><text x="99.1857%" y="431.50"></text></g><g><title>pinocchio::urdf::details::parseRootTree (13 samples, 0.30%)</title><rect x="99.3753%" y="405" width="0.3008%" height="15" fill="rgb(234,61,47)" fg:x="4295" fg:w="13"/><text x="99.6253%" y="415.50"></text></g><g><title>urdf::parseURDFFile (12 samples, 0.28%)</title><rect x="99.3984%" y="389" width="0.2776%" height="15" fill="rgb(208,226,15)" fg:x="4296" fg:w="12"/><text x="99.6484%" y="399.50"></text></g><g><title>urdf::parseURDF (8 samples, 0.19%)</title><rect x="99.4910%" y="373" width="0.1851%" height="15" fill="rgb(217,221,4)" fg:x="4300" fg:w="8"/><text x="99.7410%" y="383.50"></text></g><g><title>urdf::parseLink (4 samples, 0.09%)</title><rect x="99.5835%" y="357" width="0.0925%" height="15" fill="rgb(212,174,34)" fg:x="4304" fg:w="4"/><text x="99.8335%" y="367.50"></text></g><g><title>urdf::parseVisual (3 samples, 0.07%)</title><rect x="99.6067%" y="341" width="0.0694%" height="15" fill="rgb(253,83,4)" fg:x="4305" fg:w="3"/><text x="99.8567%" y="351.50"></text></g><g><title>urdf::parsePose (1 samples, 0.02%)</title><rect x="99.6529%" y="325" width="0.0231%" height="15" fill="rgb(250,195,49)" fg:x="4307" fg:w="1"/><text x="99.9029%" y="335.50"></text></g><g><title>urdf::Vector3::init (1 samples, 0.02%)</title><rect x="99.6529%" y="309" width="0.0231%" height="15" fill="rgb(241,192,25)" fg:x="4307" fg:w="1"/><text x="99.9029%" y="319.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.02%)</title><rect x="99.6529%" y="293" width="0.0231%" height="15" fill="rgb(208,124,10)" fg:x="4307" fg:w="1"/><text x="99.9029%" y="303.50"></text></g><g><title>std::ios_base::_M_init (1 samples, 0.02%)</title><rect x="99.6529%" y="277" width="0.0231%" height="15" fill="rgb(222,33,0)" fg:x="4307" fg:w="1"/><text x="99.9029%" y="287.50"></text></g><g><title>std::locale::locale (1 samples, 0.02%)</title><rect x="99.6529%" y="261" width="0.0231%" height="15" fill="rgb(234,209,28)" fg:x="4307" fg:w="1"/><text x="99.9029%" y="271.50"></text></g><g><title>std::locale::_S_initialize (1 samples, 0.02%)</title><rect x="99.6529%" y="245" width="0.0231%" height="15" fill="rgb(224,11,23)" fg:x="4307" fg:w="1"/><text x="99.9029%" y="255.50"></text></g><g><title>std::locale::_S_initialize (1 samples, 0.02%)</title><rect x="99.6529%" y="229" width="0.0231%" height="15" fill="rgb(232,99,1)" fg:x="4307" fg:w="1"/><text x="99.9029%" y="239.50"></text></g><g><title>pthread_once@plt (1 samples, 0.02%)</title><rect x="99.6529%" y="213" width="0.0231%" height="15" fill="rgb(237,95,45)" fg:x="4307" fg:w="1"/><text x="99.9029%" y="223.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.02%)</title><rect x="99.6761%" y="485" width="0.0231%" height="15" fill="rgb(208,109,11)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="495.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.02%)</title><rect x="99.6761%" y="469" width="0.0231%" height="15" fill="rgb(216,190,48)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="479.50"></text></g><g><title>openaux (1 samples, 0.02%)</title><rect x="99.6761%" y="453" width="0.0231%" height="15" fill="rgb(251,171,36)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="463.50"></text></g><g><title>_dl_map_object (1 samples, 0.02%)</title><rect x="99.6761%" y="437" width="0.0231%" height="15" fill="rgb(230,62,22)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="447.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.02%)</title><rect x="99.6761%" y="421" width="0.0231%" height="15" fill="rgb(225,114,35)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="431.50"></text></g><g><title>_dl_map_segments (1 samples, 0.02%)</title><rect x="99.6761%" y="405" width="0.0231%" height="15" fill="rgb(215,118,42)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="415.50"></text></g><g><title>__mmap64 (1 samples, 0.02%)</title><rect x="99.6761%" y="389" width="0.0231%" height="15" fill="rgb(243,119,21)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="399.50"></text></g><g><title>__mmap64 (1 samples, 0.02%)</title><rect x="99.6761%" y="373" width="0.0231%" height="15" fill="rgb(252,177,53)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="99.6761%" y="357" width="0.0231%" height="15" fill="rgb(237,209,29)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="367.50"></text></g><g><title>do_syscall_64 (1 samples, 0.02%)</title><rect x="99.6761%" y="341" width="0.0231%" height="15" fill="rgb(212,65,23)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="351.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.02%)</title><rect x="99.6761%" y="325" width="0.0231%" height="15" fill="rgb(230,222,46)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="335.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.02%)</title><rect x="99.6761%" y="309" width="0.0231%" height="15" fill="rgb(215,135,32)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="319.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.02%)</title><rect x="99.6761%" y="293" width="0.0231%" height="15" fill="rgb(246,101,22)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="303.50"></text></g><g><title>do_mmap (1 samples, 0.02%)</title><rect x="99.6761%" y="277" width="0.0231%" height="15" fill="rgb(206,107,13)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="287.50"></text></g><g><title>mmap_region (1 samples, 0.02%)</title><rect x="99.6761%" y="261" width="0.0231%" height="15" fill="rgb(250,100,44)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="271.50"></text></g><g><title>perf_event_mmap (1 samples, 0.02%)</title><rect x="99.6761%" y="245" width="0.0231%" height="15" fill="rgb(231,147,38)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="255.50"></text></g><g><title>perf_event_mmap_event (1 samples, 0.02%)</title><rect x="99.6761%" y="229" width="0.0231%" height="15" fill="rgb(229,8,40)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="239.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.02%)</title><rect x="99.6761%" y="213" width="0.0231%" height="15" fill="rgb(221,135,30)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="223.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.02%)</title><rect x="99.6761%" y="197" width="0.0231%" height="15" fill="rgb(249,193,18)" fg:x="4308" fg:w="1"/><text x="99.9261%" y="207.50"></text></g><g><title>_start (4,147 samples, 95.95%)</title><rect x="3.7714%" y="565" width="95.9509%" height="15" fill="rgb(209,133,39)" fg:x="163" fg:w="4147"/><text x="4.0214%" y="575.50">_start</text></g><g><title>_dl_start (2 samples, 0.05%)</title><rect x="99.6761%" y="549" width="0.0463%" height="15" fill="rgb(232,100,14)" fg:x="4308" fg:w="2"/><text x="99.9261%" y="559.50"></text></g><g><title>_dl_start_final (2 samples, 0.05%)</title><rect x="99.6761%" y="533" width="0.0463%" height="15" fill="rgb(224,185,1)" fg:x="4308" fg:w="2"/><text x="99.9261%" y="543.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.05%)</title><rect x="99.6761%" y="517" width="0.0463%" height="15" fill="rgb(223,139,8)" fg:x="4308" fg:w="2"/><text x="99.9261%" y="527.50"></text></g><g><title>dl_main (2 samples, 0.05%)</title><rect x="99.6761%" y="501" width="0.0463%" height="15" fill="rgb(232,213,38)" fg:x="4308" fg:w="2"/><text x="99.9261%" y="511.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.02%)</title><rect x="99.6992%" y="485" width="0.0231%" height="15" fill="rgb(207,94,22)" fg:x="4309" fg:w="1"/><text x="99.9492%" y="495.50"></text></g><g><title>elf_dynamic_do_Rela (1 samples, 0.02%)</title><rect x="99.6992%" y="469" width="0.0231%" height="15" fill="rgb(219,183,54)" fg:x="4309" fg:w="1"/><text x="99.9492%" y="479.50"></text></g><g><title>elf_machine_rela (1 samples, 0.02%)</title><rect x="99.6992%" y="453" width="0.0231%" height="15" fill="rgb(216,185,54)" fg:x="4309" fg:w="1"/><text x="99.9492%" y="463.50"></text></g><g><title>resolve_map (1 samples, 0.02%)</title><rect x="99.6992%" y="437" width="0.0231%" height="15" fill="rgb(254,217,39)" fg:x="4309" fg:w="1"/><text x="99.9492%" y="447.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.02%)</title><rect x="99.6992%" y="421" width="0.0231%" height="15" fill="rgb(240,178,23)" fg:x="4309" fg:w="1"/><text x="99.9492%" y="431.50"></text></g><g><title>do_lookup_x (1 samples, 0.02%)</title><rect x="99.6992%" y="405" width="0.0231%" height="15" fill="rgb(218,11,47)" fg:x="4309" fg:w="1"/><text x="99.9492%" y="415.50"></text></g><g><title>crocoddyl::ShootingProblemTpl&lt;double&gt;::calcDiff (1 samples, 0.02%)</title><rect x="99.7224%" y="565" width="0.0231%" height="15" fill="rgb(218,51,51)" fg:x="4310" fg:w="1"/><text x="99.9724%" y="575.50"></text></g><g><title>crocoddyl::SolverDDP::backwardPass (1 samples, 0.02%)</title><rect x="99.7455%" y="565" width="0.0231%" height="15" fill="rgb(238,126,27)" fg:x="4311" fg:w="1"/><text x="99.9955%" y="575.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.02%)</title><rect x="99.7686%" y="533" width="0.0231%" height="15" fill="rgb(249,202,22)" fg:x="4312" fg:w="1"/><text x="100.0186%" y="543.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.02%)</title><rect x="99.7686%" y="517" width="0.0231%" height="15" fill="rgb(254,195,49)" fg:x="4312" fg:w="1"/><text x="100.0186%" y="527.50"></text></g><g><title>bprm_execve (1 samples, 0.02%)</title><rect x="99.7686%" y="501" width="0.0231%" height="15" fill="rgb(208,123,14)" fg:x="4312" fg:w="1"/><text x="100.0186%" y="511.50"></text></g><g><title>bprm_execve.part.0 (1 samples, 0.02%)</title><rect x="99.7686%" y="485" width="0.0231%" height="15" fill="rgb(224,200,8)" fg:x="4312" fg:w="1"/><text x="100.0186%" y="495.50"></text></g><g><title>exec_binprm (1 samples, 0.02%)</title><rect x="99.7686%" y="469" width="0.0231%" height="15" fill="rgb(217,61,36)" fg:x="4312" fg:w="1"/><text x="100.0186%" y="479.50"></text></g><g><title>search_binary_handler (1 samples, 0.02%)</title><rect x="99.7686%" y="453" width="0.0231%" height="15" fill="rgb(206,35,45)" fg:x="4312" fg:w="1"/><text x="100.0186%" y="463.50"></text></g><g><title>load_elf_binary (1 samples, 0.02%)</title><rect x="99.7686%" y="437" width="0.0231%" height="15" fill="rgb(217,65,33)" fg:x="4312" fg:w="1"/><text x="100.0186%" y="447.50"></text></g><g><title>setup_arg_pages (1 samples, 0.02%)</title><rect x="99.7686%" y="421" width="0.0231%" height="15" fill="rgb(222,158,48)" fg:x="4312" fg:w="1"/><text x="100.0186%" y="431.50"></text></g><g><title>shift_arg_pages (1 samples, 0.02%)</title><rect x="99.7686%" y="405" width="0.0231%" height="15" fill="rgb(254,2,54)" fg:x="4312" fg:w="1"/><text x="100.0186%" y="415.50"></text></g><g><title>__vma_adjust (1 samples, 0.02%)</title><rect x="99.7686%" y="389" width="0.0231%" height="15" fill="rgb(250,143,38)" fg:x="4312" fg:w="1"/><text x="100.0186%" y="399.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="99.7918%" y="437" width="0.0231%" height="15" fill="rgb(248,25,0)" fg:x="4313" fg:w="1"/><text x="100.0418%" y="447.50"></text></g><g><title>tlb_batch_pages_flush (1 samples, 0.02%)</title><rect x="99.7918%" y="421" width="0.0231%" height="15" fill="rgb(206,152,27)" fg:x="4313" fg:w="1"/><text x="100.0418%" y="431.50"></text></g><g><title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="99.7918%" y="405" width="0.0231%" height="15" fill="rgb(240,77,30)" fg:x="4313" fg:w="1"/><text x="100.0418%" y="415.50"></text></g><g><title>free_swap_cache (1 samples, 0.02%)</title><rect x="99.7918%" y="389" width="0.0231%" height="15" fill="rgb(231,5,3)" fg:x="4313" fg:w="1"/><text x="100.0418%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="99.7686%" y="565" width="0.0694%" height="15" fill="rgb(207,226,32)" fg:x="4312" fg:w="3"/><text x="100.0186%" y="575.50"></text></g><g><title>do_syscall_64 (3 samples, 0.07%)</title><rect x="99.7686%" y="549" width="0.0694%" height="15" fill="rgb(222,207,47)" fg:x="4312" fg:w="3"/><text x="100.0186%" y="559.50"></text></g><g><title>__x64_sys_exit_group (2 samples, 0.05%)</title><rect x="99.7918%" y="533" width="0.0463%" height="15" fill="rgb(229,115,45)" fg:x="4313" fg:w="2"/><text x="100.0418%" y="543.50"></text></g><g><title>do_group_exit (2 samples, 0.05%)</title><rect x="99.7918%" y="517" width="0.0463%" height="15" fill="rgb(224,191,6)" fg:x="4313" fg:w="2"/><text x="100.0418%" y="527.50"></text></g><g><title>do_exit (2 samples, 0.05%)</title><rect x="99.7918%" y="501" width="0.0463%" height="15" fill="rgb(230,227,24)" fg:x="4313" fg:w="2"/><text x="100.0418%" y="511.50"></text></g><g><title>exit_mm (2 samples, 0.05%)</title><rect x="99.7918%" y="485" width="0.0463%" height="15" fill="rgb(228,80,19)" fg:x="4313" fg:w="2"/><text x="100.0418%" y="495.50"></text></g><g><title>mmput (2 samples, 0.05%)</title><rect x="99.7918%" y="469" width="0.0463%" height="15" fill="rgb(247,229,0)" fg:x="4313" fg:w="2"/><text x="100.0418%" y="479.50"></text></g><g><title>exit_mmap (2 samples, 0.05%)</title><rect x="99.7918%" y="453" width="0.0463%" height="15" fill="rgb(237,194,15)" fg:x="4313" fg:w="2"/><text x="100.0418%" y="463.50"></text></g><g><title>unmap_vmas (1 samples, 0.02%)</title><rect x="99.8149%" y="437" width="0.0231%" height="15" fill="rgb(219,203,20)" fg:x="4314" fg:w="1"/><text x="100.0649%" y="447.50"></text></g><g><title>unmap_single_vma (1 samples, 0.02%)</title><rect x="99.8149%" y="421" width="0.0231%" height="15" fill="rgb(234,128,8)" fg:x="4314" fg:w="1"/><text x="100.0649%" y="431.50"></text></g><g><title>unmap_page_range (1 samples, 0.02%)</title><rect x="99.8149%" y="405" width="0.0231%" height="15" fill="rgb(248,202,8)" fg:x="4314" fg:w="1"/><text x="100.0649%" y="415.50"></text></g><g><title>zap_pmd_range.isra.0 (1 samples, 0.02%)</title><rect x="99.8149%" y="389" width="0.0231%" height="15" fill="rgb(206,104,37)" fg:x="4314" fg:w="1"/><text x="100.0649%" y="399.50"></text></g><g><title>zap_pte_range (1 samples, 0.02%)</title><rect x="99.8149%" y="373" width="0.0231%" height="15" fill="rgb(223,8,27)" fg:x="4314" fg:w="1"/><text x="100.0649%" y="383.50"></text></g><g><title>example-croc-ta (4,317 samples, 99.88%)</title><rect x="0.0000%" y="581" width="99.8843%" height="15" fill="rgb(216,217,28)" fg:x="0" fg:w="4317"/><text x="0.2500%" y="591.50">example-croc-ta</text></g><g><title>pinocchio::InertiaTpl&lt;double, 0&gt;::__mult__&lt;pinocchio::MotionRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; const&gt;, pinocchio::ForceRef&lt;Eigen::Block&lt;Eigen::Matrix&lt;double, 6, -1, 0, 6, -1&gt;, 6, 1, true&gt; &gt; &gt; (2 samples, 0.05%)</title><rect x="99.8380%" y="565" width="0.0463%" height="15" fill="rgb(249,199,1)" fg:x="4315" fg:w="2"/><text x="100.0880%" y="575.50"></text></g><g><title>all (4,322 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(240,85,17)" fg:x="0" fg:w="4322"/><text x="0.2500%" y="607.50"></text></g><g><title>perf-exec (5 samples, 0.12%)</title><rect x="99.8843%" y="581" width="0.1157%" height="15" fill="rgb(206,108,45)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="99.8843%" y="565" width="0.1157%" height="15" fill="rgb(245,210,41)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="575.50"></text></g><g><title>do_syscall_64 (5 samples, 0.12%)</title><rect x="99.8843%" y="549" width="0.1157%" height="15" fill="rgb(206,13,37)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="559.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.12%)</title><rect x="99.8843%" y="533" width="0.1157%" height="15" fill="rgb(250,61,18)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="543.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.12%)</title><rect x="99.8843%" y="517" width="0.1157%" height="15" fill="rgb(235,172,48)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="527.50"></text></g><g><title>bprm_execve (5 samples, 0.12%)</title><rect x="99.8843%" y="501" width="0.1157%" height="15" fill="rgb(249,201,17)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="511.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.12%)</title><rect x="99.8843%" y="485" width="0.1157%" height="15" fill="rgb(219,208,6)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="495.50"></text></g><g><title>exec_binprm (5 samples, 0.12%)</title><rect x="99.8843%" y="469" width="0.1157%" height="15" fill="rgb(248,31,23)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="479.50"></text></g><g><title>search_binary_handler (5 samples, 0.12%)</title><rect x="99.8843%" y="453" width="0.1157%" height="15" fill="rgb(245,15,42)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="463.50"></text></g><g><title>load_elf_binary (5 samples, 0.12%)</title><rect x="99.8843%" y="437" width="0.1157%" height="15" fill="rgb(222,217,39)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="447.50"></text></g><g><title>begin_new_exec (5 samples, 0.12%)</title><rect x="99.8843%" y="421" width="0.1157%" height="15" fill="rgb(210,219,27)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="431.50"></text></g><g><title>perf_event_exec (5 samples, 0.12%)</title><rect x="99.8843%" y="405" width="0.1157%" height="15" fill="rgb(252,166,36)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="415.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.12%)</title><rect x="99.8843%" y="389" width="0.1157%" height="15" fill="rgb(245,132,34)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="399.50"></text></g><g><title>ctx_resched (5 samples, 0.12%)</title><rect x="99.8843%" y="373" width="0.1157%" height="15" fill="rgb(236,54,3)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="383.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.12%)</title><rect x="99.8843%" y="357" width="0.1157%" height="15" fill="rgb(241,173,43)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="367.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.12%)</title><rect x="99.8843%" y="341" width="0.1157%" height="15" fill="rgb(215,190,9)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="351.50"></text></g><g><title>native_write_msr (5 samples, 0.12%)</title><rect x="99.8843%" y="325" width="0.1157%" height="15" fill="rgb(242,101,16)" fg:x="4317" fg:w="5"/><text x="100.1343%" y="335.50"></text></g></svg></svg>
